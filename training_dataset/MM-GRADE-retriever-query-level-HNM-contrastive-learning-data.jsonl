{"q_img": "source_images/partition_manager/partition_manager_1.png", "q_text": "What could be the reason for the error message \"invalid command name '-hypergraph_file'\" when running the `triton_part_hypergraph` command with the parameters shown in the screenshot?", "pos_doc": "id:partition_manager_5\n### Partition Hypergraph Netlist \n\nThis command performs hypergraph netlist partitioning.\n\n```tcl\ntriton_part_hypergraph\n    -hypergraph_file hypergraph_file  \n    -num_parts num_parts  \n    -balance_constraint balance_constraint \n    [-base_balance base_balance]\n    [-scale_factor scale_factor]\n    [-seed seed] \n    [-vertex_dimension vertex_dimension] \n    [-hyperedge_dimension hyperedge_dimension] \n    [-placement_dimension placement_dimension] \n    [-fixed_file fixed_file] \n    [-community_file community_file] \n    [-group_file group_file] \n    [-placement_file placement_file] \n    [-e_wt_factors e_wt_factors] \n    [-v_wt_factors <v_wt_factors>] \n    [-placement_wt_factors <placement_wt_factors>]\n    [-thr_coarsen_hyperedge_size_skip thr_coarsen_hyperedge_size_skip] \n    [-thr_coarsen_vertices thr_coarsen_vertices] \n    [-thr_coarsen_hyperedges thr_coarsen_hyperedges] \n    [-coarsening_ratio coarsening_ratio] \n    [-max_coarsen_iters max_coarsen_iters] \n    [-adj_diff_ratio adj_diff_ratio] \n    [-min_num_vertices_each_part min_num_vertices_each_part] \n    [-num_initial_solutions num_initial_solutions] \n    [-num_best_initial_solutions num_best_initial_solutions] \n    [-refiner_iters refiner_iters] \n    [-max_moves max_moves] \n    [-early_stop_ratio early_stop_ratio] \n    [-total_corking_passes total_corking_passes] \n    [-v_cycle_flag v_cycle_flag ] \n    [-max_num_vcycle max_num_vcycle] \n    [-num_coarsen_solutions num_coarsen_solutions] \n    [-num_vertices_threshold_ilp num_vertices_threshold_ilp] \n    [-global_net_threshold global_net_threshold] \n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-num_parts` | Number of partitions. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-balance_constraint` | Allowed imbalance between blocks. The default value is `1.0`, and the allowed values are floats. |\n| `-base_balance` | Tcl list of baseline imbalance between partitions. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-scale_factor` | KIV. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-seed` | Random seed. The default value is `0`, and the allowed values are integers `[-MAX_INT, MAX_INT]`. |\n| `-vertex_dimension` | Number of vertices in the hypergraph. The default value is `1`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-hyperedge_dimension` | Number of hyperedges in hypergraph. The default value is `1`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-placement_dimension` | Number of dimensions for canvas if placement information is provided. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-hypergraph_file` | Path to hypergraph file. |\n| `-fixed_file` | Path to fixed vertices constraint file. |\n| `-community_file` | Path to `community` attributes file to guide the partitioning process. |\n| `-group_file` | Path to `stay together` attributes file. |\n| `-placement_file` | Placement information file, each line corresponds to a group fixed vertices, community, and placement attributes following the [hMETIS](https://course.ece.cmu.edu/~ee760/760docs/hMetisManual.pdf) format. |\n| `-e_wt_factors` | Hyperedge weight factor. |\n| `-v_wt_factors` | Vertex weight factors. |\n| `-placement_wt_factors` | Placement weight factors. |\n| `-thr_coarsen_hyperedge_size_skip` | Threshold for ignoring large hyperedge (default 200, integer). |\n| `-thr_coarsen_vertices` | Number of vertices of coarsest hypergraph (default 10, integer). |\n| `-thr_coarsen_hyperedges` | Number of vertices of coarsest hypergraph (default 50, integer). |\n| `-coarsening_ratio` | Coarsening ratio of two adjacent hypergraphs (default 1.6, float). |\n| `-max_coarsen_iters` | Number of iterations (default 30, integer). |\n| `-adj_diff_ratio` | Minimum difference of two adjacent hypergraphs (default 0.0001, float). |\n| `-min_num_vertices_each_part` | Minimum number of vertices in each partition (default 4, integer). |\n| `-num_initial_solutions` | Number of initial solutions (default 50, integer). |\n| `-num_best_initial_solutions` | Number of top initial solutions to filter out (default 10, integer). |\n| `-refiner_iters` | Refinement iterations (default 10, integer). |\n| `-max_moves` | The allowed moves for each Fiduccia-Mattheyes (FM) algorithm pass or greedy refinement (default 60, integer). |\n| `-early_stop_ratio` | Describes the ratio $e$ where if the $n_{moved vertices} > n_{vertices} * e$, the tool exits the current FM pass. The intention behind this is that most of the gains are achieved by the first few FM moves. (default 0.5, float). |\n| `-total_corking_passes` | Maximum level of traversing the buckets to solve the \"corking effect\" (default 25, integer). |\n| `-v_cycle_flag` | Disables v-cycle is used to refine partitions (default true, bool). |\n| `-max_num_vcycle` | Maximum number of `vcycles` (default 1, integer). |\n| `-num_coarsen_solutions` | Number of coarsening solutions with different randoms seed (default 3, integer). |\n| `-num_vertices_threshold_ilp` | Describes threshold $t$, the number of vertices used for integer linear programming (ILP) partitioning. if $n_{vertices} > t$, do not use ILP-based partitioning.(default 50, integer). |\n| `-global_net_threshold` | If the net is larger than this, it will be ignored by TritonPart (default 1000, integer). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/partition_manager/partition_manager_1.png"], "neg_text": ["Why does the partitioning process report only 1 timing-critical path out of 52 total timing paths, and how can the TritonPart algorithm be adjusted to improve the identification of timing-critical paths?"], "q_type": "it", "c_type": "mix", "reference": ["partition_manager_5"]}
{"q_img": "source_images/partition_manager/partition_manager_1.png", "q_text": "Why am I getting the error \"invalid command name '-hypergraph_file'\" when trying to partition my netlist using the `triton_part_hypergraph` command?", "pos_doc": "id:partition_manager_5\n### Partition Hypergraph Netlist \n\nThis command performs hypergraph netlist partitioning.\n\n```tcl\ntriton_part_hypergraph\n    -hypergraph_file hypergraph_file  \n    -num_parts num_parts  \n    -balance_constraint balance_constraint \n    [-base_balance base_balance]\n    [-scale_factor scale_factor]\n    [-seed seed] \n    [-vertex_dimension vertex_dimension] \n    [-hyperedge_dimension hyperedge_dimension] \n    [-placement_dimension placement_dimension] \n    [-fixed_file fixed_file] \n    [-community_file community_file] \n    [-group_file group_file] \n    [-placement_file placement_file] \n    [-e_wt_factors e_wt_factors] \n    [-v_wt_factors <v_wt_factors>] \n    [-placement_wt_factors <placement_wt_factors>]\n    [-thr_coarsen_hyperedge_size_skip thr_coarsen_hyperedge_size_skip] \n    [-thr_coarsen_vertices thr_coarsen_vertices] \n    [-thr_coarsen_hyperedges thr_coarsen_hyperedges] \n    [-coarsening_ratio coarsening_ratio] \n    [-max_coarsen_iters max_coarsen_iters] \n    [-adj_diff_ratio adj_diff_ratio] \n    [-min_num_vertices_each_part min_num_vertices_each_part] \n    [-num_initial_solutions num_initial_solutions] \n    [-num_best_initial_solutions num_best_initial_solutions] \n    [-refiner_iters refiner_iters] \n    [-max_moves max_moves] \n    [-early_stop_ratio early_stop_ratio] \n    [-total_corking_passes total_corking_passes] \n    [-v_cycle_flag v_cycle_flag ] \n    [-max_num_vcycle max_num_vcycle] \n    [-num_coarsen_solutions num_coarsen_solutions] \n    [-num_vertices_threshold_ilp num_vertices_threshold_ilp] \n    [-global_net_threshold global_net_threshold] \n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-num_parts` | Number of partitions. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-balance_constraint` | Allowed imbalance between blocks. The default value is `1.0`, and the allowed values are floats. |\n| `-base_balance` | Tcl list of baseline imbalance between partitions. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-scale_factor` | KIV. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-seed` | Random seed. The default value is `0`, and the allowed values are integers `[-MAX_INT, MAX_INT]`. |\n| `-vertex_dimension` | Number of vertices in the hypergraph. The default value is `1`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-hyperedge_dimension` | Number of hyperedges in hypergraph. The default value is `1`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-placement_dimension` | Number of dimensions for canvas if placement information is provided. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-hypergraph_file` | Path to hypergraph file. |\n| `-fixed_file` | Path to fixed vertices constraint file. |\n| `-community_file` | Path to `community` attributes file to guide the partitioning process. |\n| `-group_file` | Path to `stay together` attributes file. |\n| `-placement_file` | Placement information file, each line corresponds to a group fixed vertices, community, and placement attributes following the [hMETIS](https://course.ece.cmu.edu/~ee760/760docs/hMetisManual.pdf) format. |\n| `-e_wt_factors` | Hyperedge weight factor. |\n| `-v_wt_factors` | Vertex weight factors. |\n| `-placement_wt_factors` | Placement weight factors. |\n| `-thr_coarsen_hyperedge_size_skip` | Threshold for ignoring large hyperedge (default 200, integer). |\n| `-thr_coarsen_vertices` | Number of vertices of coarsest hypergraph (default 10, integer). |\n| `-thr_coarsen_hyperedges` | Number of vertices of coarsest hypergraph (default 50, integer). |\n| `-coarsening_ratio` | Coarsening ratio of two adjacent hypergraphs (default 1.6, float). |\n| `-max_coarsen_iters` | Number of iterations (default 30, integer). |\n| `-adj_diff_ratio` | Minimum difference of two adjacent hypergraphs (default 0.0001, float). |\n| `-min_num_vertices_each_part` | Minimum number of vertices in each partition (default 4, integer). |\n| `-num_initial_solutions` | Number of initial solutions (default 50, integer). |\n| `-num_best_initial_solutions` | Number of top initial solutions to filter out (default 10, integer). |\n| `-refiner_iters` | Refinement iterations (default 10, integer). |\n| `-max_moves` | The allowed moves for each Fiduccia-Mattheyes (FM) algorithm pass or greedy refinement (default 60, integer). |\n| `-early_stop_ratio` | Describes the ratio $e$ where if the $n_{moved vertices} > n_{vertices} * e$, the tool exits the current FM pass. The intention behind this is that most of the gains are achieved by the first few FM moves. (default 0.5, float). |\n| `-total_corking_passes` | Maximum level of traversing the buckets to solve the \"corking effect\" (default 25, integer). |\n| `-v_cycle_flag` | Disables v-cycle is used to refine partitions (default true, bool). |\n| `-max_num_vcycle` | Maximum number of `vcycles` (default 1, integer). |\n| `-num_coarsen_solutions` | Number of coarsening solutions with different randoms seed (default 3, integer). |\n| `-num_vertices_threshold_ilp` | Describes threshold $t$, the number of vertices used for integer linear programming (ILP) partitioning. if $n_{vertices} > t$, do not use ILP-based partitioning.(default 50, integer). |\n| `-global_net_threshold` | If the net is larger than this, it will be ignored by TritonPart (default 1000, integer). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/partition_manager/partition_manager_1.png"], "neg_text": ["Why does the partitioning process report only 1 timing-critical path out of 52 total timing paths, and how can the TritonPart algorithm be adjusted to improve the identification of timing-critical paths?"], "q_type": "it", "c_type": "mix", "reference": ["partition_manager_5"]}
{"q_img": "source_images/partition_manager/partition_manager_1.png", "q_text": "Why does the partitioning process report only 1 timing-critical path out of 52 total timing paths, and how can the TritonPart algorithm be adjusted to improve the identification of timing-critical paths?", "pos_doc": "id:partition_manager_3\n# Partition Manager\n## Main Algorithm\n\nAn overview of the TritonPart algorithm is shown below. It takes as inputs \n- Hypergraph $H(V,E)$ in `.hgr` format.\n- Vertex weight $w_v \\in \\mathcal{R}_+^m$\n- Hyperedge weight $w_e \\in \\mathcal{R}_+^n$\n- Number of blocks $K$.\n- Imbalance factor $\\epsilon$.\n- User-specified cost function $\\phi$.\n\nThere are five main steps in the main algorithm,\nmainly 1) constraints-driven coarsening,\n2) initial partitioning, 3) refinement, 4) cut-overlay clustering and\npartitioning (COCP), and 5) V-cycle refinement. The steps for the \ntiming-aware algorithm may be found in the next [section](#timing-aware-algorithm). \n\n1. Constraints-Driven Coarsening\n\nThe first step involves multilevel coarsening. Specifically, at each level,\nclusters of vertices are identified, and the merged and represented\nas a single vertex in the resulting coarser hypergraph. In this algorithm,\nthe First-Choice scheme is used, which traverses the vertices in the \nhypergraph according to a given ordering and merges pairs of vertices with\nhigh connectivity. The connectivity between a pair of vertices $(u,v)$\nis measured as follows:\n\n$$r(u, v) = \\sum_{e\\in \\{I(v)\\cap I(u)\\}} \\frac{\\langle \\alpha, w_e\\rangle}{|e|-1}$$\n\nTo efficiently manage multiple constraints, the following enhancements are \nmade to the coarsening scheme above:\n\n- **Fixed Vertex Constraint**: Fixed vertices that belong to the same partitioning block are merged into a single vertex. \n- **Grouping Constraint**: Vertices that belong to the same group are merged into a single vertex.\n- **Embedding Constraint**: The embedding information is incorporated into the heavy-edge rating function. The new connectivity is updated as follows:\n\n$$\\hat{r}(u, v) = r(u, v) + \\rho\\frac{1}{||X_u - X_v||_2}$$\n\nwhere $\\rho$ is a normalization factor set to the average distance between two\nvertex embeddings. When vertices $v_1, ... , v_t$ are merged into a single\nvertex $v_{coarse}$, the corresponding vertex embedding $X_{v_{coarse}}$\nis defined as the *center of gravity* of $t$ vertices:\n\n$$X_{v_{coarse}} = \\sum_{j=1}^{t} \\frac{||w_{v_j}||}{M} X_{v_j},\\ where\\ M= \\sum_{j=1}^t ||w_{v_j}|| $$\n\n- **Community Guidance**: Only vertices within the same community are\n  considered for merging.\n- **Tie-breaking mechanism**: If multiple neighbor pairs have the same rating\n  score, combine the lexicographically first unmatched vertex to break ties.\n\n2. Initial Partitioning\n\nAfter completing the coarsening process, an initial partitioning solution for\nthe coarsest hypergraph $H_c$ is derived. Two sub-steps are involved in this:\nthe best partitioning solution from random and VILE partitioning is chosen\nfrom $\\eta = 50$ runs as a warm-start to the ILP-based partitioner. The\noptimization is based on only the cut size rather than the cost function\n$\\phi$ to keep the runtime reasonable.\n\n3. Refinement\n\nAfter a feasible solution $H_{c_\\xi}$ is obtained by initial partitioning,\nuncoarsening and move-based refinement is performed to improve the\npartitioning solution. Three refinement heuristics are applied in sequence:\n- **$K$-way pairwise FM (PM)**: This addresses multi-way partitioning\n  as concurrent bi-partitioning problems in a restricted version of K-way\n  Fiduccia–Mattheyses (FM) algorithm. First, $\\lfloor K/2\\rfloor $ pairs of\n  blocks are obtained, with refinement-specific vertex movements restricted\n  to associated paired blocks. Next, two-way FM is concurrently performed on\n  all the block pairs. finally, a new configuration of block pairs is computed\n  at the end of the PM.\n- **Direct $K$-way FM**: Using $K$ priority queues, for each block $V_i$,\n  establish a priority queue that stores the vertices that can be potentially\n  moved from the current block to block $V_i$. This queue is ordered according\n  to the gain of the vertices. Gain is defined as the reduction in cost\n  function from the movement of the vertex from the current block to $V_i$.\n  Next, after a vertex move, each priority queue is updated independently, thus\n  enabling parallel updates via multi-threading. Next, early-stop is implemented\n  by limiting the maximum number of vertices moved to 100 per pass. Finally,\n  the *corking effect* is mitigated by traversing the priority queue belonging\n  to the vertex with the highest gain and identifying a feasible vertex move.\n- **Greedy Hyperedge Refinement (HER)**: First, randomly visit all\n  hyperedges. For each hyperedge $e$ that crosses the partition boundary,\n  determine whether a subset of vertices in $e$ can be moved without violating\n  the multi-dimensional balance constraints. The objective is to make $e$\n  entirely constrained in a block.\n\n4. Cut-Overlay Clustering and Partitioning (COCP)\n\nCut-overlay Clustering and Partitioning (COCP) is a mechanism to\ncombine multiple good-quality partitioning solutions to generate an\nimproved solution. To begin, the sets of hyperedges cut in the $\\theta$\ncandidate solutions are denoted as $E_1,..., E_\\theta \\subset E$.  First,\n$\\cup_{i=1}^\\theta E_i$ is removed from the hypergraph $H(V, E)$, resulting in\na number of connected components. Next, all vertices within each connected\ncomponent are merged to form a coarser hypergraph $H_{overlay}$. If the\nnumber of vertices in $H_{overlay}$ is less than $thr_{ilp}$, ILP-based\npartitioning is performed. If not, a single round of constraints-driven\ncoarsening is conducted to further reduce the size of $H_{overlay}$\nand generate a coarser hypergraph $H_{overlay}^{'}$. Finally, multilevel\nrefinement is performed to further improve the partitioning solution at\neach level of the hierarchy and return the improved solution $S^{'}$.\n\n5. V-Cycle Refinement\n\nCut-overlay clustering and partitioning produces a high-quality partitioning\nsolution $S^{'}$. To improve it, there are three phases similar to *hMETIS*,\nnamely multilevel coarsening, ILP-based partitioning, and refinement.\nFirstly, in multilevel partitioning, $S^{'}$ is used as a community guidance\nfor the constraints-driven coarsening. Only vertices within the same block\nare permitted to be merged to ensure that the current solution $S^{'}$\nis preserved in the coarsest hypergraph $H_{c_\\xi}$. In the ILP-based\npartitioning phase, if the number of vertices in $H_{c_\\xi}$ does not exceed\n$thr_{ilp}$, run ILP-based partitioning to improve $S^{'}$. Otherwise,\ncontinue with $S^{'}$ in successive iterations of these two steps (default\nset to 2). The refinement phase is conducted as per step 3.\n\n![](./doc/algo.webp)<center>TritonPart algorithm at a glance</center>\n\n", "neg_img": ["source_images/partition_manager/partition_manager_1.png", "source_images/partition_manager/partition_manager_1.png"], "neg_text": ["What could be the reason for the error message \"invalid command name '-hypergraph_file'\" when running the `triton_part_hypergraph` command with the parameters shown in the screenshot?", "Why am I getting the error \"invalid command name '-hypergraph_file'\" when trying to partition my netlist using the `triton_part_hypergraph` command?"], "q_type": "it", "c_type": "mix", "reference": ["partition_manager_3"]}
{"q_img": "source_images/partition_manager/partition_manager_4.png", "q_text": "Why is the timing-driven mode not supported in the partitioning process, as indicated by the warning message in the screenshot?", "pos_doc": "id:partition_manager_7\n### Partition Netlist \n\nThis command partitions the design netlist. Note that design must be loaded in memory.\n\n```tcl\ntriton_part_design\n    [-num_parts num_parts]\n    [-balance_constraint balance_constraint]\n    [-base_balance base_balance]\n    [-scale_factor scale_factor]\n    [-seed seed]\n    [-timing_aware_flag timing_aware_flag]\n    [-top_n top_n]\n    [-placement_flag placement_flag]\n    [-fence_flag fence_flag]\n    [-fence_lx fence_lx]\n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-fixed_file fixed_file]\n    [-community_file community_file]\n    [-group_file group_file]\n    [-solution_file solution_file]\n    [-net_timing_factor net_timing_factor]\n    [-path_timing_factor path_timing_factor]\n    [-path_snaking_factor path_snaking_factor]\n    [-timing_exp_factor timing_exp_factor]\n    [-extra_delay extra_delay]\n    [-guardband_flag guardband_flag]\n    [-e_wt_factors e_wt_factors]\n    [-v_wt_factors v_wt_factors]\n    [-placement_wt_factors placement_wt_factors]\n    [-thr_coarsen_hyperedge_size_skip thr_coarsen_hyperedge_size_skip]\n    [-thr_coarsen_vertices thr_coarsen_vertices]\n    [-thr_coarsen_hyperedges thr_coarsen_hyperedges]\n    [-coarsening_ratio coarsening_ratio]\n    [-max_coarsen_iters max_coarsen_iters]\n    [-adj_diff_ratio adj_diff_ratio]\n    [-min_num_vertices_each_part min_num_vertices_each_part]\n    [-num_initial_solutions num_initial_solutions]\n    [-num_best_initial_solutions num_best_initial_solutions]\n    [-refiner_iters refiner_iters]\n    [-max_moves max_moves]\n    [-early_stop_ratio early_stop_ratio]\n    [-total_corking_passes total_corking_passes]\n    [-v_cycle_flag v_cycle_flag ]\n    [-max_num_vcycle max_num_vcycle]\n    [-num_coarsen_solutions num_coarsen_solutions]\n    [-num_vertices_threshold_ilp num_vertices_threshold_ilp]\n    [-global_net_threshold global_net_threshold]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-num_parts` | Number of partitions. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-balance_constraint` | Allowed imbalance between blocks. The default value is `1.0`, and the allowed values are floats. |\n| `-base_balance` | Tcl list of baseline imbalance between partitions. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-scale_factor` | KIV. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-seed` | Random seed. The default value is `1`, and the allowed values are integers `[-MAX_INT, MAX_INT]`. |\n| `-timing_aware_flag` | Enable timing-driven mode. The default value is `true`, and the allowed values are booleans. |\n| `-top_n` | Extract the top n critical timing paths. The default value is `1000`, and the allowed values are integers `[0, MAX_INT`. |\n| `-placement_flag` | Enable placement driven partitioning. The default value is `false`, and the allowed values are booleans. |\n| `-fence_flag ` | Consider fences in the partitioning. The default value is `false`, and the allowed values are booleans. |\n| `-fence_lx ` | Fence lower left x in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_ly ` | Fence lower left y in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_ux ` | Fence upper right x in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_uy ` | Fence upper right y in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fixed_file` | Path to fixed vertices constraint file |\n| `-community_file` | Path to `community` attributes file to guide the partitioning process. |\n| `-group_file` | Path to `stay together` attributes file. |\n| `-solution_file` | Path to solution file. |\n| `-net_timing_factor` | Hyperedge timing weight factor (default 1.0, float). |\n| `-path_timing_factor` | Cutting critical timing path weight factor (default 1.0, float). |\n| `-path_snaking_factor` | Snaking a critical path weight factor (default 1.0, float). |\n| `-timing_exp_factor` | Timing exponential factor for normalized slack (default 1.0, float). |\n| `-extra_delay` | Extra delay introduced by a cut (default 1e-9, float). |\n| `-guardband_flag` | Enable timing guardband option (default false, bool). |\n| `-e_wt_factors` | Hyperedge weight factor. |\n| `-v_wt_factors` | Vertex weight factor. |\n| `-placement_wt_factors` | Placement weight factor. |\n| `-thr_coarsen_hyperedge_size_skip` | Threshold for ignoring large hyperedge. The default value is `1000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-thr_coarsen_vertices` | Number of vertices of coarsest hypergraph. The default value is `10`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-thr_coarsen_hyperedges` | Number of vertices of the coarsest hypergraph. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | Coarsening ratio of two adjacent hypergraphs. The default value is `1.5`, and the allowed values are floats. |\n| `-max_coarsen_iters` | Number of iterations. The default value is `30`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-adj_diff_ratio` | Minimum ratio difference of two adjacent hypergraphs. The default value is `0.0001`, and the allowed values are floats. |\n| `-min_num_vertices_each_part` | Minimum number of vertices in each partition. The default value is `4`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-num_initial_solutions` | Number of initial solutions. The default value is `100`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-num_best_initial_solutions` | Number of top initial solutions to filter out. The default value is `10`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-refiner_iters` | Refinement iterations. The default value is `10`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_moves` | The allowed moves for each Fiduccia-Mattheyes (FM) algorithm pass or greedy refinement. The default value is `100`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-early_stop_ratio` | Describes the ratio $e$ where if the $n_{moved vertices} > n_{vertices} * e$, the tool exists the current FM pass. The intention behind this is that most of the gains are achieved by the first few FM moves. The default value is `0.5`, and the allowed values are floats. |\n| `-total_corking_passes` | Maximum level of traversing the buckets to solve the \"corking effect\". The default value is `25`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-v_cycle_flag` | Disables v-cycle is used to refine partitions. The default value is `true`, and the allowed values are booleans. |\n| `-max_num_vcycle` | Maximum number of vcycles. The default value is `1`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-num_coarsen_solutions` | Number of coarsening solutions with different randoms seed. The default value is `4`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-num_vertices_threshold_ilp` | Describes threshold $t$, the number of vertices used for integer linear programming (ILP) partitioning. if $n_{vertices} > t$, do not use ILP-based partitioning. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-global_net_threshold` | If the net is larger than this, it will be ignored by TritonPart. The default value is `1000`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/partition_manager/partition_manager_4.png"], "neg_text": ["Why is the timing-driven mode not supported in my partitioning process, as indicated by the warning message in the log?"], "q_type": "it", "c_type": "mix", "reference": ["partition_manager_7"]}
{"q_img": "source_images/partition_manager/partition_manager_4.png", "q_text": "Why is the timing-driven mode not supported in my partitioning process, as indicated by the warning message in the log?", "pos_doc": "id:partition_manager_8\n### Evaluate Netlist Partition\n\nThis command evaluates partition design solution.\n\n```tcl\nevaluate_part_design_solution\n    [-num_parts num_parts]\n    [-balance_constraint balance_constraint]\n    [-base_balance base_balance]\n    [-scale_factor scale_factor]\n    [-timing_aware_flag timing_aware_flag]\n    [-top_n top_n]\n    [-fence_flag fence_flag]\n    [-fence_lx fence_lx]\n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-fixed_file fixed_file]\n    [-community_file community_file]\n    [-group_file group_file]\n    [-hypergraph_file hypergraph_file]\n    [-hypergraph_int_weight_file hypergraph_int_weight_file]\n    [-solution_file solution_file]\n    [-net_timing_factor net_timing_factor]\n    [-path_timing_factor path_timing_factor]\n    [-path_snaking_factor path_snaking_factor]\n    [-timing_exp_factor timing_exp_factor]\n    [-extra_delay extra_delay]\n    [-guardband_flag guardband_flag]\n    [-e_wt_factors e_wt_factors]\n    [-v_wt_factors v_wt_factors]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-num_parts` | Number of partitions. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-balance_constraint` | Allowed imbalance between blocks. The default value is `1.0`, and the allowed values are floats. |\n| `-base_balance` | Tcl list of baseline imbalance between partitions. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-scale_factor` | KIV. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-timing_aware_flag` | Enable timing-driven mode. The default value is `true`, and the allowed values are booleans. |\n| `-top_n` | Extract the top n critical timing paths. The default value is `1000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-fence_flag ` | Consider fences in the partitioning. The default value is `false`, and the allowed values are booleans. |\n| `-fence_lx ` | Fence lower left x in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_ly ` | Fence lower left y in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_ux ` | Fence upper right x in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_uy ` | Fence upper right y in microns. The default value is `0.0`, and the allowed values are floats. | \n| `-fixed_file` | Path to fixed vertices constraint file. |\n| `-community_file` | Path to `community` attributes file to guide the partitioning process. |\n| `-group_file` | Path to `stay together` attributes file. |\n| `-hypergraph_file` | Path to hypergraph file. |\n| `-hypergraph_int_weight_file` | Path to `hMETIS` format integer weight file. |\n| `-solution_file` | Path to solution file. |\n| `-net_timing_factor` | Hyperedge timing weight factor. The default value is `1.0`, and the allowed values are floats. |\n| `-path_timing_factor` | Cutting critical timing path weight factor. The default value is `1.0`, and the allowed values are floats. |\n| `-path_snaking_factor` | Snaking a critical path weight factor. The default value is `1.0`, and the allowed values are floats. |\n| `-timing_exp_factor` | Timing exponential factor for normalized slack. The default value is `1.0`, and the allowed values are floats. |\n| `-extra_delay` | Extra delay introduced by a cut. The default value is `1e-9`, and the allowed values are floats. |\n| `-guardband_flag` | Enable timing guardband option. The default value is 1`false`, and the allowed values are booleans. |\n| `-e_wt_factors` | Hyperedge weight factors. |\n| `-v_wt_factors` | Vertex weight factors. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/partition_manager/partition_manager_4.png"], "neg_text": ["Why is the timing-driven mode not supported in the partitioning process, as indicated by the warning message in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["partition_manager_8"]}
{"q_img": "source_images/partition_manager/partition_manager_3.png", "q_text": "Why is the timing-driven mode not supported in the partitioning process for the hypergraph file `sparcT1_core.hgr`?", "pos_doc": "id:partition_manager_8\n### Evaluate Netlist Partition\n\nThis command evaluates partition design solution.\n\n```tcl\nevaluate_part_design_solution\n    [-num_parts num_parts]\n    [-balance_constraint balance_constraint]\n    [-base_balance base_balance]\n    [-scale_factor scale_factor]\n    [-timing_aware_flag timing_aware_flag]\n    [-top_n top_n]\n    [-fence_flag fence_flag]\n    [-fence_lx fence_lx]\n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-fixed_file fixed_file]\n    [-community_file community_file]\n    [-group_file group_file]\n    [-hypergraph_file hypergraph_file]\n    [-hypergraph_int_weight_file hypergraph_int_weight_file]\n    [-solution_file solution_file]\n    [-net_timing_factor net_timing_factor]\n    [-path_timing_factor path_timing_factor]\n    [-path_snaking_factor path_snaking_factor]\n    [-timing_exp_factor timing_exp_factor]\n    [-extra_delay extra_delay]\n    [-guardband_flag guardband_flag]\n    [-e_wt_factors e_wt_factors]\n    [-v_wt_factors v_wt_factors]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-num_parts` | Number of partitions. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-balance_constraint` | Allowed imbalance between blocks. The default value is `1.0`, and the allowed values are floats. |\n| `-base_balance` | Tcl list of baseline imbalance between partitions. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-scale_factor` | KIV. The default value is `{1.0}`, and the allowed values are floats that sum up to `1.0`. |\n| `-timing_aware_flag` | Enable timing-driven mode. The default value is `true`, and the allowed values are booleans. |\n| `-top_n` | Extract the top n critical timing paths. The default value is `1000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-fence_flag ` | Consider fences in the partitioning. The default value is `false`, and the allowed values are booleans. |\n| `-fence_lx ` | Fence lower left x in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_ly ` | Fence lower left y in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_ux ` | Fence upper right x in microns. The default value is `0.0`, and the allowed values are floats. |\n| `-fence_uy ` | Fence upper right y in microns. The default value is `0.0`, and the allowed values are floats. | \n| `-fixed_file` | Path to fixed vertices constraint file. |\n| `-community_file` | Path to `community` attributes file to guide the partitioning process. |\n| `-group_file` | Path to `stay together` attributes file. |\n| `-hypergraph_file` | Path to hypergraph file. |\n| `-hypergraph_int_weight_file` | Path to `hMETIS` format integer weight file. |\n| `-solution_file` | Path to solution file. |\n| `-net_timing_factor` | Hyperedge timing weight factor. The default value is `1.0`, and the allowed values are floats. |\n| `-path_timing_factor` | Cutting critical timing path weight factor. The default value is `1.0`, and the allowed values are floats. |\n| `-path_snaking_factor` | Snaking a critical path weight factor. The default value is `1.0`, and the allowed values are floats. |\n| `-timing_exp_factor` | Timing exponential factor for normalized slack. The default value is `1.0`, and the allowed values are floats. |\n| `-extra_delay` | Extra delay introduced by a cut. The default value is `1e-9`, and the allowed values are floats. |\n| `-guardband_flag` | Enable timing guardband option. The default value is 1`false`, and the allowed values are booleans. |\n| `-e_wt_factors` | Hyperedge weight factors. |\n| `-v_wt_factors` | Vertex weight factors. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/partition_manager/partition_manager_3.png"], "neg_text": ["Why is the timing-driven mode not supported in the partitioning process, as indicated by the warning message in the log?"], "q_type": "it", "c_type": "mix", "reference": ["partition_manager_8"]}
{"q_img": "source_images/partition_manager/partition_manager_3.png", "q_text": "Why is the timing-driven mode not supported in the partitioning process, as indicated by the warning message in the log?", "pos_doc": "id:partition_manager_4\n# Partition Manager\n## Timing Aware Algorithm\n\n`par` can also be used as a timing-aware partitioning framework. A slack\npropagation methodology is used that optimizes cuts for both timing-critical\nand timing-noncritical paths.\n\n1. Extraction of Timing Paths and Slack Information\n\nFirst, the top $P$ timing-critical paths and the slack information of each\nhyperedge using the wireload model (WLM) is obtained from *OpenSTA*. The\ntiming cost of each path is then calculated:\n\n$$t_p = (1- \\frac{slack_p - \\Delta}{clock\\_period})^\\mu$$\n\nwhere a fixed extra delay $\\Delta$ is introduced for timing guardband,\nand $\\mu$ (default 2) is the exponent.\n\nThe snaking factor of a path $SF(p)$ is defined as the maximum number\nof block reentries along the path $p$. The timing cost of a hyperedge is\ncomputed using the timing weight corresponding to hyperedge slack $slack_e$\nand the accumulated timing cost of all paths traversing the hyperedge.\n\n$$t_e = (1- \\frac{slack_e -\\Delta}{clock\\_period})^\\mu + \\sum_{\\{p|e\\in p\\}}t_p$$\n\n2. Timing-aware Coarsening\n\nThe timing-aware feature is achieved by adding a timing cost of hyperedge\n$t_e$ to the connectivity score earlier mentioned. If vertices $(u,v)$\nare associated with multiple critical paths, then they are more likely to\nbe merged. This is reflected in the update score function:\n\n$$r_t(u,v) = \\hat{r}(u,v) + \\sum_{e\\in\\{I(v) \\cap I(u)\\}} \\frac{\\beta t_e}{|e| - 1}$$\n\n3. Timing-aware Refinement\n\nTiming-aware refinement is based on a similar cost function as the main\nalgorithm. Instead, an additional slack propagation step is performed at\nthe end of each PM/FM/HER pass.\n\n", "neg_img": ["source_images/partition_manager/partition_manager_3.png"], "neg_text": ["Why is the timing-driven mode not supported in the partitioning process for the hypergraph file `sparcT1_core.hgr`?"], "q_type": "it", "c_type": "mix", "reference": ["partition_manager_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_19.png", "q_text": "How can I remove the bump instance `BUMP_13_0` shown in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_19.png"], "neg_text": ["How can I assign the net `p_ddr_dqs_n_2_io` to the bump instance `BUMP_13_0` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_19.png", "q_text": "How can I assign the net `p_ddr_dqs_n_2_io` to the bump instance `BUMP_13_0` as shown in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_19.png"], "neg_text": ["How can I remove the bump instance `BUMP_13_0` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_18.png", "q_text": "How can I place the pad \"p_ddr_reset_n_o\" at a specific location along the IO_SOUTH row?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_18.png"], "neg_text": ["How can I adjust the placement of the bondpad such that it is centered over the IO pad, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_18.png", "q_text": "How can I adjust the placement of the bondpad such that it is centered over the IO pad, as shown in the screenshot?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_18.png"], "neg_text": ["How can I place the pad \"p_ddr_reset_n_o\" at a specific location along the IO_SOUTH row?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_39.png", "q_text": "How can I mirror the pad instance `u_ddr_dq_13_io` placed at location 500 in the IO_NORTH row?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_39.png"], "neg_text": ["How can I place IO terminals on the padring as shown in the screenshot using the `place_io_terminals` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_39.png", "q_text": "How can I place IO terminals on the padring as shown in the screenshot using the `place_io_terminals` command?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_39.png"], "neg_text": ["How can I mirror the pad instance `u_ddr_dq_13_io` placed at location 500 in the IO_NORTH row?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_64.png", "q_text": "How can I place an IO pad at a specific location with a mirror option, similar to the pads shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_64.png"], "neg_text": ["How can I place IO terminals on the padring as shown in the screenshot, and what options are available for the `place_io_terminals` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_64.png", "q_text": "How can I place IO terminals on the padring as shown in the screenshot, and what options are available for the `place_io_terminals` command?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_64.png"], "neg_text": ["How can I place an IO pad at a specific location with a mirror option, similar to the pads shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_41.png", "q_text": "How can I resolve the master cell mismatch error when using the `place_pad` command, as shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_41.png"], "neg_text": ["How can I resolve the master cell mismatch error shown in the screenshot when using the `place_pad` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_41.png", "q_text": "How can I resolve the master cell mismatch error shown in the screenshot when using the `place_pad` command?", "pos_doc": "id:chip-level_connections_6\n### Make IO Sites\n\nThis command defines an IO site for the pads to be placed into.\n\nExample usage:\n\n```\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35 -rotation_horizontal R180\n```\n\n```tcl\nmake_io_sites \n    -horizontal_site site\n    -vertical_site site\n    -corner_site site\n    -offset offset\n    [-rotation_horizontal rotation]\n    [-rotation_vertical rotation]\n    [-rotation_corner rotation]\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-horizontal_site` | Name of the site for the horizontal pads (east and west). |\n| `-vertical_site` | Name of the site for the vertical pads (north and south). |\n| `-corner_site` | Name of the site for the corner cells. |\n| `-offset` | Offset from the die edge to place the rows. |\n| `-rotation_horizontal` | Rotation to apply to the horizontal sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_vertical` | Rotation to apply to the vertical sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_corner` | Rotation to apply to the corner sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_41.png"], "neg_text": ["How can I resolve the master cell mismatch error when using the `place_pad` command, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_6"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_38.png", "q_text": "How can I adjust the offset of the bondpad placement in the command `place_bondpad` to ensure the bondpads are correctly aligned with the IO instances?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_38.png"], "neg_text": ["In the provided screenshot, the `place_pad` command is used to place pads on different sides of the chip. How can I specify a master for the pad instance when using the `place_pad` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_38.png", "q_text": "In the provided screenshot, the `place_pad` command is used to place pads on different sides of the chip. How can I specify a master for the pad instance when using the `place_pad` command?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_38.png"], "neg_text": ["How can I adjust the offset of the bondpad placement in the command `place_bondpad` to ensure the bondpads are correctly aligned with the IO instances?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_12.png", "q_text": "How can I remove the entire bump array that includes BUMP_10_4 and BUMP_11_4 from my design?", "pos_doc": "id:chip-level_connections_3\n### Remove Entire Bump Array\n\nThis command removes the entire bump array.\n\nExample usage:\n\n```\nremove_io_bump_array -bump BUMP\n```\n\n```tcl\nremove_io_bump_array \n    -bump master\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_12.png"], "neg_text": ["How can I remove the bump instance labeled \"BUMP_10_4\" from the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_3"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_12.png", "q_text": "How can I remove the bump instance labeled \"BUMP_10_4\" from the layout shown in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_12.png"], "neg_text": ["How can I remove the entire bump array that includes BUMP_10_4 and BUMP_11_4 from my design?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_6.png", "q_text": "How can I assign the net `p_ddr_dq_12_io` to the bump `BUMP_6_2` as shown in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_6.png"], "neg_text": ["The RDL route in my design, as shown in the screenshot, appears to be failing. How can I adjust the routing parameters to fix this issue?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_6.png", "q_text": "The RDL route in my design, as shown in the screenshot, appears to be failing. How can I adjust the routing parameters to fix this issue?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_6.png"], "neg_text": ["How can I assign the net `p_ddr_dq_12_io` to the bump `BUMP_6_2` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_43.png", "q_text": "How can I specify the layer and via types for routing the Redistribution Layer (RDL) for the net `p_ddr_dq_31_io` shown in the screenshot?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_43.png"], "neg_text": ["How can I assign the net `p_ddr_dq_31_io` to the bump instance `BUMP_12_4` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_43.png", "q_text": "How can I assign the net `p_ddr_dq_31_io` to the bump instance `BUMP_12_4` as shown in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_43.png"], "neg_text": ["How can I specify the layer and via types for routing the Redistribution Layer (RDL) for the net `p_ddr_dq_31_io` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_25.png", "q_text": "How can I ensure that the corner pads are correctly rotated in the layout as shown in the screenshot?", "pos_doc": "id:chip-level_connections_6\n### Make IO Sites\n\nThis command defines an IO site for the pads to be placed into.\n\nExample usage:\n\n```\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35 -rotation_horizontal R180\n```\n\n```tcl\nmake_io_sites \n    -horizontal_site site\n    -vertical_site site\n    -corner_site site\n    -offset offset\n    [-rotation_horizontal rotation]\n    [-rotation_vertical rotation]\n    [-rotation_corner rotation]\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-horizontal_site` | Name of the site for the horizontal pads (east and west). |\n| `-vertical_site` | Name of the site for the vertical pads (north and south). |\n| `-corner_site` | Name of the site for the corner cells. |\n| `-offset` | Offset from the die edge to place the rows. |\n| `-rotation_horizontal` | Rotation to apply to the horizontal sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_vertical` | Rotation to apply to the vertical sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_corner` | Rotation to apply to the corner sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_25.png"], "neg_text": ["How can I specify the index of the ring when placing corner cells, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_6"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_25.png", "q_text": "How can I specify the index of the ring when placing corner cells, as shown in the screenshot?", "pos_doc": "id:chip-level_connections_8\n### Placing Corner Cells\n\nThis command places the corner cells.\n\n```tcl\nplace_corners \n    master\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `master` | Name of the master for the corners. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\nExample usage:\n\n```\nplace_corners sky130_fd_io__corner_bus_overlay\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_25.png"], "neg_text": ["How can I ensure that the corner pads are correctly rotated in the layout as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_8"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_61.png", "q_text": "How can I define the IO site for the instance \"IO_FILL_IO_WEST_4_215\" with a horizontal site named \"IOSITE_H\", a vertical site named \"IOSITE_V\", and a corner site named \"IOSITE_C\" with an offset of 35?", "pos_doc": "id:chip-level_connections_6\n### Make IO Sites\n\nThis command defines an IO site for the pads to be placed into.\n\nExample usage:\n\n```\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35 -rotation_horizontal R180\n```\n\n```tcl\nmake_io_sites \n    -horizontal_site site\n    -vertical_site site\n    -corner_site site\n    -offset offset\n    [-rotation_horizontal rotation]\n    [-rotation_vertical rotation]\n    [-rotation_corner rotation]\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-horizontal_site` | Name of the site for the horizontal pads (east and west). |\n| `-vertical_site` | Name of the site for the vertical pads (north and south). |\n| `-corner_site` | Name of the site for the corner cells. |\n| `-offset` | Offset from the die edge to place the rows. |\n| `-rotation_horizontal` | Rotation to apply to the horizontal sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_vertical` | Rotation to apply to the vertical sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_corner` | Rotation to apply to the corner sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_61.png"], "neg_text": ["How can I place an IO pad similar to `IO_FILL_IO_WEST_4_215` at a specific location in the IO_SOUTH row?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_6"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_61.png", "q_text": "How can I place an IO pad similar to `IO_FILL_IO_WEST_4_215` at a specific location in the IO_SOUTH row?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_61.png"], "neg_text": ["How can I define the IO site for the instance \"IO_FILL_IO_WEST_4_215\" with a horizontal site named \"IOSITE_H\", a vertical site named \"IOSITE_V\", and a corner site named \"IOSITE_C\" with an offset of 35?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_29.png", "q_text": "How can I place a bondpad over the IO pad instance `u_ci2_0_o` shown in the screenshot?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_29.png"], "neg_text": ["How can I place a pad similar to `u_ci2_0_o` at a specific location using the `place_pad` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_29.png", "q_text": "How can I place a pad similar to `u_ci2_0_o` at a specific location using the `place_pad` command?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_29.png"], "neg_text": ["How can I place a bondpad over the IO pad instance `u_ci2_0_o` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_46.png", "q_text": "How can I ensure that the IO ring is correctly placed around the boundary of the chip when using a bump array, as shown in the screenshot?", "pos_doc": "id:chip-level_connections_0\n# Chip-level Connections\n\nThe chip-level connections module in OpenROAD (`pad`) is based on the\nopen-source tool ICeWall. In this utility, either place an IO ring around the\nboundary of the chip and connect with either wirebond pads or a bump array.\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_46.png"], "neg_text": ["How can I assign the net \"DVDD\" to a specific bump instance in the bump array shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_0"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_46.png", "q_text": "How can I assign the net \"DVDD\" to a specific bump instance in the bump array shown in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_46.png"], "neg_text": ["How can I ensure that the IO ring is correctly placed around the boundary of the chip when using a bump array, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_56.png", "q_text": "How can I adjust the placement of the bondpad such that it is centered over the IO pad as shown in the screenshot?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_56.png"], "neg_text": ["How can I place an IO pad at a specific location in the IO_SOUTH row, similar to the pads shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_56.png", "q_text": "How can I place an IO pad at a specific location in the IO_SOUTH row, similar to the pads shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_56.png"], "neg_text": ["How can I adjust the placement of the bondpad such that it is centered over the IO pad as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_49.png", "q_text": "How can I place IO terminals on the padring before performing RDL routing as shown in the screenshot?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_49.png"], "neg_text": ["How can I assign a net to a specific bump instance, for example, assigning the net `p_ddr_addr_9_o` to `BUMP_6_0`?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_49.png", "q_text": "How can I assign a net to a specific bump instance, for example, assigning the net `p_ddr_addr_9_o` to `BUMP_6_0`?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_49.png"], "neg_text": ["How can I place IO terminals on the padring before performing RDL routing as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_27.png", "q_text": "How can I assign the net `p_ddr_addr_9_o` to the bump instance `BUMP_6_0` as part of setting up the IO sites?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_27.png"], "neg_text": ["How can I define a bump array with an origin at (200, 200), 14 rows, 14 columns, and a pitch of (200, 200) as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_27.png", "q_text": "How can I define a bump array with an origin at (200, 200), 14 rows, 14 columns, and a pitch of (200, 200) as shown in the screenshot?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_27.png"], "neg_text": ["How can I assign the net `p_ddr_addr_9_o` to the bump instance `BUMP_6_0` as part of setting up the IO sites?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_35.png", "q_text": "How can I adjust the offset of the bondpad placement to ensure it aligns correctly with the IO instances, as shown in the screenshot?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_35.png"], "neg_text": ["How can I adjust the placement of bondpads such that they are centered within the IO pad ring, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_35.png", "q_text": "How can I adjust the placement of bondpads such that they are centered within the IO pad ring, as shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_35.png"], "neg_text": ["How can I adjust the offset of the bondpad placement to ensure it aligns correctly with the IO instances, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_1.png", "q_text": "How can I remove the bump instance located at the top-right corner of the bump array in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_1.png"], "neg_text": ["How can I define a bump array similar to the one shown in the screenshot with 14 rows and 14 columns, and an origin at coordinates (200, 200)?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_1.png", "q_text": "How can I define a bump array similar to the one shown in the screenshot with 14 rows and 14 columns, and an origin at coordinates (200, 200)?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_1.png"], "neg_text": ["How can I remove the bump instance located at the top-right corner of the bump array in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_50.png", "q_text": "How can I adjust the offset of the bondpads to ensure they are centered over the IO pads as shown in the screenshot?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_50.png"], "neg_text": ["In the screenshot, the RDL routing seems to be failing to connect some of the IO pads properly. How can I specify the layer and adjust the routing width and spacing to ensure proper connections?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_50.png", "q_text": "In the screenshot, the RDL routing seems to be failing to connect some of the IO pads properly. How can I specify the layer and adjust the routing width and spacing to ensure proper connections?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_50.png"], "neg_text": ["How can I adjust the offset of the bondpads to ensure they are centered over the IO pads as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_48.png", "q_text": "How can I specify the layer and via types for routing the net `p_ddr_dq_30_io` in the Redistribution Layer (RDL)?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_48.png"], "neg_text": ["How can I remove the bump instance `BUMP_13_5` from the net `p_ddr_dq_30_io` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_48.png", "q_text": "How can I remove the bump instance `BUMP_13_5` from the net `p_ddr_dq_30_io` as shown in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_48.png"], "neg_text": ["How can I specify the layer and via types for routing the net `p_ddr_dq_30_io` in the Redistribution Layer (RDL)?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_60.png", "q_text": "How can I place the pad `u_v18_7` with the master `sky130_fd_io__top_power_hvc_wpad` at the location (5200000, 1597665) with orientation `R270`?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_60.png"], "neg_text": ["How can I change the orientation of the pad `u_v18_7` from `R270` to `R0` using the `make_io_sites` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_60.png", "q_text": "How can I change the orientation of the pad `u_v18_7` from `R270` to `R0` using the `make_io_sites` command?", "pos_doc": "id:chip-level_connections_6\n### Make IO Sites\n\nThis command defines an IO site for the pads to be placed into.\n\nExample usage:\n\n```\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35 -rotation_horizontal R180\n```\n\n```tcl\nmake_io_sites \n    -horizontal_site site\n    -vertical_site site\n    -corner_site site\n    -offset offset\n    [-rotation_horizontal rotation]\n    [-rotation_vertical rotation]\n    [-rotation_corner rotation]\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-horizontal_site` | Name of the site for the horizontal pads (east and west). |\n| `-vertical_site` | Name of the site for the vertical pads (north and south). |\n| `-corner_site` | Name of the site for the corner cells. |\n| `-offset` | Offset from the die edge to place the rows. |\n| `-rotation_horizontal` | Rotation to apply to the horizontal sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_vertical` | Rotation to apply to the vertical sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_corner` | Rotation to apply to the corner sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_60.png"], "neg_text": ["How can I place the pad `u_v18_7` with the master `sky130_fd_io__top_power_hvc_wpad` at the location (5200000, 1597665) with orientation `R270`?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_6"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_9.png", "q_text": "How can I specify the width and spacing for the RDL routing of the bump array shown in the screenshot?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_9.png"], "neg_text": ["How can I remove a single bump instance from the bump array shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_9.png", "q_text": "How can I remove a single bump instance from the bump array shown in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_9.png"], "neg_text": ["How can I specify the width and spacing for the RDL routing of the bump array shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_28.png", "q_text": "How can I adjust the position of the bondpad in the bottom-left corner of the design area to be centered over the IO cell?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_28.png"], "neg_text": ["How can I place a pad at the top right corner of the chip instead of the bottom left as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_28.png", "q_text": "How can I place a pad at the top right corner of the chip instead of the bottom left as shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_28.png"], "neg_text": ["How can I adjust the position of the bondpad in the bottom-left corner of the design area to be centered over the IO cell?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_53.png", "q_text": "How can I place a pad at the location 500.0 in the IO_SOUTH row as shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_53.png"], "neg_text": ["How can I specify the layer and via to use for routing the Redistribution Layer (RDL) as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_53.png", "q_text": "How can I specify the layer and via to use for routing the Redistribution Layer (RDL) as shown in the screenshot?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_53.png"], "neg_text": ["How can I place a pad at the location 500.0 in the IO_SOUTH row as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_20.png", "q_text": "How can I remove a specific bump instance, for example, BUMP_10_5, from the bump array shown in the layout?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_20.png"], "neg_text": ["How can I specify the layer and via types for routing the Redistribution Layer (RDL) in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_20.png", "q_text": "How can I specify the layer and via types for routing the Redistribution Layer (RDL) in the design shown in the screenshot?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_20.png"], "neg_text": ["How can I remove a specific bump instance, for example, BUMP_10_5, from the bump array shown in the layout?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_40.png", "q_text": "How can I adjust the location of the pad such that it fits within the row IO_SOUTH, given the error message in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_40.png"], "neg_text": ["How can I ensure that the pad cell `PADCELL_SIG_H` is placed correctly within the row `IO_SOUTH` when using the `place_pad` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_40.png", "q_text": "How can I ensure that the pad cell `PADCELL_SIG_H` is placed correctly within the row `IO_SOUTH` when using the `place_pad` command?", "pos_doc": "id:chip-level_connections_13\n### Make False IO Site\n\nIf the library does not contain sites for the IO cells, the following command can be used to add them.\nThis should not be used unless the sites are not in the library.\n\nExample usage:\n\n```\nmake_fake_io_site -name IO_HSITE -width 1 -height 204\nmake_fake_io_site -name IO_VSITE -width 1 -height 200\nmake_fake_io_site -name IO_CSITE -width 200 -height 204\n```\n\n\n```tcl\nmake_fake_io_site \n    -name name\n    -width width\n    -height height\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-name` | Name of the site. |\n| `-width` | Width of the site (in microns). |\n| `-height` | Height of the site (in microns). |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_40.png"], "neg_text": ["How can I adjust the location of the pad such that it fits within the row IO_SOUTH, given the error message in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_13"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_10.png", "q_text": "How can I remove the bump array named DUMMY_BUMP that was created using the `make_io_bump_array` command?", "pos_doc": "id:chip-level_connections_3\n### Remove Entire Bump Array\n\nThis command removes the entire bump array.\n\nExample usage:\n\n```\nremove_io_bump_array -bump BUMP\n```\n\n```tcl\nremove_io_bump_array \n    -bump master\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_10.png"], "neg_text": ["How can I modify the bump array created with the command `make_io_bump_array` to change the pitch to \"300 300\"?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_3"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_10.png", "q_text": "How can I modify the bump array created with the command `make_io_bump_array` to change the pitch to \"300 300\"?", "pos_doc": "id:chip-level_connections_0\n# Chip-level Connections\n\nThe chip-level connections module in OpenROAD (`pad`) is based on the\nopen-source tool ICeWall. In this utility, either place an IO ring around the\nboundary of the chip and connect with either wirebond pads or a bump array.\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_10.png"], "neg_text": ["How can I remove the bump array named DUMMY_BUMP that was created using the `make_io_bump_array` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_0"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_5.png", "q_text": "How can I place a pad for VDD on the IO_SOUTH row at the location 2000.0 in my design?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_5.png"], "neg_text": ["How can I place IO terminals for VDD and VSS on the padring as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_5.png", "q_text": "How can I place IO terminals for VDD and VSS on the padring as shown in the screenshot?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_5.png"], "neg_text": ["How can I place a pad for VDD on the IO_SOUTH row at the location 2000.0 in my design?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_2.png", "q_text": "How can I specify the layer and via to use for connecting the bump to the routing layer in the RDL routing command?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_2.png"], "neg_text": ["How can I define a bump array with 10 rows and 10 columns, starting at the origin (100, 100) with a pitch of (200, 200)?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_2.png", "q_text": "How can I define a bump array with 10 rows and 10 columns, starting at the origin (100, 100) with a pitch of (200, 200)?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_2.png"], "neg_text": ["How can I specify the layer and via to use for connecting the bump to the routing layer in the RDL routing command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_31.png", "q_text": "How can I place IO filler cells in the IO ring as shown in the screenshot?", "pos_doc": "id:chip-level_connections_10\n### Placing IO Filler Cells\n\nTo place the IO filler cells.\n\nExample usage: \n\n```\nplace_io_fill -row IO_NORTH s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_SOUTH s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_WEST s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_EAST s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\n```\n\n```tcl\nplace_io_fill \n    -row row_name\n    [-permit_overlaps masters]\n    masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-permit_overlaps` | Names of the masters for the IO filler cells that allow for overlapping. |\n| `masters` | Names of the masters for the IO filler cells. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_31.png"], "neg_text": ["How can I place a pad at the top edge of the chip, similar to the pads shown in the screenshot, using the `place_pad` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_10"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_31.png", "q_text": "How can I place a pad at the top edge of the chip, similar to the pads shown in the screenshot, using the `place_pad` command?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_31.png"], "neg_text": ["How can I place IO filler cells in the IO ring as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_13.png", "q_text": "How can I remove the bump labeled \"BUMP_11_4\" from the bump array?", "pos_doc": "id:chip-level_connections_3\n### Remove Entire Bump Array\n\nThis command removes the entire bump array.\n\nExample usage:\n\n```\nremove_io_bump_array -bump BUMP\n```\n\n```tcl\nremove_io_bump_array \n    -bump master\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_13.png"], "neg_text": ["How can I remove the bump labeled \"BUMP_11_4\" from the bump array?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_3"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_13.png", "q_text": "How can I remove the bump labeled \"BUMP_11_4\" from the bump array?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_13.png"], "neg_text": ["How can I remove the bump labeled \"BUMP_11_4\" from the bump array?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_14.png", "q_text": "How can I remove the entire bump array shown in the screenshot?", "pos_doc": "id:chip-level_connections_3\n### Remove Entire Bump Array\n\nThis command removes the entire bump array.\n\nExample usage:\n\n```\nremove_io_bump_array -bump BUMP\n```\n\n```tcl\nremove_io_bump_array \n    -bump master\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_14.png"], "neg_text": ["How can I change the pitch of the bump array shown in the screenshot to \"300 300\"?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_3"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_14.png", "q_text": "How can I change the pitch of the bump array shown in the screenshot to \"300 300\"?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_14.png"], "neg_text": ["How can I remove the entire bump array shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_23.png", "q_text": "How can I create a fake IO site with a width of 1 micron and a height of 204 microns, similar to the `make_io_sites` command used in the screenshot?", "pos_doc": "id:chip-level_connections_13\n### Make False IO Site\n\nIf the library does not contain sites for the IO cells, the following command can be used to add them.\nThis should not be used unless the sites are not in the library.\n\nExample usage:\n\n```\nmake_fake_io_site -name IO_HSITE -width 1 -height 204\nmake_fake_io_site -name IO_VSITE -width 1 -height 200\nmake_fake_io_site -name IO_CSITE -width 200 -height 204\n```\n\n\n```tcl\nmake_fake_io_site \n    -name name\n    -width width\n    -height height\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-name` | Name of the site. |\n| `-width` | Width of the site (in microns). |\n| `-height` | Height of the site (in microns). |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_23.png"], "neg_text": ["How can I adjust the offset for the IO sites in the `make_io_sites` command to ensure the pads are placed 20 units away from the die edge?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_13"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_23.png", "q_text": "How can I adjust the offset for the IO sites in the `make_io_sites` command to ensure the pads are placed 20 units away from the die edge?", "pos_doc": "id:chip-level_connections_6\n### Make IO Sites\n\nThis command defines an IO site for the pads to be placed into.\n\nExample usage:\n\n```\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35 -rotation_horizontal R180\n```\n\n```tcl\nmake_io_sites \n    -horizontal_site site\n    -vertical_site site\n    -corner_site site\n    -offset offset\n    [-rotation_horizontal rotation]\n    [-rotation_vertical rotation]\n    [-rotation_corner rotation]\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-horizontal_site` | Name of the site for the horizontal pads (east and west). |\n| `-vertical_site` | Name of the site for the vertical pads (north and south). |\n| `-corner_site` | Name of the site for the corner cells. |\n| `-offset` | Offset from the die edge to place the rows. |\n| `-rotation_horizontal` | Rotation to apply to the horizontal sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_vertical` | Rotation to apply to the vertical sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_corner` | Rotation to apply to the corner sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_23.png"], "neg_text": ["How can I create a fake IO site with a width of 1 micron and a height of 204 microns, similar to the `make_io_sites` command used in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_6"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_24.png", "q_text": "How can I place corner cells in the design as shown in the screenshot?", "pos_doc": "id:chip-level_connections_8\n### Placing Corner Cells\n\nThis command places the corner cells.\n\n```tcl\nplace_corners \n    master\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `master` | Name of the master for the corners. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\nExample usage:\n\n```\nplace_corners sky130_fd_io__corner_bus_overlay\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_24.png"], "neg_text": ["How can I place IO terminals on the padring as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_8"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_24.png", "q_text": "How can I place IO terminals on the padring as shown in the screenshot?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_24.png"], "neg_text": ["How can I place corner cells in the design as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_57.png", "q_text": "How can I place IO filler cells in the row where the IO pads are placed, as shown in the screenshot?", "pos_doc": "id:chip-level_connections_10\n### Placing IO Filler Cells\n\nTo place the IO filler cells.\n\nExample usage: \n\n```\nplace_io_fill -row IO_NORTH s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_SOUTH s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_WEST s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_EAST s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\n```\n\n```tcl\nplace_io_fill \n    -row row_name\n    [-permit_overlaps masters]\n    masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-permit_overlaps` | Names of the masters for the IO filler cells that allow for overlapping. |\n| `masters` | Names of the masters for the IO filler cells. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_57.png"], "neg_text": ["How can I place an IO pad with the name `mprj_pads.area1_io_pad` at the location (3377035, 806000) with a rotation of 270 degrees?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_10"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_57.png", "q_text": "How can I place an IO pad with the name `mprj_pads.area1_io_pad` at the location (3377035, 806000) with a rotation of 270 degrees?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_57.png"], "neg_text": ["How can I place IO filler cells in the row where the IO pads are placed, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_47.png", "q_text": "How can I define a bump array with 10 rows and 10 columns, starting at the origin (100, 100) with a pitch of (150, 150)?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_47.png"], "neg_text": ["How can I remove a single bump instance, for example, BUMP_10_5, from the bump array shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_47.png", "q_text": "How can I remove a single bump instance, for example, BUMP_10_5, from the bump array shown in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_47.png"], "neg_text": ["How can I define a bump array with 10 rows and 10 columns, starting at the origin (100, 100) with a pitch of (150, 150)?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_15.png", "q_text": "How can I remove the bump instance BUMP_5_5 from the bump array shown in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_15.png"], "neg_text": ["How can I assign a net to the bump instance BUMP_0_0 in the bump array shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_15.png", "q_text": "How can I assign a net to the bump instance BUMP_0_0 in the bump array shown in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_15.png"], "neg_text": ["How can I remove the bump instance BUMP_5_5 from the bump array shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_52.png", "q_text": "How can I assign the net `p_ddr_addr_9_o` to the bump instance `BUMP_6_0` as shown in the layout?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_52.png"], "neg_text": ["How can I adjust the routing width and spacing for the Redistribution Layer (RDL) shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_52.png", "q_text": "How can I adjust the routing width and spacing for the Redistribution Layer (RDL) shown in the screenshot?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_52.png"], "neg_text": ["How can I assign the net `p_ddr_addr_9_o` to the bump instance `BUMP_6_0` as shown in the layout?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_36.png", "q_text": "How can I adjust the placement of bondpads such that they are centered over the IO pads as shown in the screenshot?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_36.png"], "neg_text": ["How can I place IO terminals on the padring as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_36.png", "q_text": "How can I place IO terminals on the padring as shown in the screenshot?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_36.png"], "neg_text": ["How can I adjust the placement of bondpads such that they are centered over the IO pads as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_7.png", "q_text": "How can I remove the bump instance labeled \"BUMP_0_4\" from the design shown in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_7.png"], "neg_text": ["How can I assign the net `p_ddr_dq_12_o` to the bump instance `BUMP_0_5` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_7.png", "q_text": "How can I assign the net `p_ddr_dq_12_o` to the bump instance `BUMP_0_5` as shown in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_7.png"], "neg_text": ["How can I remove the bump instance labeled \"BUMP_0_4\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_63.png", "q_text": "How can I place an IO pad at a specific location and mirror it, similar to the pads shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_63.png"], "neg_text": ["How can I define the IO sites for the pads shown in the screenshot, ensuring they are placed correctly with an offset of 35 microns from the die edge?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_63.png", "q_text": "How can I define the IO sites for the pads shown in the screenshot, ensuring they are placed correctly with an offset of 35 microns from the die edge?", "pos_doc": "id:chip-level_connections_6\n### Make IO Sites\n\nThis command defines an IO site for the pads to be placed into.\n\nExample usage:\n\n```\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35 -rotation_horizontal R180\n```\n\n```tcl\nmake_io_sites \n    -horizontal_site site\n    -vertical_site site\n    -corner_site site\n    -offset offset\n    [-rotation_horizontal rotation]\n    [-rotation_vertical rotation]\n    [-rotation_corner rotation]\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-horizontal_site` | Name of the site for the horizontal pads (east and west). |\n| `-vertical_site` | Name of the site for the vertical pads (north and south). |\n| `-corner_site` | Name of the site for the corner cells. |\n| `-offset` | Offset from the die edge to place the rows. |\n| `-rotation_horizontal` | Rotation to apply to the horizontal sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_vertical` | Rotation to apply to the vertical sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_corner` | Rotation to apply to the corner sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_63.png"], "neg_text": ["How can I place an IO pad at a specific location and mirror it, similar to the pads shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_6"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_22.png", "q_text": "How can I place a pad into the \"IO_EAST\" row at a specific location using the information provided in the inspector window?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_22.png"], "neg_text": ["How can I define an IO site for the vertical pads with the same orientation and site spacing as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_22.png", "q_text": "How can I define an IO site for the vertical pads with the same orientation and site spacing as shown in the screenshot?", "pos_doc": "id:chip-level_connections_6\n### Make IO Sites\n\nThis command defines an IO site for the pads to be placed into.\n\nExample usage:\n\n```\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35 -rotation_horizontal R180\n```\n\n```tcl\nmake_io_sites \n    -horizontal_site site\n    -vertical_site site\n    -corner_site site\n    -offset offset\n    [-rotation_horizontal rotation]\n    [-rotation_vertical rotation]\n    [-rotation_corner rotation]\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-horizontal_site` | Name of the site for the horizontal pads (east and west). |\n| `-vertical_site` | Name of the site for the vertical pads (north and south). |\n| `-corner_site` | Name of the site for the corner cells. |\n| `-offset` | Offset from the die edge to place the rows. |\n| `-rotation_horizontal` | Rotation to apply to the horizontal sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_vertical` | Rotation to apply to the vertical sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_corner` | Rotation to apply to the corner sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_22.png"], "neg_text": ["How can I place a pad into the \"IO_EAST\" row at a specific location using the information provided in the inspector window?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_6"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_45.png", "q_text": "My RDL route on the design, as shown in the screenshot, appears to have some connections missing. How should I fix this issue?", "pos_doc": "id:chip-level_connections_15\n### Redistribution Layer Routing\n\nTo route the Redistribution Layer (RDL) for the bump arrays.\n\n```tcl\nrdl_route \n    -layer layer\n    [-bump_via access_via]\n    [-pad_via access_via]\n    [-width width]\n    [-spacing spacing]\n    [-turn_penalty penalty]\n    [-allow45]\n    nets\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Layer to route on. |\n| `-bump_via` | Via to use to to connect the bump to the routing layer. |\n| `-pad_via` | Via to use to to connect the pad cell to the routing layer. |\n| `-width` | Width of the routing. Defaults to minimum width for each respective layer. |\n| `-spacing` | Spacing of the routing. Defaults to minimum spacing for each respective layer. |\n| `-turn_penalty` | Scaling factor to apply to discurage turning to allow for straighter routes. The default value is `2.0`, and the allowed values are floats. |\n| `-allow45` | Specifies that 45 degree routing is permitted. |\n| `nets` | Nets to route. |", "neg_img": ["source_images/chip-level_connections/chip-level_connections_45.png"], "neg_text": ["How can I define a bump array similar to the one shown in the screenshot with 14 rows and 14 columns, and an origin at coordinates (200, 200)?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_15"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_45.png", "q_text": "How can I define a bump array similar to the one shown in the screenshot with 14 rows and 14 columns, and an origin at coordinates (200, 200)?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_45.png"], "neg_text": ["My RDL route on the design, as shown in the screenshot, appears to have some connections missing. How should I fix this issue?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_42.png", "q_text": "How can I place IO terminals on the padring as shown in the screenshot?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_42.png"], "neg_text": ["How can I assign the net `p_ddr_addr_9_o` to the bump instance `BUMP_6_0` as shown in the layout?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_42.png", "q_text": "How can I assign the net `p_ddr_addr_9_o` to the bump instance `BUMP_6_0` as shown in the layout?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_42.png"], "neg_text": ["How can I place IO terminals on the padring as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_26.png", "q_text": "How can I create a custom IO site named \"IOSITE\" with a width of 140 microns and a height of 200 microns?", "pos_doc": "id:chip-level_connections_13\n### Make False IO Site\n\nIf the library does not contain sites for the IO cells, the following command can be used to add them.\nThis should not be used unless the sites are not in the library.\n\nExample usage:\n\n```\nmake_fake_io_site -name IO_HSITE -width 1 -height 204\nmake_fake_io_site -name IO_VSITE -width 1 -height 200\nmake_fake_io_site -name IO_CSITE -width 200 -height 204\n```\n\n\n```tcl\nmake_fake_io_site \n    -name name\n    -width width\n    -height height\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-name` | Name of the site. |\n| `-width` | Width of the site (in microns). |\n| `-height` | Height of the site (in microns). |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_26.png"], "neg_text": ["How can I place IO filler cells in the row \"IO_CORNER_SOUTH_EAST\" as shown in the inspector window?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_13"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_26.png", "q_text": "How can I place IO filler cells in the row \"IO_CORNER_SOUTH_EAST\" as shown in the inspector window?", "pos_doc": "id:chip-level_connections_10\n### Placing IO Filler Cells\n\nTo place the IO filler cells.\n\nExample usage: \n\n```\nplace_io_fill -row IO_NORTH s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_SOUTH s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_WEST s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_EAST s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\n```\n\n```tcl\nplace_io_fill \n    -row row_name\n    [-permit_overlaps masters]\n    masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-permit_overlaps` | Names of the masters for the IO filler cells that allow for overlapping. |\n| `masters` | Names of the masters for the IO filler cells. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_26.png"], "neg_text": ["How can I create a custom IO site named \"IOSITE\" with a width of 140 microns and a height of 200 microns?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_10"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_59.png", "q_text": "How can I assign the net `mem_req_data_i[26]` to the bump instance `u_v18_7` as shown in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_59.png"], "neg_text": ["How can I adjust the placement of the bondpad such that it is centered over the IO cell `u_v18_7` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_59.png", "q_text": "How can I adjust the placement of the bondpad such that it is centered over the IO cell `u_v18_7` as shown in the screenshot?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_59.png"], "neg_text": ["How can I assign the net `mem_req_data_i[26]` to the bump instance `u_v18_7` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_37.png", "q_text": "How can I place the pad instance `IO_BOND_IO_EAST_SIDE` at a specific location on the east side of the chip?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_37.png"], "neg_text": ["How can I place the IO terminal for the instance `IO_BOND_IO_EAST_SIDE` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_37.png", "q_text": "How can I place the IO terminal for the instance `IO_BOND_IO_EAST_SIDE` shown in the screenshot?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_37.png"], "neg_text": ["How can I place the pad instance `IO_BOND_IO_EAST_SIDE` at a specific location on the east side of the chip?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_16.png", "q_text": "How can I remove a specific bump, such as BUMP_10_5, from the bump array in OpenROAD?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_16.png"], "neg_text": ["How can I remove a specific bump instance, such as DUMMY_BUMP_10_5, from the bump array created with the command `make_io_bump_array -bump DUMMY_BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"`?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_16.png", "q_text": "How can I remove a specific bump instance, such as DUMMY_BUMP_10_5, from the bump array created with the command `make_io_bump_array -bump DUMMY_BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"`?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n; id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_16.png"], "neg_text": ["How can I remove a specific bump, such as BUMP_10_5, from the bump array in OpenROAD?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_54.png", "q_text": "After executing the `rdl_route` command as shown in the screenshot, how can I ensure that the ring signals are properly connected?", "pos_doc": "id:chip-level_connections_11\n### Connecting Ring Signals\n\nOnce the ring is complete, use the following command to connect the ring signals.\n\n```tcl\nconnect_by_abutment\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_54.png"], "neg_text": ["How can I adjust the offset of the bondpad placement to ensure it aligns correctly with the IO instances in my design?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_11"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_54.png", "q_text": "How can I adjust the offset of the bondpad placement to ensure it aligns correctly with the IO instances in my design?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_54.png"], "neg_text": ["After executing the `rdl_route` command as shown in the screenshot, how can I ensure that the ring signals are properly connected?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_17.png", "q_text": "How can I define a bump array with 20 rows and 20 columns, starting at the origin (100, 100) with a pitch of (150, 150)?", "pos_doc": "id:chip-level_connections_2\n### Defining a Bump Array\n\nThis command defines a bump array.\n\nExample usage:\n\n```\nmake_io_bump_array -bump BUMP -origin \"200 200\" -rows 14 -columns 14 -pitch \"200 200\"\n```\n\n```tcl\nmake_io_bump_array \n    -bump master\n    -origin {x y}\n    -rows rows\n    -columns columns\n    -pitch {x y}\n    [-prefix prefix]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bump` | Name of the bump master. |\n| `-origin` | Origin of the array. |\n| `-rows` | Number of rows to create. |\n| `-columns` | Number of columns to create. |\n| `-pitch` | Pitch of the array. |\n| `-prefix` | Name prefix for the bump array. The default value is `BUMP_`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_17.png"], "neg_text": ["How can I assign a net to the bump instance located at the top-left corner of the bump grid in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_2"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_17.png", "q_text": "How can I assign a net to the bump instance located at the top-left corner of the bump grid in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_17.png"], "neg_text": ["How can I define a bump array with 20 rows and 20 columns, starting at the origin (100, 100) with a pitch of (150, 150)?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_33.png", "q_text": "How can I place the instance `u_ddr_dq_29_io_inner` at the coordinates (5650000, 1960000) with a 90-degree rotation using the `place_pad` command?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_33.png"], "neg_text": ["How can I place the IO terminal `u_ddr_dq_29_io_inner` on the padring, ensuring it is placed below the top layer?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_33.png", "q_text": "How can I place the IO terminal `u_ddr_dq_29_io_inner` on the padring, ensuring it is placed below the top layer?", "pos_doc": "id:chip-level_connections_1\n### Place IO Terminals\n\nIn the case where the bond pads are integrated into the padcell, the IO terminals need to be placed.\nThis command place terminals on the padring.\n\nExample usage: \n```\nplace_io_terminals u_*/PAD\nplace_io_terminals u_*/VDD\n```\n\n```tcl\nplace_io_terminals\n    -allow_non_top_layer\n    inst_pins\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-allow_non_top_layer` | Allow the terminal to be placed below the top layer. |\n| `inst_pins` | Instance pins to place the terminals on. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_33.png"], "neg_text": ["How can I place the instance `u_ddr_dq_29_io_inner` at the coordinates (5650000, 1960000) with a 90-degree rotation using the `place_pad` command?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_1"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_4.png", "q_text": "How can I assign the net \"DVDD\" to the bump instance \"BUMP_5_5\" as shown in the screenshot?", "pos_doc": "id:chip-level_connections_5\n### Assign a net to IO Bump\n\nThis command assigns a net to a bump instance.\n\nExample usage:\n\n```\nassign_io_bump -net p_ddr_addr_9_o BUMP_6_0\nassign_io_bump -net p_ddr_addr_8_o BUMP_6_2\nassign_io_bump -net DVSS BUMP_6_4\nassign_io_bump -net DVDD BUMP_7_3\nassign_io_bump -net DVDD -terminal u_dvdd/DVDD BUMP_8_3\nassign_io_bump -net p_ddr_addr_7_o BUMP_7_1\nassign_io_bump -net p_ddr_addr_6_o BUMP_7_0\n```\n\n```tcl\nassign_io_bump \n    -net net\n    [-terminal iterm]\n    [-dont_route]\n    instance\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-net` | Net to connect to. |\n| `-terminal` | Instance terminal to route to. |\n| `-dont_route` | Flag to indicate that this bump should not be routed, only perform assignment. |\n| `instance` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_4.png"], "neg_text": ["How can I remove the bump instance labeled \"DVDD\" from the bump array shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_5"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_4.png", "q_text": "How can I remove the bump instance labeled \"DVDD\" from the bump array shown in the screenshot?", "pos_doc": "id:chip-level_connections_4\n### Remove a single Bump Instance\n\nThis command removes a single bump instance.\n\n```tcl\nremove_io_bump \n    instance_name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `instance_name` | Name of the bump. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_4.png"], "neg_text": ["How can I assign the net \"DVDD\" to the bump instance \"BUMP_5_5\" as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_4"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_65.png", "q_text": "How can I place IO filler cells in the IO_NORTH row as shown in the screenshot?", "pos_doc": "id:chip-level_connections_10\n### Placing IO Filler Cells\n\nTo place the IO filler cells.\n\nExample usage: \n\n```\nplace_io_fill -row IO_NORTH s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_SOUTH s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_WEST s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\nplace_io_fill -row IO_EAST s8iom0s8_com_bus_slice_10um s8iom0s8_com_bus_slice_5um s8iom0s8_com_bus_slice_1um\n```\n\n```tcl\nplace_io_fill \n    -row row_name\n    [-permit_overlaps masters]\n    masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-permit_overlaps` | Names of the masters for the IO filler cells that allow for overlapping. |\n| `masters` | Names of the masters for the IO filler cells. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_65.png"], "neg_text": ["How can I place the \"vccd_lvclamp_pad\" at a specific location in the IO_SOUTH row?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_10"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_65.png", "q_text": "How can I place the \"vccd_lvclamp_pad\" at a specific location in the IO_SOUTH row?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_65.png"], "neg_text": ["How can I place IO filler cells in the IO_NORTH row as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_21.png", "q_text": "How can I place a pad at an offset of 500.0 in the IO_SOUTH row without mirroring it, as shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_21.png"], "neg_text": ["How can I place an IO ring around the boundary of the chip as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_21.png", "q_text": "How can I place an IO ring around the boundary of the chip as shown in the screenshot?", "pos_doc": "id:chip-level_connections_0\n# Chip-level Connections\n\nThe chip-level connections module in OpenROAD (`pad`) is based on the\nopen-source tool ICeWall. In this utility, either place an IO ring around the\nboundary of the chip and connect with either wirebond pads or a bump array.\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_21.png"], "neg_text": ["How can I place a pad at an offset of 500.0 in the IO_SOUTH row without mirroring it, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_0"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_58.png", "q_text": "How can I place the bondpad at an offset of {10 20} with respect to the IO instances in the layout shown in the screenshot?", "pos_doc": "id:chip-level_connections_12\n### Place Wirebond Pads\n\nTo place the wirebond pads over the IO cells.\n\nExample usage:\n\n```\nplace_bondpad -bond PAD IO_*\n```\n\n```tcl\nplace_bondpad \n    -bond master\n    [-offset {x y}]\n    [-rotation rotation]\n    io_instances\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-bond` | Name of the bondpad master. |\n| `-offset` | Offset to place the bondpad at with respect to the io instance. |\n| `-rotation` | Rotation of the bondpad. |\n| `io_instances` | Names of the instances to add bond pads to. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_58.png"], "neg_text": ["How can I place a pad at the top of the pad ring, similar to the pads shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_12"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_58.png", "q_text": "How can I place a pad at the top of the pad ring, similar to the pads shown in the screenshot?", "pos_doc": "id:chip-level_connections_9\n### Placing Pads\n\nTo place a pad into the pad ring.\n\nExample usage:\n\n```\nplace_pad -row IO_SOUTH -location 280.0 {u_clk.u_in}\nplace_pad -row IO_SOUTH -location 360.0 -mirror {u_reset.u_in}\nplace_pad -master sky130_fd_io__top_ground_hvc_wpad -row IO_SOUTH -location 439.5 {u_vzz_0}\nplace_pad -master sky130_fd_io__top_power_hvc_wpad -row IO_SOUTH -location 517.5 {u_v18_0}\n```\n\n```tcl\nplace_pad \n    -row row_name\n    -location offset\n    -mirror\n    [-master master]\n    name\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-row` | Name of the row to place the pad into, examples include: `IO_NORTH`, `IO_SOUTH`, `IO_WEST`, `IO_EAST`, `IO_NORTH_0`, `IO_NORTH_1`. |\n| `-location` | Offset from the bottom left chip edge to place the pad at. |\n| `-mirror` | Specifies if the pad should be mirrored. |\n| `-master` | Name of the instance master if the instance needs to be created. |\n| `name` | Name of the instance. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_58.png"], "neg_text": ["How can I place the bondpad at an offset of {10 20} with respect to the IO instances in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_9"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_66.png", "q_text": "How can I define an IO site for the corner pad shown in the screenshot with a rotation of 180 degrees?", "pos_doc": "id:chip-level_connections_6\n### Make IO Sites\n\nThis command defines an IO site for the pads to be placed into.\n\nExample usage:\n\n```\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35\nmake_io_sites -horizontal_site IOSITE_H -vertical_site IOSITE_V -corner_site IOSITE_C -offset 35 -rotation_horizontal R180\n```\n\n```tcl\nmake_io_sites \n    -horizontal_site site\n    -vertical_site site\n    -corner_site site\n    -offset offset\n    [-rotation_horizontal rotation]\n    [-rotation_vertical rotation]\n    [-rotation_corner rotation]\n    [-ring_index index]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-horizontal_site` | Name of the site for the horizontal pads (east and west). |\n| `-vertical_site` | Name of the site for the vertical pads (north and south). |\n| `-corner_site` | Name of the site for the corner cells. |\n| `-offset` | Offset from the die edge to place the rows. |\n| `-rotation_horizontal` | Rotation to apply to the horizontal sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_vertical` | Rotation to apply to the vertical sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-rotation_corner` | Rotation to apply to the corner sites to ensure pads are placed correctly. The default value is `R0`. |\n| `-ring_index` | Used to specify the index of the ring in case of multiple rings. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_66.png"], "neg_text": ["How can I ensure that the IO ring, including the `IO_CORNER_SOUTH_WEST_INST` endcap cell, is correctly placed around the boundary of the chip?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_6"]}
{"q_img": "source_images/chip-level_connections/chip-level_connections_66.png", "q_text": "How can I ensure that the IO ring, including the `IO_CORNER_SOUTH_WEST_INST` endcap cell, is correctly placed around the boundary of the chip?", "pos_doc": "id:chip-level_connections_0\n# Chip-level Connections\n\nThe chip-level connections module in OpenROAD (`pad`) is based on the\nopen-source tool ICeWall. In this utility, either place an IO ring around the\nboundary of the chip and connect with either wirebond pads or a bump array.\n\n", "neg_img": ["source_images/chip-level_connections/chip-level_connections_66.png"], "neg_text": ["How can I define an IO site for the corner pad shown in the screenshot with a rotation of 180 degrees?"], "q_type": "it", "c_type": "mix", "reference": ["chip-level_connections_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_60.png", "q_text": "How can I adjust the horizontal and vertical halo around the macros to ensure there is sufficient spacing between them in my layout?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_60.png"], "neg_text": ["In my layout, the macros are placed close to each other as shown in the screenshot. How can I increase the spacing between the macros?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_60.png", "q_text": "In my layout, the macros are placed close to each other as shown in the screenshot. How can I increase the spacing between the macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_60.png"], "neg_text": ["How can I adjust the horizontal and vertical halo around the macros to ensure there is sufficient spacing between them in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_71.png", "q_text": "How can I ensure that the sequential cell `DFF_X1` is placed with a specific horizontal and vertical halo around it?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_71.png"], "neg_text": ["How can I adjust the placement of the instance `r21` to ensure it is placed within a specific region of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_71.png", "q_text": "How can I adjust the placement of the instance `r21` to ensure it is placed within a specific region of the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_71.png"], "neg_text": ["How can I ensure that the sequential cell `DFF_X1` is placed with a specific horizontal and vertical halo around it?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_38.png", "q_text": "In my layout, I want to ensure there is a specific horizontal and vertical halo around the macros. How can I set the halo values for macro placement?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_38.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I ensure there is a halo around the macros during placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_38.png", "q_text": "In my layout, the macros are placed too close to each other. How can I ensure there is a halo around the macros during placement?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_38.png"], "neg_text": ["In my layout, I want to ensure there is a specific horizontal and vertical halo around the macros. How can I set the halo values for macro placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_70.png", "q_text": "In my layout, the macro \"mem1\" is placed in the middle of the core. How can I define a specific area for macro placement using the `rtl_macro_placer` command?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_70.png"], "neg_text": ["In my layout, the macro \"mem1\" is placed in the middle of the core. How can I adjust the placement to move it closer to the boundary?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_70.png", "q_text": "In my layout, the macro \"mem1\" is placed in the middle of the core. How can I adjust the placement to move it closer to the boundary?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_70.png"], "neg_text": ["In my layout, the macro \"mem1\" is placed in the middle of the core. How can I define a specific area for macro placement using the `rtl_macro_placer` command?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_94.png", "q_text": "How can I restrict the placement of the macro \"U8\" to a specific region within the core area?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_94.png"], "neg_text": ["How can I set a horizontal and vertical halo around the macro \"U8\" to ensure spacing from other macros during placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_94.png", "q_text": "How can I set a horizontal and vertical halo around the macro \"U8\" to ensure spacing from other macros during placement?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_94.png"], "neg_text": ["How can I restrict the placement of the macro \"U8\" to a specific region within the core area?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_9.png", "q_text": "How can I adjust the halo values to create more space between the macros `mem0` and `mem1` in my layout?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_9.png"], "neg_text": ["How can I adjust the halo width and height to increase the spacing between `mem0` and `mem1` in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_9.png", "q_text": "How can I adjust the halo width and height to increase the spacing between `mem0` and `mem1` in my layout?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_9.png"], "neg_text": ["How can I adjust the halo values to create more space between the macros `mem0` and `mem1` in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_76.png", "q_text": "In my macro placement process, I see that the solution with the best weighted wire length is 1805.16. How can I adjust the wirelength weight to potentially improve this result?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_76.png"], "neg_text": ["In the macro placement process shown in the log, how can I specify the spacing between macros and the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_76.png", "q_text": "In the macro placement process shown in the log, how can I specify the spacing between macros and the die boundary?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_76.png"], "neg_text": ["In my macro placement process, I see that the solution with the best weighted wire length is 1805.16. How can I adjust the wirelength weight to potentially improve this result?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_42.png", "q_text": "How can I ensure that the macros in my layout are placed near the boundaries of the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_42.png"], "neg_text": ["How can I adjust the spacing between the macros in my layout to ensure there is more space between them?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_42.png", "q_text": "How can I adjust the spacing between the macros in my layout to ensure there is more space between them?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_42.png"], "neg_text": ["How can I ensure that the macros in my layout are placed near the boundaries of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_27.png", "q_text": "In my design `gcd_mem3`, I want to ensure that macros are placed with a specific spacing between them and the fence boundary. How can I achieve this using the `macro_placement` command?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_27.png"], "neg_text": ["After creating the design components and connections, how can I restrict macro placements to a specific region within the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_27.png", "q_text": "After creating the design components and connections, how can I restrict macro placements to a specific region within the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_27.png"], "neg_text": ["In my design `gcd_mem3`, I want to ensure that macros are placed with a specific spacing between them and the fence boundary. How can I achieve this using the `macro_placement` command?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_17.png", "q_text": "How can I ensure that the macro \"mem1\" is placed closer to the boundary of the core area instead of the middle?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_17.png"], "neg_text": ["How can I move the macro \"mem1\" to the boundary of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_17.png", "q_text": "How can I move the macro \"mem1\" to the boundary of the core area?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_17.png"], "neg_text": ["How can I ensure that the macro \"mem1\" is placed closer to the boundary of the core area instead of the middle?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_29.png", "q_text": "In my layout, the macros are placed very close to each other. How can I ensure there is a halo or spacing around each macro during placement?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_29.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_29.png", "q_text": "In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_29.png"], "neg_text": ["In my layout, the macros are placed very close to each other. How can I ensure there is a halo or spacing around each macro during placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_100.png", "q_text": "In my layout, the macros U3 and U8 are placed too close to each other. How can I increase the spacing between them using the `macro_placement` command?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_100.png"], "neg_text": ["In my layout, the macros U3 and U8 are placed too close to each other. How can I increase the horizontal space between them using the RTL Macro Placer command?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_100.png", "q_text": "In my layout, the macros U3 and U8 are placed too close to each other. How can I increase the horizontal space between them using the RTL Macro Placer command?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_100.png"], "neg_text": ["In my layout, the macros U3 and U8 are placed too close to each other. How can I increase the spacing between them using the `macro_placement` command?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_98.png", "q_text": "Why was the macro placement skipped in my design, and how can I ensure that the macro placement step is executed?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_98.png"], "neg_text": ["In my OpenROAD log, I see the message \"[INFO MPL-0013] Skipping macro placement.\" What could be the reason for this, and how can I ensure that macro placement is performed?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_98.png", "q_text": "In my OpenROAD log, I see the message \"[INFO MPL-0013] Skipping macro placement.\" What could be the reason for this, and how can I ensure that macro placement is performed?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_98.png"], "neg_text": ["Why was the macro placement skipped in my design, and how can I ensure that the macro placement step is executed?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_33.png", "q_text": "In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros using the `macro_placement` command?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_33.png"], "neg_text": ["How can I ensure that the macros in my layout are placed closer to the boundaries of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_33.png", "q_text": "How can I ensure that the macros in my layout are placed closer to the boundaries of the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_33.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros using the `macro_placement` command?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_37.png", "q_text": "In my layout, I want to restrict the placement of macros to a specific region within the core area. How can I achieve this using the `macro_placement` command?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_37.png"], "neg_text": ["How can I ensure that the macros in my design have sufficient space between them during placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_37.png", "q_text": "How can I ensure that the macros in my design have sufficient space between them during placement?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_37.png"], "neg_text": ["In my layout, I want to restrict the placement of macros to a specific region within the core area. How can I achieve this using the `macro_placement` command?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_21.png", "q_text": "How can I adjust the halo settings to ensure there is more space between the macros `mem0` and `mem1` in my layout?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_21.png"], "neg_text": ["How can I restrict the placement of macros `mem0` and `mem1` to a specific region within the core area?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_21.png", "q_text": "How can I restrict the placement of macros `mem0` and `mem1` to a specific region within the core area?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_21.png"], "neg_text": ["How can I adjust the halo settings to ensure there is more space between the macros `mem0` and `mem1` in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_25.png", "q_text": "In my layout, the memory blocks are not aligned properly. How can I ensure that the macros are placed with proper alignment and spacing?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_25.png"], "neg_text": ["How can I adjust the horizontal and vertical spacing between the macros to ensure there is enough space for the nets like `mem_out1` in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_25.png", "q_text": "How can I adjust the horizontal and vertical spacing between the macros to ensure there is enough space for the nets like `mem_out1` in my layout?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_25.png"], "neg_text": ["In my layout, the memory blocks are not aligned properly. How can I ensure that the macros are placed with proper alignment and spacing?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_11.png", "q_text": "How can I restrict the placement of the macro \"mem0\" to a specific region within the core area?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_11.png"], "neg_text": ["How can I adjust the horizontal and vertical halo around the macro `mem0` to ensure there is sufficient spacing between it and other macros?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_11.png", "q_text": "How can I adjust the horizontal and vertical halo around the macro `mem0` to ensure there is sufficient spacing between it and other macros?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_11.png"], "neg_text": ["How can I restrict the placement of the macro \"mem0\" to a specific region within the core area?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_12.png", "q_text": "How can I ensure that there is a specific spacing between the macro `mem2` and other macros in my design?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_12.png"], "neg_text": ["How can I adjust the placement of the macros `mem_out0[0]` and `mem_out0[1]` to ensure they are closer to the boundary of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_12.png", "q_text": "How can I adjust the placement of the macros `mem_out0[0]` and `mem_out0[1]` to ensure they are closer to the boundary of the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_12.png"], "neg_text": ["How can I ensure that there is a specific spacing between the macro `mem2` and other macros in my design?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_39.png", "q_text": "How can I ensure that the macros \"mem0\" and \"mem2\" are placed with a specific horizontal and vertical halo in my layout?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_39.png"], "neg_text": ["How can I adjust the placement of the macros \"mem0\" and \"mem2\" to ensure there is a specific horizontal spacing between them?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_39.png", "q_text": "How can I adjust the placement of the macros \"mem0\" and \"mem2\" to ensure there is a specific horizontal spacing between them?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_39.png"], "neg_text": ["How can I ensure that the macros \"mem0\" and \"mem2\" are placed with a specific horizontal and vertical halo in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_20.png", "q_text": "How can I add a horizontal halo around the macros `mem0` and `mem1` to create space between them?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_20.png"], "neg_text": ["In my layout, the macros `mem0` and `mem1` are placed side by side with no space between them. How can I add some space between these two macros?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_20.png", "q_text": "In my layout, the macros `mem0` and `mem1` are placed side by side with no space between them. How can I add some space between these two macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_20.png"], "neg_text": ["How can I add a horizontal halo around the macros `mem0` and `mem1` to create space between them?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_43.png", "q_text": "In my layout, I want to ensure that macros are placed with a specific spacing between them. How can I specify the horizontal and vertical channel width between macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_43.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I ensure there is a minimum distance between the macros during placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_43.png", "q_text": "In my layout, the macros are placed too close to each other. How can I ensure there is a minimum distance between the macros during placement?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_43.png"], "neg_text": ["In my layout, I want to ensure that macros are placed with a specific spacing between them. How can I specify the horizontal and vertical channel width between macros?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_14.png", "q_text": "In my layout, the macros `mem_out1[4]` and `mem_out1[3]` are too close to each other. How can I increase the spacing between these macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_14.png"], "neg_text": ["How can I adjust the bounding box coordinates for the macro associated with the net `mem_out1[4]` in my design?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_14.png", "q_text": "How can I adjust the bounding box coordinates for the macro associated with the net `mem_out1[4]` in my design?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_14.png"], "neg_text": ["In my layout, the macros `mem_out1[4]` and `mem_out1[3]` are too close to each other. How can I increase the spacing between these macros?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_41.png", "q_text": "In my layout, the sequential cell DFF_X1 is placed at coordinates (134.486 µm, 93.1475 µm). How can I ensure that there is a specific horizontal and vertical halo around this macro?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_41.png"], "neg_text": ["How can I ensure that the macro `r36` has a horizontal halo around it to avoid overlap with other macros?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_41.png", "q_text": "How can I ensure that the macro `r36` has a horizontal halo around it to avoid overlap with other macros?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_41.png"], "neg_text": ["In my layout, the sequential cell DFF_X1 is placed at coordinates (134.486 µm, 93.1475 µm). How can I ensure that there is a specific horizontal and vertical halo around this macro?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_52.png", "q_text": "How can I adjust the placement of the macro \"mem0\" to be closer to the boundaries of the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_52.png"], "neg_text": ["In my layout, the macro `mem0` is placed in the middle of the core. How can I restrict the macro placement to a specific region within the core?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_52.png", "q_text": "In my layout, the macro `mem0` is placed in the middle of the core. How can I restrict the macro placement to a specific region within the core?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_52.png"], "neg_text": ["How can I adjust the placement of the macro \"mem0\" to be closer to the boundaries of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_4.png", "q_text": "How can I adjust the placement of the macro \"mem0\" to be closer to the boundary of the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_4.png"], "neg_text": ["In my layout, the macro \"mem0\" is placed in the middle of the core. How can I restrict the placement of \"mem0\" to a specific region within the core area?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_4.png", "q_text": "In my layout, the macro \"mem0\" is placed in the middle of the core. How can I restrict the placement of \"mem0\" to a specific region within the core area?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_4.png"], "neg_text": ["How can I adjust the placement of the macro \"mem0\" to be closer to the boundary of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_34.png", "q_text": "How can I ensure that the macros in my layout have a specific horizontal and vertical spacing between them?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_34.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I increase the horizontal and vertical halo around the macros to ensure more spacing between them?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_34.png", "q_text": "In my layout, the macros are placed too close to each other. How can I increase the horizontal and vertical halo around the macros to ensure more spacing between them?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_34.png"], "neg_text": ["How can I ensure that the macros in my layout have a specific horizontal and vertical spacing between them?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_62.png", "q_text": "In my design `gcd_mem3`, the core area is 45440.514 um^2, and the macro instance area is 9033.360 um^2. How can I ensure that macros are placed with a specific spacing between them and the core boundary?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_62.png"], "neg_text": ["In my design `gcd_mem3`, the core area is 45440.514 um^2, and the macro instances area is 9033.360 um^2. How can I adjust the target utilization for macro placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_62.png", "q_text": "In my design `gcd_mem3`, the core area is 45440.514 um^2, and the macro instances area is 9033.360 um^2. How can I adjust the target utilization for macro placement?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_62.png"], "neg_text": ["In my design `gcd_mem3`, the core area is 45440.514 um^2, and the macro instance area is 9033.360 um^2. How can I ensure that macros are placed with a specific spacing between them and the core boundary?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_44.png", "q_text": "How can I adjust the horizontal and vertical halo around the macros in my design to ensure there is sufficient spacing between them?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_44.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros using the `macro_placement` command?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_44.png", "q_text": "In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros using the `macro_placement` command?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_44.png"], "neg_text": ["How can I adjust the horizontal and vertical halo around the macros in my design to ensure there is sufficient spacing between them?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_53.png", "q_text": "In my layout, the macros are placed too closely together. How can I increase the spacing between the macros using the `macro_placement` command?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_53.png"], "neg_text": ["How can I ensure there is a horizontal halo around the macros in my layout to avoid them being placed too close to each other?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_53.png", "q_text": "How can I ensure there is a horizontal halo around the macros in my layout to avoid them being placed too close to each other?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_53.png"], "neg_text": ["In my layout, the macros are placed too closely together. How can I increase the spacing between the macros using the `macro_placement` command?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_19.png", "q_text": "In my layout, the macros `mem_out0[2]` and `mem_out0[3]` are placed too close to the left boundary of the core. How can I increase the spacing between these macros and the core boundary?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_19.png"], "neg_text": ["How can I define the bounding box coordinates for the macro `mem2` to ensure it is placed within a specific area in the layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_19.png", "q_text": "How can I define the bounding box coordinates for the macro `mem2` to ensure it is placed within a specific area in the layout?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_19.png"], "neg_text": ["In my layout, the macros `mem_out0[2]` and `mem_out0[3]` are placed too close to the left boundary of the core. How can I increase the spacing between these macros and the core boundary?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_66.png", "q_text": "How can I adjust the spacing between the macros mem0, mem1, mem2, and mem3 in my layout?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_66.png"], "neg_text": ["How can I adjust the horizontal and vertical halo around the macros in my layout to ensure there is sufficient spacing between them?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_66.png", "q_text": "How can I adjust the horizontal and vertical halo around the macros in my layout to ensure there is sufficient spacing between them?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_66.png"], "neg_text": ["How can I adjust the spacing between the macros mem0, mem1, mem2, and mem3 in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_61.png", "q_text": "How can I adjust the halo settings to increase the spacing around the macros in my layout?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_61.png"], "neg_text": ["In my layout, the macros are placed in the bottom-right corner of the core area. How can I restrict the macro placements to a specific region within the core?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_61.png", "q_text": "In my layout, the macros are placed in the bottom-right corner of the core area. How can I restrict the macro placements to a specific region within the core?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_61.png"], "neg_text": ["How can I adjust the halo settings to increase the spacing around the macros in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_54.png", "q_text": "In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_54.png"], "neg_text": ["How can I adjust the halo width around the macros in my design to ensure there is sufficient spacing between them?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_54.png", "q_text": "How can I adjust the halo width around the macros in my design to ensure there is sufficient spacing between them?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_54.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_72.png", "q_text": "In my layout, the macros are placed too close to each other. How can I ensure there is more space around each macro?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_72.png"], "neg_text": ["In my layout, the macros `r21` and `r31` are placed very close to each other. How can I increase the spacing between these two macros?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_72.png", "q_text": "In my layout, the macros `r21` and `r31` are placed very close to each other. How can I increase the spacing between these two macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_72.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I ensure there is more space around each macro?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_36.png", "q_text": "In my layout, the macros are not aligned with the cell rows. How can I ensure that the macros snap to the cell rows during placement?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_36.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_36.png", "q_text": "In my layout, the macros are placed too close to each other. How can I increase the spacing between the macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_36.png"], "neg_text": ["In my layout, the macros are not aligned with the cell rows. How can I ensure that the macros snap to the cell rows during placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_18.png", "q_text": "How can I restrict the placement of the macro `mem0` to a specific region within the core area?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_18.png"], "neg_text": ["How can I adjust the horizontal and vertical halo around the macro `mem0` to ensure there is sufficient spacing between it and other macros?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_18.png", "q_text": "How can I adjust the horizontal and vertical halo around the macro `mem0` to ensure there is sufficient spacing between it and other macros?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_18.png"], "neg_text": ["How can I restrict the placement of the macro `mem0` to a specific region within the core area?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_15.png", "q_text": "In my layout, the macro \"mem0\" is placed in the middle of the core. How can I restrict the placement of \"mem0\" to a specific region within the core area?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_15.png"], "neg_text": ["How can I use the `rtl_macro_placer` command to ensure that the macro `mem0` is placed closer to the boundary of the core area instead of the middle?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_15.png", "q_text": "How can I use the `rtl_macro_placer` command to ensure that the macro `mem0` is placed closer to the boundary of the core area instead of the middle?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_15.png"], "neg_text": ["In my layout, the macro \"mem0\" is placed in the middle of the core. How can I restrict the placement of \"mem0\" to a specific region within the core area?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_56.png", "q_text": "In my layout, the macros are placed too close to each other. How can I ensure there is a halo or spacing around each macro during placement?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_56.png"], "neg_text": ["How can I adjust the halo width around the sequential cell `DFF_X1` in my layout to ensure better spacing between instances?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_56.png", "q_text": "How can I adjust the halo width around the sequential cell `DFF_X1` in my layout to ensure better spacing between instances?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_56.png"], "neg_text": ["In my layout, the macros are placed too close to each other. How can I ensure there is a halo or spacing around each macro during placement?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_69.png", "q_text": "How can I adjust the placement of the macro \"mem0\" to ensure it is closer to the boundaries of the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_69.png"], "neg_text": ["How can I restrict the placement of the macro \"mem0\" to a specific region within the core area?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_69.png", "q_text": "How can I restrict the placement of the macro \"mem0\" to a specific region within the core area?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_69.png"], "neg_text": ["How can I adjust the placement of the macro \"mem0\" to ensure it is closer to the boundaries of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_92.png", "q_text": "In my layout, the macros U1 and U4 are placed very close to each other. How can I increase the spacing between these macros?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_92.png"], "neg_text": ["How can I ensure that the macros U1 and U4 in my layout have sufficient space between them during macro placement?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_92.png", "q_text": "How can I ensure that the macros U1 and U4 in my layout have sufficient space between them during macro placement?", "pos_doc": "id:macro_placement_0\n# Macro Placement\n\nThe macro placement module in OpenROAD (`mpl`) is based on \nTritonMacroPlacer, an open-source ParquetFP-based macro cell placer.\nThe macro placer places macros/blocks honoring halos, channels\nand cell row \"snapping\".\nRun `global_placement` before macro placement.\n\nApproximately $\\Bigl\\lceil [{\\frac{numMacros}{3}}]^{1.5} \\Bigr\\rceil$ quadrisections\nof the initial placed mixed-size layout are explored and packed using\nParquetFP-based annealing. The best resulting floorplan according to a\nheuristic evaluation function is kept.\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_92.png"], "neg_text": ["In my layout, the macros U1 and U4 are placed very close to each other. How can I increase the spacing between these macros?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_0"]}
{"q_img": "source_images/macro_placement/macro_palcement_65.png", "q_text": "In my layout, the macro `mem1` is placed too close to the boundary. How can I ensure that there is sufficient spacing between the macro and the boundary?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_65.png"], "neg_text": ["How can I adjust the bounding box coordinates to change the placement of the macro \"mem1\" in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_65.png", "q_text": "How can I adjust the bounding box coordinates to change the placement of the macro \"mem1\" in my layout?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_65.png"], "neg_text": ["In my layout, the macro `mem1` is placed too close to the boundary. How can I ensure that there is sufficient spacing between the macro and the boundary?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_35.png", "q_text": "How can I ensure that there is a specific horizontal and vertical spacing between the macros in my design?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_35.png"], "neg_text": ["In my layout, I want to add a horizontal and vertical halo around the macros to ensure there is enough space between them. Which parameters should I use with the `rtl_macro_placer` command to achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_35.png", "q_text": "In my layout, I want to add a horizontal and vertical halo around the macros to ensure there is enough space between them. Which parameters should I use with the `rtl_macro_placer` command to achieve this?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_35.png"], "neg_text": ["How can I ensure that there is a specific horizontal and vertical spacing between the macros in my design?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_32.png", "q_text": "How can I ensure that the `gcd_mem3` macro is placed with a specific horizontal and vertical halo around it?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_32.png"], "neg_text": ["How can I ensure that the macro `gcd_mem3` is placed near the boundary of the core area?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_32.png", "q_text": "How can I ensure that the macro `gcd_mem3` is placed near the boundary of the core area?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_32.png"], "neg_text": ["How can I ensure that the `gcd_mem3` macro is placed with a specific horizontal and vertical halo around it?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_81.png", "q_text": "How can I unlock the placement status of the macro \"mem1\" to allow it to be moved?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_81.png"], "neg_text": ["How can I unlock the placement status of the macro `mem1` and allow it to be moved during the macro placement process?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_81.png", "q_text": "How can I unlock the placement status of the macro `mem1` and allow it to be moved during the macro placement process?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_81.png"], "neg_text": ["How can I unlock the placement status of the macro \"mem1\" to allow it to be moved?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_48.png", "q_text": "In my layout, the macros are placed in the middle of the core. How can I adjust the placement style to push them towards the corners?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_48.png"], "neg_text": ["How can I define a specific boundary for macro placement to ensure they are within a certain area in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_48.png", "q_text": "How can I define a specific boundary for macro placement to ensure they are within a certain area in my layout?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_48.png"], "neg_text": ["In my layout, the macros are placed in the middle of the core. How can I adjust the placement style to push them towards the corners?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_23.png", "q_text": "How can I adjust the horizontal and vertical spacing between the macros `mem0` and `mem1` in my layout?", "pos_doc": "id:macro_placement_1\n### Macro Placement\n\nThis command performs macro placement.\nFor placement style, `corner_max_wl` means that choosing the partitions that maximise the wirelength \nof connections between the macros to force them to the corners. Vice versa for `corner_min_wl`.\n\nMacros will be placed with $max(halo * 2, channel)$ spacing between macros, and between\nmacros and the fence/die boundary. If no solutions are found, try reducing the\nchannel/halo.\n\n```tcl\nmacro_placement \n    [-halo {halo_x halo_y}]\n    [-channel {channel_x channel_y}]\n    [-fence_region {lx ly ux uy}]\n    [-snap_layer snap_layer_number]\n    [-style corner_wax_wl|corner_min_wl]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-halo` | Horizontal and vertical halo around macros (microns). |\n| `-channel` | Horizontal and vertical channel width between macros (microns). |\n| `-fence_region` | Restrict macro placements to a region (microns). Defaults to the core area. |\n| `-snap_layer` | Snap macro origins to this routing layer track. |\n| `-style` | Placement style, to choose either `corner_max_wl` or `corner_min_wl`. The default value is `corner_max_wl`. |\n", "neg_img": ["source_images/macro_placement/macro_palcement_23.png"], "neg_text": ["How can I adjust the horizontal and vertical spacing around the macros `mem0` and `mem1` in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["macro_placement_1"]}
{"q_img": "source_images/macro_placement/macro_palcement_23.png", "q_text": "How can I adjust the horizontal and vertical spacing around the macros `mem0` and `mem1` in my layout?", "pos_doc": "id:hierarchical_macro_placement_1\n### RTL Macro Placer\n\nThis command executes the Hier-RTLMP algorithm for macro placement.\n\n```tcl\nrtl_macro_placer \n    [-max_num_macro max_num_macro]\n    [-min_num_macro min_num_macro]\n    [-max_num_macro max_num_macro]\n    [-max_num_inst max_num_inst]  \n    [-min_num_inst min_num_inst] \n    [-tolerance tolerance]     \n    [-max_num_level max_num_level] \n    [-coarsening_ratio coarsening_ratio]\n    [-num_bundled_ios num_bundled_ios]\n    [-large_net_threshold large_net_threshold]\n    [-signature_net_threshold signature_net_threshold]\n    [-halo_width halo_width] \n    [-halo_height halo_height]\n    [-fence_lx fence_lx] \n    [-fence_ly fence_ly]\n    [-fence_ux fence_ux]\n    [-fence_uy fence_uy]\n    [-area_weight area_weight] \n    [-outline_weight outline_weight] \n    [-wirelength_weight wirelength_weight]\n    [-guidance_weight guidance_weight]\n    [-fence_weight fence_weight] \n    [-boundary_weight boundary_weight]\n    [-notch_weight notch_weight]\n    [-macro_blockage_weight macro_blockage_weight]\n    [-pin_access_th pin_access_th]\n    [-target_util target_util]\n    [-target_dead_space target_dead_space]\n    [-min_ar min_ar]\n    [-snap_layer snap_layer]\n    [-bus_planning]\n    [-report_directory report_directory]\n    [-write_macro_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_num_macro`, `-min_num_macro` | Maximum/minimum number of macros in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-max_num_inst`, `-min_num_inst` | Maximum/minimum number of standard cells in a cluster. The default value is `0` for both, and the allowed values are integers `[0, MAX_INT]`. |\n| `-tolerance` | Add a margin to the minimum and maximum number of macros/std cells in a cluster. For min, we multiply by (1 - `tol`), and for the max (1 + `tol`). This is to improve the robustness of hierarchical clustering. The allowed values are floats `[0, 1)`, and the default value is `0.1`. |\n| `-max_num_level` | Maximum depth of physical hierarchical tree. The default value is `2`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-coarsening_ratio` | The larger the coarsening_ratio, the faster the convergence process. The allowed values are floats, and the default value is `10.0`. |\n| `-num_bundled_ios` | Specifies the number of bundled pins for the left, right, top, and bottom boundaries. The default value is `3`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-large_net_threshold` | Ignore nets with many connections during clustering, such as global nets. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-signature_net_threshold` | Minimum number of connections between two clusters to be identified as connected. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-halo_width` | Horizontal/vertical halo around macros (microns). The allowed values are floats, and the default value is `0.0`. |\n| `-fence_lx`, `-fence_ly`, `-fence_ux`, `-fence_uy` | Defines the global fence bounding box coordinates. The default values are the core area coordinates). |\n| `-pin_access_th` | Specifies the pin access threshold value of macros. The default value is `0.0`, and the allowed values are floats [0,1]. |\n| `-target_util` | Specifies the target utilization of `MixedCluster` and has higher priority than target_dead_space. The allowed values are floats, and the default value is `0.25`. |\n| `-target_dead_space` | Specifies the target dead space percentage, which influences the utilization of `StandardCellCluster`. The allowed values are floats, and the default value is `0.05`. |\n| `-min_ar` | Specifies the minimum aspect ratio $a$, or the ratio of its width to height of a `StandardCellCluster` from $[a, \\frac{1}{a}]$. The allowed values are floats, and the default value is `0.33`. |\n| `-snap_layer` | Snap macro origins to this routing layer track. The default value is 4, and the allowed values are integers `[1, MAX_LAYER]`). |\n| `-bus_planning` | Flag to enable bus planning. We recommend to enable bus planning for technologies with very limited routing layers such as SKY130 and GF180. As for technologies such as NanGate45 and ASAP7, we recommend to keep it disabled. |\n| `-report_directory` | Save reports to this directory. |\n| `-write_macro_placement` | Generates a file with the design's macro placement in the format of calls for the `place_macro` command. |\n\n#### Simulated Annealing Weight parameters\n\nDo note that while action probabilities are normalized to 1.0, the weights are not necessarily normalized. \n\n| Switch Name | Description | \n| ----- | ----- |\n| `-area_weight` | Weight for the area of current floorplan.  The allowed values are floats, and the default value is `0.1`. |\n| `-outline_weight` | Weight for violating the fixed outline constraint, meaning that all clusters should be placed within the shape of their parent cluster.  The allowed values are floats, and the default value is `100.0`. |\n| `-wirelength_weight` | Weight for half-perimeter wirelength.  The allowed values are floats, and the default value is `100.0`. |\n| `-guidance_weight` | Weight for guidance cost or clusters being placed near specified regions if users provide such constraints.  The allowed values are floats, and the default value is `10.0`. |\n| `-fence_weight` | Weight for fence cost, or how far the macro is from zero fence violation.  The allowed values are floats, and the default value is `10.0`. |\n| `-boundary_weight` | Weight for the boundary, or how far the hard macro clusters are from boundaries. Note that mixed macro clusters are not pushed, thus not considered in this cost.  The allowed values are floats, and the default value is `50.0`. |\n| `-notch_weight` | Weight for the notch, or the existence of dead space that cannot be used for placement & routing. Note that this cost applies only to hard macro clusters.  The allowed values are floats, and the default value is `10.0`. |\n| `-macro_blockage_weight` | Weight for macro blockage, or the overlapping instances of the macro.  The allowed values are floats, and the default value is `10.0`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/macro_placement/macro_palcement_23.png"], "neg_text": ["How can I adjust the horizontal and vertical spacing between the macros `mem0` and `mem1` in my layout?"], "q_type": "it", "c_type": "mix", "reference": ["hierarchical_macro_placement_1"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_10.png", "q_text": "In the screenshot, the tracks are created horizontally. How can I adjust the pitch and offset of these tracks using the `make_tracks` command?", "pos_doc": "id:floorplan_initialization_2\n### Make Tracks\n\nThe `initialize_floorplan` command removes existing tracks. \nUse the `make_tracks` command to add routing tracks to a floorplan.\n\n```tcl\nmake_tracks \n    [layer]\n    [-x_pitch x_pitch]\n    [-y_pitch y_pitch]\n    [-x_offset x_offset]\n    [-y_offset y_offset]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `layer` | Select layer name to make tracks for. Defaults to all layers. |\n| `-x_pitch`, `-y_pitch` | If set, overrides the LEF technology x-/y- pitch. Use the same unit as in the LEF file. |\n| `-x_offset`, `-y_offset` | If set, overrides the LEF technology x-/y- offset. Use the same unit as in the LEFT file. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_10.png"], "neg_text": ["In the screenshot, the rows of standard cells appear to be tightly packed. How can I adjust the `initialize_floorplan` command to increase the space between the core and the die?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_2"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_10.png", "q_text": "In the screenshot, the rows of standard cells appear to be tightly packed. How can I adjust the `initialize_floorplan` command to increase the space between the core and the die?", "pos_doc": "id:floorplan_initialization_1\n### Initialize Floorplan\n\nDo note that there are two ways of setting the floorplan dimensions.\nThe user can either specify manually die/core area, or\nspecify the utilization/aspect ratio. If you set both, \nunexpected behaviour might occur.\n\n- Method 1: Automatic die size calculation\nExample: `initialize_floorplan -utilization 70 -aspect_ratio 1.0 -core_space 0.0 -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\n- Method 2: Set die/core area\nExample: `initialize_floorplan -die_area 0 0 2000 2000 -core_area 100 100 1900 1900` -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\nThe die area and core area used to write ROWs can be specified explicitly\nwith the `-die_area` and `-core_area` arguments. Alternatively, the die and\ncore areas can be computed from the design size and utilization as shown below:\n\nThe -site argument determines the basic single-height rows to make.\nFor a hybrid row design the site should have a row pattern.  Any sites\nreferenced by an instance in the netlist will also have rows\nconstructed for them.\n\nAdditional sites are specified if you wish to have rows for a site\nthat is not used in the nelist but may be needed later.  For example,\nyou might not have any double height cells in the incoming netlist but\nyou expect some to be generated by flop clustering later in the flow.\n\nExample computation:\n\n```\ncore_area = design_area / (utilization / 100)\ncore_width = sqrt(core_area / aspect_ratio)\ncore_height = core_width * aspect_ratio\ncore = ( core_space_left, core_space_bottom )\n      ( core_space_left + core_width, core_space_bottom + core_height )\ndie =  ( 0, 0 )\n      ( core_width + core_space_left + core_space_right,\n        core_height + core_space_bottom + core_space_top )\n```\n\n\n```tcl\ninitialize_floorplan\n  [-utilization util]\n  [-aspect_ratio ratio]\n  [-core_space space | {bottom top left right}]\n  [-die_area {llx lly urx ury}]\n  [-core_area {llx lly urx ury}]\n  [-additional_sites site_names]\n  [-site site_name]\n  [-row_parity NONE|EVEN|ODD]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-utilization` | Percentage utilization. Allowed values are `double` in the range `(0-100]`. |\n| `-aspect_ratio` | Ratio $\\frac{height}{width}$. The default value is `1.0` and the allowed values are floats `[0, 1.0]`. |\n| `-core_space` | Space around the core, default `0.0` microns. Allowed values are either one value for all margins or a set of four values, one for each margin. The order of the four values are: `{bottom top left right}`. |\n| `-additional_sites` | Tcl list of sites to make rows for (e.g. `{SITEXX, SITEYY}`) |\n| `-site` | Site name. |\n| `-die_area` | Die area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-core_area` | Core area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-row_parity` | Snap to either an odd (`ODD`) or even (`EVEN`) number of rows. Defaults to `NONE` (no constraint on parity). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_10.png"], "neg_text": ["In the screenshot, the tracks are created horizontally. How can I adjust the pitch and offset of these tracks using the `make_tracks` command?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_1"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_40.png", "q_text": "In the screenshot, the core area is surrounded by tracks, but the space between the core and the die seems fixed. How can I adjust the space between the core and the die area using the `initialize_floorplan` command?", "pos_doc": "id:floorplan_initialization_1\n### Initialize Floorplan\n\nDo note that there are two ways of setting the floorplan dimensions.\nThe user can either specify manually die/core area, or\nspecify the utilization/aspect ratio. If you set both, \nunexpected behaviour might occur.\n\n- Method 1: Automatic die size calculation\nExample: `initialize_floorplan -utilization 70 -aspect_ratio 1.0 -core_space 0.0 -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\n- Method 2: Set die/core area\nExample: `initialize_floorplan -die_area 0 0 2000 2000 -core_area 100 100 1900 1900` -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\nThe die area and core area used to write ROWs can be specified explicitly\nwith the `-die_area` and `-core_area` arguments. Alternatively, the die and\ncore areas can be computed from the design size and utilization as shown below:\n\nThe -site argument determines the basic single-height rows to make.\nFor a hybrid row design the site should have a row pattern.  Any sites\nreferenced by an instance in the netlist will also have rows\nconstructed for them.\n\nAdditional sites are specified if you wish to have rows for a site\nthat is not used in the nelist but may be needed later.  For example,\nyou might not have any double height cells in the incoming netlist but\nyou expect some to be generated by flop clustering later in the flow.\n\nExample computation:\n\n```\ncore_area = design_area / (utilization / 100)\ncore_width = sqrt(core_area / aspect_ratio)\ncore_height = core_width * aspect_ratio\ncore = ( core_space_left, core_space_bottom )\n      ( core_space_left + core_width, core_space_bottom + core_height )\ndie =  ( 0, 0 )\n      ( core_width + core_space_left + core_space_right,\n        core_height + core_space_bottom + core_space_top )\n```\n\n\n```tcl\ninitialize_floorplan\n  [-utilization util]\n  [-aspect_ratio ratio]\n  [-core_space space | {bottom top left right}]\n  [-die_area {llx lly urx ury}]\n  [-core_area {llx lly urx ury}]\n  [-additional_sites site_names]\n  [-site site_name]\n  [-row_parity NONE|EVEN|ODD]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-utilization` | Percentage utilization. Allowed values are `double` in the range `(0-100]`. |\n| `-aspect_ratio` | Ratio $\\frac{height}{width}$. The default value is `1.0` and the allowed values are floats `[0, 1.0]`. |\n| `-core_space` | Space around the core, default `0.0` microns. Allowed values are either one value for all margins or a set of four values, one for each margin. The order of the four values are: `{bottom top left right}`. |\n| `-additional_sites` | Tcl list of sites to make rows for (e.g. `{SITEXX, SITEYY}`) |\n| `-site` | Site name. |\n| `-die_area` | Die area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-core_area` | Core area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-row_parity` | Snap to either an odd (`ODD`) or even (`EVEN`) number of rows. Defaults to `NONE` (no constraint on parity). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_40.png"], "neg_text": ["In the screenshot, the routing tracks are visible within the core area. How can I adjust the x_pitch and y_pitch of these tracks using the `make_tracks` command?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_1"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_40.png", "q_text": "In the screenshot, the routing tracks are visible within the core area. How can I adjust the x_pitch and y_pitch of these tracks using the `make_tracks` command?", "pos_doc": "id:floorplan_initialization_2\n### Make Tracks\n\nThe `initialize_floorplan` command removes existing tracks. \nUse the `make_tracks` command to add routing tracks to a floorplan.\n\n```tcl\nmake_tracks \n    [layer]\n    [-x_pitch x_pitch]\n    [-y_pitch y_pitch]\n    [-x_offset x_offset]\n    [-y_offset y_offset]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `layer` | Select layer name to make tracks for. Defaults to all layers. |\n| `-x_pitch`, `-y_pitch` | If set, overrides the LEF technology x-/y- pitch. Use the same unit as in the LEF file. |\n| `-x_offset`, `-y_offset` | If set, overrides the LEF technology x-/y- offset. Use the same unit as in the LEFT file. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_40.png"], "neg_text": ["In the screenshot, the core area is surrounded by tracks, but the space between the core and the die seems fixed. How can I adjust the space between the core and the die area using the `initialize_floorplan` command?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_2"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_14.png", "q_text": "After running the `make_tracks` command, the tracks on the floorplan appear too dense. How can I adjust the pitch of the tracks to make them less dense?", "pos_doc": "id:floorplan_initialization_2\n### Make Tracks\n\nThe `initialize_floorplan` command removes existing tracks. \nUse the `make_tracks` command to add routing tracks to a floorplan.\n\n```tcl\nmake_tracks \n    [layer]\n    [-x_pitch x_pitch]\n    [-y_pitch y_pitch]\n    [-x_offset x_offset]\n    [-y_offset y_offset]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `layer` | Select layer name to make tracks for. Defaults to all layers. |\n| `-x_pitch`, `-y_pitch` | If set, overrides the LEF technology x-/y- pitch. Use the same unit as in the LEF file. |\n| `-x_offset`, `-y_offset` | If set, overrides the LEF technology x-/y- offset. Use the same unit as in the LEFT file. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_14.png"], "neg_text": ["In the screenshot, the core area is highlighted in yellow and the die area in green. How can I adjust the space between the core and the die using the `initialize_floorplan` command?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_2"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_14.png", "q_text": "In the screenshot, the core area is highlighted in yellow and the die area in green. How can I adjust the space between the core and the die using the `initialize_floorplan` command?", "pos_doc": "id:floorplan_initialization_1\n### Initialize Floorplan\n\nDo note that there are two ways of setting the floorplan dimensions.\nThe user can either specify manually die/core area, or\nspecify the utilization/aspect ratio. If you set both, \nunexpected behaviour might occur.\n\n- Method 1: Automatic die size calculation\nExample: `initialize_floorplan -utilization 70 -aspect_ratio 1.0 -core_space 0.0 -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\n- Method 2: Set die/core area\nExample: `initialize_floorplan -die_area 0 0 2000 2000 -core_area 100 100 1900 1900` -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\nThe die area and core area used to write ROWs can be specified explicitly\nwith the `-die_area` and `-core_area` arguments. Alternatively, the die and\ncore areas can be computed from the design size and utilization as shown below:\n\nThe -site argument determines the basic single-height rows to make.\nFor a hybrid row design the site should have a row pattern.  Any sites\nreferenced by an instance in the netlist will also have rows\nconstructed for them.\n\nAdditional sites are specified if you wish to have rows for a site\nthat is not used in the nelist but may be needed later.  For example,\nyou might not have any double height cells in the incoming netlist but\nyou expect some to be generated by flop clustering later in the flow.\n\nExample computation:\n\n```\ncore_area = design_area / (utilization / 100)\ncore_width = sqrt(core_area / aspect_ratio)\ncore_height = core_width * aspect_ratio\ncore = ( core_space_left, core_space_bottom )\n      ( core_space_left + core_width, core_space_bottom + core_height )\ndie =  ( 0, 0 )\n      ( core_width + core_space_left + core_space_right,\n        core_height + core_space_bottom + core_space_top )\n```\n\n\n```tcl\ninitialize_floorplan\n  [-utilization util]\n  [-aspect_ratio ratio]\n  [-core_space space | {bottom top left right}]\n  [-die_area {llx lly urx ury}]\n  [-core_area {llx lly urx ury}]\n  [-additional_sites site_names]\n  [-site site_name]\n  [-row_parity NONE|EVEN|ODD]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-utilization` | Percentage utilization. Allowed values are `double` in the range `(0-100]`. |\n| `-aspect_ratio` | Ratio $\\frac{height}{width}$. The default value is `1.0` and the allowed values are floats `[0, 1.0]`. |\n| `-core_space` | Space around the core, default `0.0` microns. Allowed values are either one value for all margins or a set of four values, one for each margin. The order of the four values are: `{bottom top left right}`. |\n| `-additional_sites` | Tcl list of sites to make rows for (e.g. `{SITEXX, SITEYY}`) |\n| `-site` | Site name. |\n| `-die_area` | Die area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-core_area` | Core area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-row_parity` | Snap to either an odd (`ODD`) or even (`EVEN`) number of rows. Defaults to `NONE` (no constraint on parity). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_14.png"], "neg_text": ["After running the `make_tracks` command, the tracks on the floorplan appear too dense. How can I adjust the pitch of the tracks to make them less dense?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_1"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_31.png", "q_text": "After running the `initialize_floorplan` command, I used the `make_tracks` command to add routing tracks, but the tracks seem too dense. How can I adjust the pitch of the tracks to make them less dense?", "pos_doc": "id:floorplan_initialization_2\n### Make Tracks\n\nThe `initialize_floorplan` command removes existing tracks. \nUse the `make_tracks` command to add routing tracks to a floorplan.\n\n```tcl\nmake_tracks \n    [layer]\n    [-x_pitch x_pitch]\n    [-y_pitch y_pitch]\n    [-x_offset x_offset]\n    [-y_offset y_offset]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `layer` | Select layer name to make tracks for. Defaults to all layers. |\n| `-x_pitch`, `-y_pitch` | If set, overrides the LEF technology x-/y- pitch. Use the same unit as in the LEF file. |\n| `-x_offset`, `-y_offset` | If set, overrides the LEF technology x-/y- offset. Use the same unit as in the LEFT file. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_31.png"], "neg_text": ["In the screenshot, the grid layout appears to be uniform. How can I modify the `initialize_floorplan` command to create a non-uniform grid layout with different core spaces on each side?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_2"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_31.png", "q_text": "In the screenshot, the grid layout appears to be uniform. How can I modify the `initialize_floorplan` command to create a non-uniform grid layout with different core spaces on each side?", "pos_doc": "id:floorplan_initialization_1\n### Initialize Floorplan\n\nDo note that there are two ways of setting the floorplan dimensions.\nThe user can either specify manually die/core area, or\nspecify the utilization/aspect ratio. If you set both, \nunexpected behaviour might occur.\n\n- Method 1: Automatic die size calculation\nExample: `initialize_floorplan -utilization 70 -aspect_ratio 1.0 -core_space 0.0 -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\n- Method 2: Set die/core area\nExample: `initialize_floorplan -die_area 0 0 2000 2000 -core_area 100 100 1900 1900` -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\nThe die area and core area used to write ROWs can be specified explicitly\nwith the `-die_area` and `-core_area` arguments. Alternatively, the die and\ncore areas can be computed from the design size and utilization as shown below:\n\nThe -site argument determines the basic single-height rows to make.\nFor a hybrid row design the site should have a row pattern.  Any sites\nreferenced by an instance in the netlist will also have rows\nconstructed for them.\n\nAdditional sites are specified if you wish to have rows for a site\nthat is not used in the nelist but may be needed later.  For example,\nyou might not have any double height cells in the incoming netlist but\nyou expect some to be generated by flop clustering later in the flow.\n\nExample computation:\n\n```\ncore_area = design_area / (utilization / 100)\ncore_width = sqrt(core_area / aspect_ratio)\ncore_height = core_width * aspect_ratio\ncore = ( core_space_left, core_space_bottom )\n      ( core_space_left + core_width, core_space_bottom + core_height )\ndie =  ( 0, 0 )\n      ( core_width + core_space_left + core_space_right,\n        core_height + core_space_bottom + core_space_top )\n```\n\n\n```tcl\ninitialize_floorplan\n  [-utilization util]\n  [-aspect_ratio ratio]\n  [-core_space space | {bottom top left right}]\n  [-die_area {llx lly urx ury}]\n  [-core_area {llx lly urx ury}]\n  [-additional_sites site_names]\n  [-site site_name]\n  [-row_parity NONE|EVEN|ODD]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-utilization` | Percentage utilization. Allowed values are `double` in the range `(0-100]`. |\n| `-aspect_ratio` | Ratio $\\frac{height}{width}$. The default value is `1.0` and the allowed values are floats `[0, 1.0]`. |\n| `-core_space` | Space around the core, default `0.0` microns. Allowed values are either one value for all margins or a set of four values, one for each margin. The order of the four values are: `{bottom top left right}`. |\n| `-additional_sites` | Tcl list of sites to make rows for (e.g. `{SITEXX, SITEYY}`) |\n| `-site` | Site name. |\n| `-die_area` | Die area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-core_area` | Core area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-row_parity` | Snap to either an odd (`ODD`) or even (`EVEN`) number of rows. Defaults to `NONE` (no constraint on parity). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_31.png"], "neg_text": ["After running the `initialize_floorplan` command, I used the `make_tracks` command to add routing tracks, but the tracks seem too dense. How can I adjust the pitch of the tracks to make them less dense?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_1"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_46.png", "q_text": "In the floorplan initialization, I have defined a blockage with a width of 2000000 and a height of 208400 as shown in the screenshot. How can I ensure that this blockage does not interfere with the core area during the floorplan setup?", "pos_doc": "id:floorplan_initialization_1\n### Initialize Floorplan\n\nDo note that there are two ways of setting the floorplan dimensions.\nThe user can either specify manually die/core area, or\nspecify the utilization/aspect ratio. If you set both, \nunexpected behaviour might occur.\n\n- Method 1: Automatic die size calculation\nExample: `initialize_floorplan -utilization 70 -aspect_ratio 1.0 -core_space 0.0 -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\n- Method 2: Set die/core area\nExample: `initialize_floorplan -die_area 0 0 2000 2000 -core_area 100 100 1900 1900` -sites FreePDK45_38x28_10R_NP_162NW_34O`\n\nThe die area and core area used to write ROWs can be specified explicitly\nwith the `-die_area` and `-core_area` arguments. Alternatively, the die and\ncore areas can be computed from the design size and utilization as shown below:\n\nThe -site argument determines the basic single-height rows to make.\nFor a hybrid row design the site should have a row pattern.  Any sites\nreferenced by an instance in the netlist will also have rows\nconstructed for them.\n\nAdditional sites are specified if you wish to have rows for a site\nthat is not used in the nelist but may be needed later.  For example,\nyou might not have any double height cells in the incoming netlist but\nyou expect some to be generated by flop clustering later in the flow.\n\nExample computation:\n\n```\ncore_area = design_area / (utilization / 100)\ncore_width = sqrt(core_area / aspect_ratio)\ncore_height = core_width * aspect_ratio\ncore = ( core_space_left, core_space_bottom )\n      ( core_space_left + core_width, core_space_bottom + core_height )\ndie =  ( 0, 0 )\n      ( core_width + core_space_left + core_space_right,\n        core_height + core_space_bottom + core_space_top )\n```\n\n\n```tcl\ninitialize_floorplan\n  [-utilization util]\n  [-aspect_ratio ratio]\n  [-core_space space | {bottom top left right}]\n  [-die_area {llx lly urx ury}]\n  [-core_area {llx lly urx ury}]\n  [-additional_sites site_names]\n  [-site site_name]\n  [-row_parity NONE|EVEN|ODD]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-utilization` | Percentage utilization. Allowed values are `double` in the range `(0-100]`. |\n| `-aspect_ratio` | Ratio $\\frac{height}{width}$. The default value is `1.0` and the allowed values are floats `[0, 1.0]`. |\n| `-core_space` | Space around the core, default `0.0` microns. Allowed values are either one value for all margins or a set of four values, one for each margin. The order of the four values are: `{bottom top left right}`. |\n| `-additional_sites` | Tcl list of sites to make rows for (e.g. `{SITEXX, SITEYY}`) |\n| `-site` | Site name. |\n| `-die_area` | Die area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-core_area` | Core area coordinates in microns (lower left x/y and upper right x/y coordinates). |\n| `-row_parity` | Snap to either an odd (`ODD`) or even (`EVEN`) number of rows. Defaults to `NONE` (no constraint on parity). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_46.png"], "neg_text": ["In the screenshot, the blockage has a width of 2000000 and a height of 208400. After running the `make_tracks` command, how can I adjust the x_pitch and y_pitch of the routing tracks?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_1"]}
{"q_img": "source_images/floorplan_initialization/floorplan_initialization_46.png", "q_text": "In the screenshot, the blockage has a width of 2000000 and a height of 208400. After running the `make_tracks` command, how can I adjust the x_pitch and y_pitch of the routing tracks?", "pos_doc": "id:floorplan_initialization_2\n### Make Tracks\n\nThe `initialize_floorplan` command removes existing tracks. \nUse the `make_tracks` command to add routing tracks to a floorplan.\n\n```tcl\nmake_tracks \n    [layer]\n    [-x_pitch x_pitch]\n    [-y_pitch y_pitch]\n    [-x_offset x_offset]\n    [-y_offset y_offset]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `layer` | Select layer name to make tracks for. Defaults to all layers. |\n| `-x_pitch`, `-y_pitch` | If set, overrides the LEF technology x-/y- pitch. Use the same unit as in the LEF file. |\n| `-x_offset`, `-y_offset` | If set, overrides the LEF technology x-/y- offset. Use the same unit as in the LEFT file. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/floorplan_initialization/floorplan_initialization_46.png"], "neg_text": ["In the floorplan initialization, I have defined a blockage with a width of 2000000 and a height of 208400 as shown in the screenshot. How can I ensure that this blockage does not interfere with the core area during the floorplan setup?"], "q_type": "it", "c_type": "mix", "reference": ["floorplan_initialization_2"]}
{"q_img": "source_images/global_routing/global_routing_8.png", "q_text": "How can I use the `global_route_debug` command to visualize the 3D Rectilinear Steiner Tree for the net `clknet_2_3__leaf_clk` shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_8.png"], "neg_text": ["How can I reduce the routing resources of Metal4 by 50% to manage congestion for the net `clknet_2_3__leaf_clk` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_8.png", "q_text": "How can I reduce the routing resources of Metal4 by 50% to manage congestion for the net `clknet_2_3__leaf_clk` as shown in the screenshot?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_8.png"], "neg_text": ["How can I use the `global_route_debug` command to visualize the 3D Rectilinear Steiner Tree for the net `clknet_2_3__leaf_clk` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_48.png", "q_text": "How can I set a halo of 3 GCells around the macros in the layout shown in the screenshot?", "pos_doc": "id:global_routing_3\n### Set Macro Extension\n\nThis command sets the halo (in terms of GCells) along the boundaries of macros.\nA `GCell` is typically defined in terms of `Mx` routing tracks.\nExample: `set_macro_extension 2`\n\n```tcl\nset_macro_extension extension\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `extension` | Number of `GCells` added to the blockage boundaries from macros. The default `GCell` size is 15 `M3` pitches. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_48.png"], "neg_text": ["How can I visualize the route segments for the nets in the screenshot using the `draw_route_guides` command?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_3"]}
{"q_img": "source_images/global_routing/global_routing_48.png", "q_text": "How can I visualize the route segments for the nets in the screenshot using the `draw_route_guides` command?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_48.png"], "neg_text": ["How can I set a halo of 3 GCells around the macros in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_87.png", "q_text": "How can I adjust the routing resources for Metal5 to reduce congestion during the global routing step shown in the screenshot?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_87.png"], "neg_text": ["In the screenshot, the command `global_route` is used without any options. How can I enable full reporting of the global routing process?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_87.png", "q_text": "In the screenshot, the command `global_route` is used without any options. How can I enable full reporting of the global routing process?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_87.png"], "neg_text": ["How can I adjust the routing resources for Metal5 to reduce congestion during the global routing step shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_74.png", "q_text": "How can I set the minimum and maximum routing layers for the net `vssd1` shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_74.png"], "neg_text": ["How can I visualize the pin positions for the net `vssd1` in the layout as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_74.png", "q_text": "How can I visualize the pin positions for the net `vssd1` in the layout as shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_74.png"], "neg_text": ["How can I set the minimum and maximum routing layers for the net `vssd1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_70.png", "q_text": "How can I generate a congestion report for the design that includes the standard cell `clkbuf_2_2__f_clk` shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_70.png"], "neg_text": ["How can I visualize the route segments for the net connected to the pin `clk` of the cell `clkbuf_2_2__f_clk` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_70.png", "q_text": "How can I visualize the route segments for the net connected to the pin `clk` of the cell `clkbuf_2_2__f_clk` shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_70.png"], "neg_text": ["How can I generate a congestion report for the design that includes the standard cell `clkbuf_2_2__f_clk` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_49.png", "q_text": "How can I use the `set_macro_extension` command to address the error `[ERROR GRT-0028] Found 3 pins outside die area` shown in the screenshot?", "pos_doc": "id:global_routing_3\n### Set Macro Extension\n\nThis command sets the halo (in terms of GCells) along the boundaries of macros.\nA `GCell` is typically defined in terms of `Mx` routing tracks.\nExample: `set_macro_extension 2`\n\n```tcl\nset_macro_extension extension\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `extension` | Number of `GCells` added to the blockage boundaries from macros. The default `GCell` size is 15 `M3` pitches. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_49.png"], "neg_text": ["How can I configure the global routing to handle pins found outside the die area, as shown in the error message \"Found 3 pins outside die area\" in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_3"]}
{"q_img": "source_images/global_routing/global_routing_49.png", "q_text": "How can I configure the global routing to handle pins found outside the die area, as shown in the error message \"Found 3 pins outside die area\" in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_49.png"], "neg_text": ["How can I use the `set_macro_extension` command to address the error `[ERROR GRT-0028] Found 3 pins outside die area` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_10.png", "q_text": "How can I visualize the Rectilinear Steiner Tree for the \"clk\" net shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_10.png"], "neg_text": ["How can I set the net \"clk\" to be the only net routed in the layout as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_10.png", "q_text": "How can I set the net \"clk\" to be the only net routed in the layout as shown in the screenshot?", "pos_doc": "id:global_routing_8\n### Set Specific Nets to Route\n\nThe `set_nets_to_route` command defines a list of nets to route. Only the nets\ndefined in this command are routed, leaving the remaining nets without any\nglobal route guides.\n\n```tcl\nset_nets_to_route \n    net_names \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_10.png"], "neg_text": ["How can I visualize the Rectilinear Steiner Tree for the \"clk\" net shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_8"]}
{"q_img": "source_images/global_routing/global_routing_41.png", "q_text": "In the script shown in the screenshot, the command `set_routing_layers -signal metal2-metal10` is used. How can I modify this command to set the routing layers for both signal and clock nets?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_41.png"], "neg_text": ["How can I generate a congestion report file during the global routing process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_41.png", "q_text": "How can I generate a congestion report file during the global routing process as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_41.png"], "neg_text": ["In the script shown in the screenshot, the command `set_routing_layers -signal metal2-metal10` is used. How can I modify this command to set the routing layers for both signal and clock nets?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_82.png", "q_text": "How can I check if the routing layer adjustments set in the screenshot (e.g., `set_global_routing_layer_adjustment met1 0.8`) are within the specified min/max routing layers?", "pos_doc": "id:global_routing_15\n# Global Routing\n## Useful Developer Commands\n\nIf you are a developer, you might find these useful. More details can be found in the [source file](./src/GlobalRouter.cpp) or the [swig file](./src/GlobalRouter.i).\n\n| Command Name | Description |\n| ----- | ----- |\n| `check_routing_layer` | Check if the layer is within the min/max routing layer specified. |\n| `parse_layer_name` | Get routing layer number from layer name |\n| `parse_layer_range` | Parses a range from `layer_range` argument of format (%s-%s). `cmd` argument is not used. |\n| `check_region` | Checks the defined region if its within the die area. |\n| `define_layer_range` | Provide a Tcl list of layers and automatically generate the min and max layers for signal routing. |\n| `define_clock_layer_range` | Provide a Tcl list of layers and automatically generate the min and max layers for clock routing. |\n| `have_detailed_route` | Checks if block has detailed route already. |\n\n", "neg_img": ["source_images/global_routing/global_routing_82.png"], "neg_text": ["In the screenshot, the command `set_global_routing_layer_adjustment met1 0.8` is used. How does the `-adjustment` value affect the global routing for metal layer 1?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_15"]}
{"q_img": "source_images/global_routing/global_routing_82.png", "q_text": "In the screenshot, the command `set_global_routing_layer_adjustment met1 0.8` is used. How does the `-adjustment` value affect the global routing for metal layer 1?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_82.png"], "neg_text": ["How can I check if the routing layer adjustments set in the screenshot (e.g., `set_global_routing_layer_adjustment met1 0.8`) are within the specified min/max routing layers?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_46.png", "q_text": "How can I check if the routing layer used in the `gcd_nangate45.def` file is within the specified min/max routing layer after running the `global_route -verbose` command?", "pos_doc": "id:global_routing_15\n# Global Routing\n## Useful Developer Commands\n\nIf you are a developer, you might find these useful. More details can be found in the [source file](./src/GlobalRouter.cpp) or the [swig file](./src/GlobalRouter.i).\n\n| Command Name | Description |\n| ----- | ----- |\n| `check_routing_layer` | Check if the layer is within the min/max routing layer specified. |\n| `parse_layer_name` | Get routing layer number from layer name |\n| `parse_layer_range` | Parses a range from `layer_range` argument of format (%s-%s). `cmd` argument is not used. |\n| `check_region` | Checks the defined region if its within the die area. |\n| `define_layer_range` | Provide a Tcl list of layers and automatically generate the min and max layers for signal routing. |\n| `define_clock_layer_range` | Provide a Tcl list of layers and automatically generate the min and max layers for clock routing. |\n| `have_detailed_route` | Checks if block has detailed route already. |\n\n", "neg_img": ["source_images/global_routing/global_routing_46.png"], "neg_text": ["How can I read the global routing guides generated in the screenshot for the `gcd_nangate45.def` file?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_15"]}
{"q_img": "source_images/global_routing/global_routing_46.png", "q_text": "How can I read the global routing guides generated in the screenshot for the `gcd_nangate45.def` file?", "pos_doc": "id:global_routing_13\n### Read Global Routing Guides\n\nThis command reads global routing guides. \n\n```tcl\nread_guides file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing guide. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_46.png"], "neg_text": ["How can I check if the routing layer used in the `gcd_nangate45.def` file is within the specified min/max routing layer after running the `global_route -verbose` command?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_13"]}
{"q_img": "source_images/global_routing/global_routing_69.png", "q_text": "How can I ensure that the global routing guide for the net \"clk\" is correctly visualized in the layout?", "pos_doc": "id:global_routing_13\n### Read Global Routing Guides\n\nThis command reads global routing guides. \n\n```tcl\nread_guides file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing guide. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_69.png"], "neg_text": ["How can I specify only the \"clk\" net for routing as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_13"]}
{"q_img": "source_images/global_routing/global_routing_69.png", "q_text": "How can I specify only the \"clk\" net for routing as shown in the screenshot?", "pos_doc": "id:global_routing_8\n### Set Specific Nets to Route\n\nThe `set_nets_to_route` command defines a list of nets to route. Only the nets\ndefined in this command are routed, leaving the remaining nets without any\nglobal route guides.\n\n```tcl\nset_nets_to_route \n    net_names \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_69.png"], "neg_text": ["How can I ensure that the global routing guide for the net \"clk\" is correctly visualized in the layout?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_8"]}
{"q_img": "source_images/global_routing/global_routing_44.png", "q_text": "How can I use the `report_wire_length` command to get a detailed wire length report for the net `clk` after global routing, as shown in the screenshot?", "pos_doc": "id:global_routing_11\n### Report Wirelength\n\nThe `report_wire_length` command reports the wire length of the nets. Use the `-global_route`\nand the `-detailed_route` flags to report the wire length from global and detailed routing,\nrespectively. If none of these flags are used, the tool will identify the state of the design\nand report the wire length accordingly.\n\nExample: `report_wire_length -net {clk net60} -global_route -detailed_route -verbose -file out.csv`\n\n```tcl\nreport_wire_length \n    [-net net_list]\n    [-file file]\n    [-global_route]\n    [-detailed_route]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-net` | List of nets to report the wirelength. Use `*` to report the wire length for all nets of the design. |\n| `-file` | The name of the file for the wirelength report. |\n| `-global_route` | Report the wire length of the global routing. |\n| `-detailed_route` | Report the wire length of the detailed routing. |\n| `-verbose` | This flag enables the full reporting of the layer-wise wirelength information. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_44.png"], "neg_text": ["In the screenshot, the command `set_routing_layers -signal metal2-metal10` is used. How can I specify different minimum and maximum routing layers for clock nets?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_11"]}
{"q_img": "source_images/global_routing/global_routing_44.png", "q_text": "In the screenshot, the command `set_routing_layers -signal metal2-metal10` is used. How can I specify different minimum and maximum routing layers for clock nets?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_44.png"], "neg_text": ["How can I use the `report_wire_length` command to get a detailed wire length report for the net `clk` after global routing, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_59.png", "q_text": "How do I specify the bounding box for the global routing region adjustment as shown in the screenshot?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_59.png"], "neg_text": ["How do I use the `write_global_route_segments` command to save the global routing segments to a file as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_59.png", "q_text": "How do I use the `write_global_route_segments` command to save the global routing segments to a file as shown in the screenshot?", "pos_doc": "id:global_routing_14\n### Write Global Routing Segments\n\nThis command writes global routing segments, the raw routing data generated by\nthe global routing tool.\n\n```tcl\nwrite_global_route_segments file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing segments file. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_59.png"], "neg_text": ["How do I specify the bounding box for the global routing region adjustment as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_14"]}
{"q_img": "source_images/global_routing/global_routing_78.png", "q_text": "How can I read the global routing guides from the file `pd2.guide` generated in the script shown in the screenshot?", "pos_doc": "id:global_routing_13\n### Read Global Routing Guides\n\nThis command reads global routing guides. \n\n```tcl\nread_guides file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing guide. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_78.png"], "neg_text": ["In the script shown in the screenshot, the command `global_route -verbose` is used. How can I ensure that the global routing results are generated even if there is remaining congestion?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_13"]}
{"q_img": "source_images/global_routing/global_routing_78.png", "q_text": "In the script shown in the screenshot, the command `global_route -verbose` is used. How can I ensure that the global routing results are generated even if there is remaining congestion?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_78.png"], "neg_text": ["How can I read the global routing guides from the file `pd2.guide` generated in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_5.png", "q_text": "How can I use the `global_route_debug` command to visualize the Steiner Tree for the net \"w5_in\" shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_5.png"], "neg_text": ["How can I allow the global routing to complete even if there is congestion, as shown in the screenshot for the net `w5_in`?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_5.png", "q_text": "How can I allow the global routing to complete even if there is congestion, as shown in the screenshot for the net `w5_in`?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_5.png"], "neg_text": ["How can I use the `global_route_debug` command to visualize the Steiner Tree for the net \"w5_in\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_71.png", "q_text": "How can I use the `global_route_debug` command to visualize the 3D Rectilinear Steiner Tree for the net `clknet_2_3__leaf_clk` as shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_71.png"], "neg_text": ["In the script shown in the screenshot, the `global_route` command is used with the `-verbose` option. What is the purpose of using the `-verbose` option in the `global_route` command?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_71.png", "q_text": "In the script shown in the screenshot, the `global_route` command is used with the `-verbose` option. What is the purpose of using the `-verbose` option in the `global_route` command?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_71.png"], "neg_text": ["How can I use the `global_route_debug` command to visualize the 3D Rectilinear Steiner Tree for the net `clknet_2_3__leaf_clk` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_19.png", "q_text": "How can I adjust the routing resources for Metal4 to reduce congestion as shown in the screenshot?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_19.png"], "neg_text": ["How can I visualize the routing guides for the nets in the design shown in the screenshot using the `draw_route_guides` command?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_19.png", "q_text": "How can I visualize the routing guides for the nets in the design shown in the screenshot using the `draw_route_guides` command?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_19.png"], "neg_text": ["How can I adjust the routing resources for Metal4 to reduce congestion as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_31.png", "q_text": "What steps can be taken to address the high routing congestion error shown in the screenshot during the global routing process in OpenROAD?", "pos_doc": "id:global_routing_0\n# Global Routing\n\nThe global routing module in OpenROAD (`grt`) is based on FastRoute, an\nopen-source global router originally derived from Iowa State University's\nFastRoute4.1 algorithm.\n\n", "neg_img": ["source_images/global_routing/global_routing_31.png"], "neg_text": ["How can I use the `set_global_routing_random` command to address the routing congestion issue shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_0"]}
{"q_img": "source_images/global_routing/global_routing_31.png", "q_text": "How can I use the `set_global_routing_random` command to address the routing congestion issue shown in the screenshot?", "pos_doc": "id:global_routing_7\n### Set Global Routing Randomness\n\nThe command randomizes global routing by shuffling the order of the nets\nand randomly subtracts or adds to the capacities of a random set of edges. \n\nExample:\n`set_global_routing_random -seed 42 \\\n  -capacities_perturbation_percentage 50 \\\n  -perturbation_amount 2`\n\n```tcl\nset_global_routing_random \n    [-seed seed]\n    [-capacities_perturbation_percentage percent]\n    [-perturbation_amount value]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-seed` | Sets the random seed (must be non-zero for randomization). |\n| `-capacities_perturbation_percentage` | Sets the percentage of edges whose capacities are perturbed. By default, the edge capacities are perturbed by adding or subtracting 1 (track) from the original capacity.  |\n| `-perturbation_amount` | Sets the perturbation value of the edge capacities. This option is only meaningful when `-capacities_perturbation_percentage` is used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_31.png"], "neg_text": ["What steps can be taken to address the high routing congestion error shown in the screenshot during the global routing process in OpenROAD?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_7"]}
{"q_img": "source_images/global_routing/global_routing_93.png", "q_text": "How can I read the global routing guide file generated by the `write_guides $guide_file` command shown in the screenshot?", "pos_doc": "id:global_routing_13\n### Read Global Routing Guides\n\nThis command reads global routing guides. \n\n```tcl\nread_guides file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing guide. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_93.png"], "neg_text": ["In the screenshot, the `global_route` command is used with the `-verbose` flag. What additional information does the `-verbose` flag provide during the global routing process?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_13"]}
{"q_img": "source_images/global_routing/global_routing_93.png", "q_text": "In the screenshot, the `global_route` command is used with the `-verbose` flag. What additional information does the `-verbose` flag provide during the global routing process?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_93.png"], "neg_text": ["How can I read the global routing guide file generated by the `write_guides $guide_file` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_23.png", "q_text": "How can I adjust the global routing region for metal2 with a 0.9 adjustment factor, as shown in the screenshot?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_23.png"], "neg_text": ["In the screenshot, the command `global_route -verbose` is used. How can I allow global routing results to be generated even if there is remaining congestion?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_23.png", "q_text": "In the screenshot, the command `global_route -verbose` is used. How can I allow global routing results to be generated even if there is remaining congestion?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_23.png"], "neg_text": ["How can I adjust the global routing region for metal2 with a 0.9 adjustment factor, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_6.png", "q_text": "How does the `set_global_routing_layer_adjustment` command in the script affect the global routing process for the design shown in the screenshot?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_6.png"], "neg_text": ["In the screenshot, the command `set_global_routing_layer_adjustment met1 0.8` is used. What does the adjustment value 0.8 signify, and how does it affect the global routing process?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_6.png", "q_text": "In the screenshot, the command `set_global_routing_layer_adjustment met1 0.8` is used. What does the adjustment value 0.8 signify, and how does it affect the global routing process?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_6.png"], "neg_text": ["How does the `set_global_routing_layer_adjustment` command in the script affect the global routing process for the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_27.png", "q_text": "How can I generate a congestion report for the net `_127_` shown in the screenshot during global routing?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_27.png"], "neg_text": ["How can I visualize the Rectilinear Steiner Tree for the net `_127_` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_27.png", "q_text": "How can I visualize the Rectilinear Steiner Tree for the net `_127_` shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_27.png"], "neg_text": ["How can I generate a congestion report for the net `_127_` shown in the screenshot during global routing?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_40.png", "q_text": "How can I allow global routing results to be generated with remaining congestion, as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_40.png"], "neg_text": ["How can I visualize the Rectilinear Steiner Tree generated by `grt` after the overflow iterations for the net `clk` as shown in the global routing log?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_40.png", "q_text": "How can I visualize the Rectilinear Steiner Tree generated by `grt` after the overflow iterations for the net `clk` as shown in the global routing log?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_40.png"], "neg_text": ["How can I allow global routing results to be generated with remaining congestion, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_64.png", "q_text": "How can I adjust the routing resources for the layers met1 to met5 to reduce congestion during global routing as shown in the screenshot?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_64.png"], "neg_text": ["How can I set the routing layers for clock nets in addition to the signal nets as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_64.png", "q_text": "How can I set the routing layers for clock nets in addition to the signal nets as shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_64.png"], "neg_text": ["How can I adjust the routing resources for the layers met1 to met5 to reduce congestion during global routing as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_58.png", "q_text": "How can I read the global routing guide file generated by the `write_guides` command shown in the screenshot?", "pos_doc": "id:global_routing_13\n### Read Global Routing Guides\n\nThis command reads global routing guides. \n\n```tcl\nread_guides file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing guide. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_58.png"], "neg_text": ["How can I visualize the routing guides for the nets created in the screenshot using the `draw_route_guides` command?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_13"]}
{"q_img": "source_images/global_routing/global_routing_58.png", "q_text": "How can I visualize the routing guides for the nets created in the screenshot using the `draw_route_guides` command?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_58.png"], "neg_text": ["How can I read the global routing guide file generated by the `write_guides` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_50.png", "q_text": "How can I set the minimum and maximum routing layers for signal and clock nets to optimize the routing for the standard cell shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_50.png"], "neg_text": ["How can I allow global routing results to be generated with remaining congestion, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_50.png", "q_text": "How can I allow global routing results to be generated with remaining congestion, as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_50.png"], "neg_text": ["How can I set the minimum and maximum routing layers for signal and clock nets to optimize the routing for the standard cell shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_15.png", "q_text": "In the screenshot, the command `set_global_routing_layer_adjustment metal2 0.9` is used. What does the adjustment value of 0.9 signify for the routing resources of metal2?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_15.png"], "neg_text": ["In the screenshot, the `global_route` command is used with the `-allow_congestion` option. What does the `-allow_congestion` option do, and how does it affect the global routing process?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_15.png", "q_text": "In the screenshot, the `global_route` command is used with the `-allow_congestion` option. What does the `-allow_congestion` option do, and how does it affect the global routing process?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_15.png"], "neg_text": ["In the screenshot, the command `set_global_routing_layer_adjustment metal2 0.9` is used. What does the adjustment value of 0.9 signify for the routing resources of metal2?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_75.png", "q_text": "How can I visualize the pin locations for the net `clknet_leaf_37_usb_clk` in the layout shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_75.png"], "neg_text": ["How can I set the net `clknet_leaf_37_usb_clk` to be routed specifically, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_75.png", "q_text": "How can I set the net `clknet_leaf_37_usb_clk` to be routed specifically, as shown in the screenshot?", "pos_doc": "id:global_routing_8\n### Set Specific Nets to Route\n\nThe `set_nets_to_route` command defines a list of nets to route. Only the nets\ndefined in this command are routed, leaving the remaining nets without any\nglobal route guides.\n\n```tcl\nset_nets_to_route \n    net_names \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_75.png"], "neg_text": ["How can I visualize the pin locations for the net `clknet_leaf_37_usb_clk` in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_8"]}
{"q_img": "source_images/global_routing/global_routing_34.png", "q_text": "How can I adjust the routing resources in a specific region to reduce congestion as indicated by the error message in the screenshot?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_34.png"], "neg_text": ["How can I use the `set_macro_extension` command to help reduce the routing congestion shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_34.png", "q_text": "How can I use the `set_macro_extension` command to help reduce the routing congestion shown in the screenshot?", "pos_doc": "id:global_routing_3\n### Set Macro Extension\n\nThis command sets the halo (in terms of GCells) along the boundaries of macros.\nA `GCell` is typically defined in terms of `Mx` routing tracks.\nExample: `set_macro_extension 2`\n\n```tcl\nset_macro_extension extension\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `extension` | Number of `GCells` added to the blockage boundaries from macros. The default `GCell` size is 15 `M3` pitches. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_34.png"], "neg_text": ["How can I adjust the routing resources in a specific region to reduce congestion as indicated by the error message in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_3"]}
{"q_img": "source_images/global_routing/global_routing_33.png", "q_text": "How can I adjust the routing region for Metal3 to reduce congestion as shown in the screenshot?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_33.png"], "neg_text": ["How can I generate a detailed report of the wire lengths for all nets after running the global routing commands shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_33.png", "q_text": "How can I generate a detailed report of the wire lengths for all nets after running the global routing commands shown in the screenshot?", "pos_doc": "id:global_routing_11\n### Report Wirelength\n\nThe `report_wire_length` command reports the wire length of the nets. Use the `-global_route`\nand the `-detailed_route` flags to report the wire length from global and detailed routing,\nrespectively. If none of these flags are used, the tool will identify the state of the design\nand report the wire length accordingly.\n\nExample: `report_wire_length -net {clk net60} -global_route -detailed_route -verbose -file out.csv`\n\n```tcl\nreport_wire_length \n    [-net net_list]\n    [-file file]\n    [-global_route]\n    [-detailed_route]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-net` | List of nets to report the wirelength. Use `*` to report the wire length for all nets of the design. |\n| `-file` | The name of the file for the wirelength report. |\n| `-global_route` | Report the wire length of the global routing. |\n| `-detailed_route` | Report the wire length of the detailed routing. |\n| `-verbose` | This flag enables the full reporting of the layer-wise wirelength information. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_33.png"], "neg_text": ["How can I adjust the routing region for Metal3 to reduce congestion as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_11"]}
{"q_img": "source_images/global_routing/global_routing_52.png", "q_text": "How can I adjust the routing resources for Metal3 to reduce congestion during global routing, as shown in the screenshot log?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_52.png"], "neg_text": ["How can I change the minimum routing layer to metal2 and the maximum routing layer to metal9 for the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_52.png", "q_text": "How can I change the minimum routing layer to metal2 and the maximum routing layer to metal9 for the design shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_52.png"], "neg_text": ["How can I adjust the routing resources for Metal3 to reduce congestion during global routing, as shown in the screenshot log?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_66.png", "q_text": "How can I allow global routing results to be generated with remaining congestion for the net `clknet_2_1__leaf_clk` as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_66.png"], "neg_text": ["How can I reduce the routing resource usage for the net `clknet_2_1__leaf_clk` shown in the screenshot by adjusting the global routing layers?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_66.png", "q_text": "How can I reduce the routing resource usage for the net `clknet_2_1__leaf_clk` shown in the screenshot by adjusting the global routing layers?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_66.png"], "neg_text": ["How can I allow global routing results to be generated with remaining congestion for the net `clknet_2_1__leaf_clk` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_11.png", "q_text": "In the screenshot, the command `set_global_routing_layer_adjustment met1 0.8` is used. What does the adjustment value of 0.8 signify, and how does it affect the global routing?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_11.png"], "neg_text": ["How can I adjust the number of iterations to remove routing overflow during the global routing process shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_11.png", "q_text": "How can I adjust the number of iterations to remove routing overflow during the global routing process shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_11.png"], "neg_text": ["In the screenshot, the command `set_global_routing_layer_adjustment met1 0.8` is used. What does the adjustment value of 0.8 signify, and how does it affect the global routing?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_39.png", "q_text": "How can I visualize the routing guides for the net `req_msg[24]` shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_39.png"], "neg_text": ["How can I allow global routing results to be generated with remaining congestion for the net `req_msg[24]` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_39.png", "q_text": "How can I allow global routing results to be generated with remaining congestion for the net `req_msg[24]` as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_39.png"], "neg_text": ["How can I visualize the routing guides for the net `req_msg[24]` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_42.png", "q_text": "How can I visualize the Steiner Tree for the net \"clknet_1_0_0_clk\" shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_42.png"], "neg_text": ["How can I visualize the route segments for the nets `clk`, `clknet_0_clk`, `clknet_1_0_0_clk`, and `clknet_1_1_0_clk` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_42.png", "q_text": "How can I visualize the route segments for the nets `clk`, `clknet_0_clk`, `clknet_1_0_0_clk`, and `clknet_1_1_0_clk` shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_42.png"], "neg_text": ["How can I visualize the Steiner Tree for the net \"clknet_1_0_0_clk\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_53.png", "q_text": "How can I ensure that the pin \"clk\" is placed on a valid routing layer during global routing?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_53.png"], "neg_text": ["How can I check if the pin `clk` is within the valid routing layers defined in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_53.png", "q_text": "How can I check if the pin `clk` is within the valid routing layers defined in the screenshot?", "pos_doc": "id:global_routing_15\n# Global Routing\n## Useful Developer Commands\n\nIf you are a developer, you might find these useful. More details can be found in the [source file](./src/GlobalRouter.cpp) or the [swig file](./src/GlobalRouter.i).\n\n| Command Name | Description |\n| ----- | ----- |\n| `check_routing_layer` | Check if the layer is within the min/max routing layer specified. |\n| `parse_layer_name` | Get routing layer number from layer name |\n| `parse_layer_range` | Parses a range from `layer_range` argument of format (%s-%s). `cmd` argument is not used. |\n| `check_region` | Checks the defined region if its within the die area. |\n| `define_layer_range` | Provide a Tcl list of layers and automatically generate the min and max layers for signal routing. |\n| `define_clock_layer_range` | Provide a Tcl list of layers and automatically generate the min and max layers for clock routing. |\n| `have_detailed_route` | Checks if block has detailed route already. |\n\n", "neg_img": ["source_images/global_routing/global_routing_53.png"], "neg_text": ["How can I ensure that the pin \"clk\" is placed on a valid routing layer during global routing?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_15"]}
{"q_img": "source_images/global_routing/global_routing_67.png", "q_text": "How can I use the `global_route` command to allow global routing results to be generated with remaining congestion, as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_67.png"], "neg_text": ["How can I visualize the routing guides for the net \"clk\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_67.png", "q_text": "How can I visualize the routing guides for the net \"clk\" shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_67.png"], "neg_text": ["How can I use the `global_route` command to allow global routing results to be generated with remaining congestion, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_45.png", "q_text": "What is the correct way to specify the path to the global routing guide file when using the `read_guides` command as shown in the screenshot?", "pos_doc": "id:global_routing_13\n### Read Global Routing Guides\n\nThis command reads global routing guides. \n\n```tcl\nread_guides file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing guide. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_45.png"], "neg_text": ["How can I report the wire length of the nets after running the `estimate_parasitics -global_routing` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_13"]}
{"q_img": "source_images/global_routing/global_routing_45.png", "q_text": "How can I report the wire length of the nets after running the `estimate_parasitics -global_routing` command as shown in the screenshot?", "pos_doc": "id:global_routing_11\n### Report Wirelength\n\nThe `report_wire_length` command reports the wire length of the nets. Use the `-global_route`\nand the `-detailed_route` flags to report the wire length from global and detailed routing,\nrespectively. If none of these flags are used, the tool will identify the state of the design\nand report the wire length accordingly.\n\nExample: `report_wire_length -net {clk net60} -global_route -detailed_route -verbose -file out.csv`\n\n```tcl\nreport_wire_length \n    [-net net_list]\n    [-file file]\n    [-global_route]\n    [-detailed_route]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-net` | List of nets to report the wirelength. Use `*` to report the wire length for all nets of the design. |\n| `-file` | The name of the file for the wirelength report. |\n| `-global_route` | Report the wire length of the global routing. |\n| `-detailed_route` | Report the wire length of the detailed routing. |\n| `-verbose` | This flag enables the full reporting of the layer-wise wirelength information. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_45.png"], "neg_text": ["What is the correct way to specify the path to the global routing guide file when using the `read_guides` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_11"]}
{"q_img": "source_images/global_routing/global_routing_30.png", "q_text": "How can I visualize the routing guides for the nets in the layout after setting the global routing layers and adjustments as shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_30.png"], "neg_text": ["How can I set different minimum and maximum routing layers for clock nets in addition to the signal nets as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_30.png", "q_text": "How can I set different minimum and maximum routing layers for clock nets in addition to the signal nets as shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_30.png"], "neg_text": ["How can I visualize the routing guides for the nets in the layout after setting the global routing layers and adjustments as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_98.png", "q_text": "How can I visualize the Rectilinear Steiner Tree generated by `grt` for the net `_266_` shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_98.png"], "neg_text": ["How can I modify the command to show the pin locations for the net `_266_` in the layout as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_98.png", "q_text": "How can I modify the command to show the pin locations for the net `_266_` in the layout as shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_98.png"], "neg_text": ["How can I visualize the Rectilinear Steiner Tree generated by `grt` for the net `_266_` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_26.png", "q_text": "How can I perform global routing for the standard cell instance `_885_` shown in the screenshot, ensuring that the routing results allow for some congestion?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_26.png"], "neg_text": ["How can I visualize the routing guides for the net `clk` shown in the Inspector panel of the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_26.png", "q_text": "How can I visualize the routing guides for the net `clk` shown in the Inspector panel of the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_26.png"], "neg_text": ["How can I perform global routing for the standard cell instance `_885_` shown in the screenshot, ensuring that the routing results allow for some congestion?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_92.png", "q_text": "How can I visualize the Rectilinear Steiner Tree for the net \"clk\" as shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_92.png"], "neg_text": ["How can I modify the command to also show the pin locations for the net \"clk\" in the layout as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_92.png", "q_text": "How can I modify the command to also show the pin locations for the net \"clk\" in the layout as shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_92.png"], "neg_text": ["How can I visualize the Rectilinear Steiner Tree for the net \"clk\" as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_68.png", "q_text": "How can I adjust the global routing region to account for the obstruction on the `met1` layer shown in the screenshot?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_68.png"], "neg_text": ["How can I set a macro extension to ensure that the obstruction on the `met1` layer shown in the screenshot is avoided during global routing?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_68.png", "q_text": "How can I set a macro extension to ensure that the obstruction on the `met1` layer shown in the screenshot is avoided during global routing?", "pos_doc": "id:global_routing_3\n### Set Macro Extension\n\nThis command sets the halo (in terms of GCells) along the boundaries of macros.\nA `GCell` is typically defined in terms of `Mx` routing tracks.\nExample: `set_macro_extension 2`\n\n```tcl\nset_macro_extension extension\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `extension` | Number of `GCells` added to the blockage boundaries from macros. The default `GCell` size is 15 `M3` pitches. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_68.png"], "neg_text": ["How can I adjust the global routing region to account for the obstruction on the `met1` layer shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_3"]}
{"q_img": "source_images/global_routing/global_routing_1.png", "q_text": "How can I visualize the routing guides generated in the script using the `draw_route_guides` command?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_1.png"], "neg_text": ["How can I modify the script to set the routing layers for both signal and clock nets, ensuring that signal nets use Metal1 to Metal5 and clock nets use Metal6 to Metal9?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_1.png", "q_text": "How can I modify the script to set the routing layers for both signal and clock nets, ensuring that signal nets use Metal1 to Metal5 and clock nets use Metal6 to Metal9?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_1.png"], "neg_text": ["How can I visualize the routing guides generated in the script using the `draw_route_guides` command?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_101.png", "q_text": "How can I set the minimum and maximum routing layers for the clock net `clk` shown in the screenshot to use Metal6 to Metal9?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_101.png"], "neg_text": ["How can I perform global routing for the nets shown in the screenshot and generate a congestion report?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_101.png", "q_text": "How can I perform global routing for the nets shown in the screenshot and generate a congestion report?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_101.png"], "neg_text": ["How can I set the minimum and maximum routing layers for the clock net `clk` shown in the screenshot to use Metal6 to Metal9?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_3.png", "q_text": "How can I allow global routing to proceed despite the obstruction on the `met5` layer shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_3.png"], "neg_text": ["How can I check if the obstruction on the `met5` layer in the screenshot is within the defined routing layers?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_3.png", "q_text": "How can I check if the obstruction on the `met5` layer in the screenshot is within the defined routing layers?", "pos_doc": "id:global_routing_15\n# Global Routing\n## Useful Developer Commands\n\nIf you are a developer, you might find these useful. More details can be found in the [source file](./src/GlobalRouter.cpp) or the [swig file](./src/GlobalRouter.i).\n\n| Command Name | Description |\n| ----- | ----- |\n| `check_routing_layer` | Check if the layer is within the min/max routing layer specified. |\n| `parse_layer_name` | Get routing layer number from layer name |\n| `parse_layer_range` | Parses a range from `layer_range` argument of format (%s-%s). `cmd` argument is not used. |\n| `check_region` | Checks the defined region if its within the die area. |\n| `define_layer_range` | Provide a Tcl list of layers and automatically generate the min and max layers for signal routing. |\n| `define_clock_layer_range` | Provide a Tcl list of layers and automatically generate the min and max layers for clock routing. |\n| `have_detailed_route` | Checks if block has detailed route already. |\n\n", "neg_img": ["source_images/global_routing/global_routing_3.png"], "neg_text": ["How can I allow global routing to proceed despite the obstruction on the `met5` layer shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_15"]}
{"q_img": "source_images/global_routing/global_routing_18.png", "q_text": "How can I generate a congestion report for the routed net `net25` shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_18.png"], "neg_text": ["How can I report the wire length of the net \"net25\" shown in the screenshot using the global routing information?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_18.png", "q_text": "How can I report the wire length of the net \"net25\" shown in the screenshot using the global routing information?", "pos_doc": "id:global_routing_11\n### Report Wirelength\n\nThe `report_wire_length` command reports the wire length of the nets. Use the `-global_route`\nand the `-detailed_route` flags to report the wire length from global and detailed routing,\nrespectively. If none of these flags are used, the tool will identify the state of the design\nand report the wire length accordingly.\n\nExample: `report_wire_length -net {clk net60} -global_route -detailed_route -verbose -file out.csv`\n\n```tcl\nreport_wire_length \n    [-net net_list]\n    [-file file]\n    [-global_route]\n    [-detailed_route]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-net` | List of nets to report the wirelength. Use `*` to report the wire length for all nets of the design. |\n| `-file` | The name of the file for the wirelength report. |\n| `-global_route` | Report the wire length of the global routing. |\n| `-detailed_route` | Report the wire length of the detailed routing. |\n| `-verbose` | This flag enables the full reporting of the layer-wise wirelength information. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_18.png"], "neg_text": ["How can I generate a congestion report for the routed net `net25` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_11"]}
{"q_img": "source_images/global_routing/global_routing_62.png", "q_text": "How can I allow global routing results to be generated with remaining congestion for the net `clknet_2_0__leaf_clk` as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_62.png"], "neg_text": ["How can I report the wire length of the net `clknet_2_0__leaf_clk` shown in the screenshot using the `report_wire_length` command?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_62.png", "q_text": "How can I report the wire length of the net `clknet_2_0__leaf_clk` shown in the screenshot using the `report_wire_length` command?", "pos_doc": "id:global_routing_11\n### Report Wirelength\n\nThe `report_wire_length` command reports the wire length of the nets. Use the `-global_route`\nand the `-detailed_route` flags to report the wire length from global and detailed routing,\nrespectively. If none of these flags are used, the tool will identify the state of the design\nand report the wire length accordingly.\n\nExample: `report_wire_length -net {clk net60} -global_route -detailed_route -verbose -file out.csv`\n\n```tcl\nreport_wire_length \n    [-net net_list]\n    [-file file]\n    [-global_route]\n    [-detailed_route]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-net` | List of nets to report the wirelength. Use `*` to report the wire length for all nets of the design. |\n| `-file` | The name of the file for the wirelength report. |\n| `-global_route` | Report the wire length of the global routing. |\n| `-detailed_route` | Report the wire length of the detailed routing. |\n| `-verbose` | This flag enables the full reporting of the layer-wise wirelength information. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_62.png"], "neg_text": ["How can I allow global routing results to be generated with remaining congestion for the net `clknet_2_0__leaf_clk` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_11"]}
{"q_img": "source_images/global_routing/global_routing_80.png", "q_text": "How can I read the global routing guides written to `pin_access1.guide` in the screenshot?", "pos_doc": "id:global_routing_13\n### Read Global Routing Guides\n\nThis command reads global routing guides. \n\n```tcl\nread_guides file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing guide. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_80.png"], "neg_text": ["How can I allow global routing results to be generated with remaining congestion as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_13"]}
{"q_img": "source_images/global_routing/global_routing_80.png", "q_text": "How can I allow global routing results to be generated with remaining congestion as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_80.png"], "neg_text": ["How can I read the global routing guides written to `pin_access1.guide` in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_47.png", "q_text": "How can I read the global routing guide file `gcd_flute.guide` as shown in the screenshot?", "pos_doc": "id:global_routing_13\n### Read Global Routing Guides\n\nThis command reads global routing guides. \n\n```tcl\nread_guides file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing guide. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_47.png"], "neg_text": ["How can I visualize the route segments for the nets in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_13"]}
{"q_img": "source_images/global_routing/global_routing_47.png", "q_text": "How can I visualize the route segments for the nets in the layout shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_47.png"], "neg_text": ["How can I read the global routing guide file `gcd_flute.guide` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_95.png", "q_text": "How can I use the `global_route_debug` command to visualize the Steiner Tree for `net55` as shown in the screenshot?", "pos_doc": "id:global_routing_12\n### Global Route Debug Mode\n\nThe `global_route_debug` command allows you to start a debug mode to view the status of the Steiner Trees.\nIt also allows you to dump the input positions for the Steiner tree creation of a net.\nThis must be used before calling the `global_route` command. \nSet the name of the net and the trees that you want to visualize.\n\n```tcl\nglobal_route_debug \n    [-st]\n    [-rst]\n    [-tree2D]\n    [-tree3D]\n    [-saveSttInput file_name]\n    [-net net_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-st` | Show the Steiner Tree generated by `stt`. |\n| `-rst` | Show the Rectilinear Steiner Tree generated by `grt`. |\n| `-tree2D` | Show the Rectilinear Steiner Tree generated by `grt` after the overflow iterations. |\n| `-tree3D` | Show the 3D Rectilinear Steiner Tree post-layer assignment. |\n| `-saveSttInput` | File name to save `stt` input of a net. |\n| `-net` | The name of the net name to be displayed. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_95.png"], "neg_text": ["How can I visualize the pin locations for `net55` in the layout as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_12"]}
{"q_img": "source_images/global_routing/global_routing_95.png", "q_text": "How can I visualize the pin locations for `net55` in the layout as shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_95.png"], "neg_text": ["How can I use the `global_route_debug` command to visualize the Steiner Tree for `net55` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_79.png", "q_text": "How can I set the minimum and maximum routing layers for signal nets to avoid high resource usage on metal 3 as shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_79.png"], "neg_text": ["How can I generate a detailed wire length report for the nets shown in the screenshot, including layer-wise wire length information?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_79.png", "q_text": "How can I generate a detailed wire length report for the nets shown in the screenshot, including layer-wise wire length information?", "pos_doc": "id:global_routing_11\n### Report Wirelength\n\nThe `report_wire_length` command reports the wire length of the nets. Use the `-global_route`\nand the `-detailed_route` flags to report the wire length from global and detailed routing,\nrespectively. If none of these flags are used, the tool will identify the state of the design\nand report the wire length accordingly.\n\nExample: `report_wire_length -net {clk net60} -global_route -detailed_route -verbose -file out.csv`\n\n```tcl\nreport_wire_length \n    [-net net_list]\n    [-file file]\n    [-global_route]\n    [-detailed_route]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-net` | List of nets to report the wirelength. Use `*` to report the wire length for all nets of the design. |\n| `-file` | The name of the file for the wirelength report. |\n| `-global_route` | Report the wire length of the global routing. |\n| `-detailed_route` | Report the wire length of the detailed routing. |\n| `-verbose` | This flag enables the full reporting of the layer-wise wirelength information. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_79.png"], "neg_text": ["How can I set the minimum and maximum routing layers for signal nets to avoid high resource usage on metal 3 as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_11"]}
{"q_img": "source_images/global_routing/global_routing_21.png", "q_text": "How can I specify that only `net29` should be routed, as shown in the screenshot?", "pos_doc": "id:global_routing_8\n### Set Specific Nets to Route\n\nThe `set_nets_to_route` command defines a list of nets to route. Only the nets\ndefined in this command are routed, leaving the remaining nets without any\nglobal route guides.\n\n```tcl\nset_nets_to_route \n    net_names \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_21.png"], "neg_text": ["How can I set the minimum and maximum routing layers for the signal net \"net29\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_8"]}
{"q_img": "source_images/global_routing/global_routing_21.png", "q_text": "How can I set the minimum and maximum routing layers for the signal net \"net29\" shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_21.png"], "neg_text": ["How can I specify that only `net29` should be routed, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_14.png", "q_text": "How can I reduce the routing resources of Metal4 by 50% to manage congestion in the layout shown in the screenshot?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_14.png"], "neg_text": ["How can I generate a congestion report during global routing for the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_14.png", "q_text": "How can I generate a congestion report during global routing for the design shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_14.png"], "neg_text": ["How can I reduce the routing resources of Metal4 by 50% to manage congestion in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_97.png", "q_text": "How can I use the `write_global_route_segments` command to save the global routing segments to a file named `output.segs` as shown in the screenshot?", "pos_doc": "id:global_routing_14\n### Write Global Routing Segments\n\nThis command writes global routing segments, the raw routing data generated by\nthe global routing tool.\n\n```tcl\nwrite_global_route_segments file_name \n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `file_name` | Path to global routing segments file. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_97.png"], "neg_text": ["How can I generate a congestion report file during global routing as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_14"]}
{"q_img": "source_images/global_routing/global_routing_97.png", "q_text": "How can I generate a congestion report file during global routing as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_97.png"], "neg_text": ["How can I use the `write_global_route_segments` command to save the global routing segments to a file named `output.segs` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_56.png", "q_text": "In the screenshot, the `global_route` command is executed with the `-verbose` option. What does the `-verbose` option do, and how can it help in debugging global routing issues?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_56.png"], "neg_text": ["How can I adjust the routing layers for signal nets to use only Metal2 to Metal4 as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_56.png", "q_text": "How can I adjust the routing layers for signal nets to use only Metal2 to Metal4 as shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_56.png"], "neg_text": ["In the screenshot, the `global_route` command is executed with the `-verbose` option. What does the `-verbose` option do, and how can it help in debugging global routing issues?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_85.png", "q_text": "How can I visualize the route segments for the net `resp_msg[10]` shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_85.png"], "neg_text": ["How can I allow the global routing results to be generated with remaining congestion for the net `resp_msg[10]` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_85.png", "q_text": "How can I allow the global routing results to be generated with remaining congestion for the net `resp_msg[10]` as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_85.png"], "neg_text": ["How can I visualize the route segments for the net `resp_msg[10]` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_37.png", "q_text": "How can I adjust the routing resources for a specific region and layer, as shown in the screenshot with the command `set_global_routing_layer_adjustment met1-met5 0.8`?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_37.png"], "neg_text": ["In the screenshot, the command `set_routing_layers -signal met1-met5 -clock met3-met5` is used. What is the purpose of setting these specific routing layers for signal and clock nets?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_37.png", "q_text": "In the screenshot, the command `set_routing_layers -signal met1-met5 -clock met3-met5` is used. What is the purpose of setting these specific routing layers for signal and clock nets?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_37.png"], "neg_text": ["How can I adjust the routing resources for a specific region and layer, as shown in the screenshot with the command `set_global_routing_layer_adjustment met1-met5 0.8`?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_20.png", "q_text": "How can I reduce the routing resources of the layer used by the net `net29` shown in the screenshot to manage congestion?", "pos_doc": "id:global_routing_5\n### Set Global Routing Layer Adjustment\n\nThe `set_global_routing_layer_adjustment` command sets routing resource\nadjustments in the routing layers of the design.  Such adjustments reduce the number of\nrouting tracks that the global router assumes to exist. This promotes the spreading of routing\nand reduces peak congestion, to reduce challenges for detailed routing.\n\nYou can set adjustment for a\nspecific layer, e.g., `set_global_routing_layer_adjustment Metal4 0.5` reduces\nthe routing resources of routing layer `Metal4` by 50%.  You can also set adjustment\nfor all layers at once using `*`, e.g., `set_global_routing_layer_adjustment * 0.3` reduces the routing resources of all routing layers by 30%.  And, you can\nalso set resource adjustment for a layer range, e.g.: `set_global_routing_layer_adjustment\nMetal4-Metal8 0.3` reduces the routing resources of routing layers  `Metal4`,\n`Metal5`, `Metal6`, `Metal7` and `Metal8` by 30%.\n\n```tcl\nset_global_routing_layer_adjustment layer adjustment\n```\n\n#### Options\n\n| Argument Name | Description | \n| ----- | ----- |\n| `layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_20.png"], "neg_text": ["How can I perform global routing for the net `net29` connected to the terminal `A` of the instance `_817_` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_5"]}
{"q_img": "source_images/global_routing/global_routing_20.png", "q_text": "How can I perform global routing for the net `net29` connected to the terminal `A` of the instance `_817_` shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_20.png"], "neg_text": ["How can I reduce the routing resources of the layer used by the net `net29` shown in the screenshot to manage congestion?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_73.png", "q_text": "How can I visualize the pin locations for the net `uart_rstr` in the layout as shown in the screenshot?", "pos_doc": "id:global_routing_10\n### Plot Global Routing Guides\n\nThe `draw_route_guides` command plots the route guides for a set of nets.\nIt also plots the route segments for a set of nets when using the -show_segments flag.\nTo erase the route guides from the GUI, pass an empty list to this command:\n`draw_route_guides {}`.\n\n```tcl\ndraw_route_guides \n    net_names\n    [-show_segments]\n    [-show_pin_locations]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `net_names` | Tcl list of set of nets (e.g. `{net1, net2}`). |\n| `-show_segments` | Draw the route segments instead of the route guides. |\n| `-show_pin_locations` | Draw circles for the pin positions on the routing grid. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_73.png"], "neg_text": ["How can I specify a custom diode cell for repairing antenna violations on the net `uart_rstn` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_10"]}
{"q_img": "source_images/global_routing/global_routing_73.png", "q_text": "How can I specify a custom diode cell for repairing antenna violations on the net `uart_rstn` as shown in the screenshot?", "pos_doc": "id:global_routing_9\n### Repair Antennas\n\nThe `repair_antennas` command checks the global routing for antenna\nviolations and repairs the violations by inserting diodes near the\ngates of the violating nets.  By default the command runs only one\niteration to repair antennas. Filler instances added by the\n`filler_placement` command should NOT be in the database when\n`repair_antennas` is called. \n\nSee LEF/DEF 5.8 Language Reference, Appendix C, \"Calculating and\nFixing Process Antenna Violations\" for a [description](coriolis.lip6.fr/doc/lefdef/lefdefref/lefdefref.pdf) \nof antenna violations.\n\nIf no `diode_cell` argument is specified the LEF cell with class CORE, ANTENNACELL will be used.\nIf any repairs are made the filler instances are remove and must be\nplaced with the `filler_placement` command.\n\nIf the LEF technology layer `ANTENNADIFFSIDEAREARATIO` properties are constant\ninstead of PWL, inserting diodes will not improve the antenna ratios, \nand thus, no\ndiodes are inserted. The following warning message will be reported:\n\n```\n[WARNING GRT-0243] Unable to repair antennas on net with diodes.\n```\n\n```tcl\nrepair_antennas \n    [diode_cell]\n    [-iterations iterations]\n    [-ratio_margin margin]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `diode_cell` | Diode cell to fix antenna violations. |\n| `-iterations` | Number of iterations. The default value is `1`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-ratio_margin` | Add a margin to the antenna ratios. The default value is `0`, and the allowed values are integers `[0, 100]`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_73.png"], "neg_text": ["How can I visualize the pin locations for the net `uart_rstr` in the layout as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_9"]}
{"q_img": "source_images/global_routing/global_routing_94.png", "q_text": "How can I adjust the routing regions for met3 to reduce its usage from 56.47% as shown in the screenshot?", "pos_doc": "id:global_routing_6\n### Set Global Routing Region Adjustment\n\nSet global routing region adjustment.\nExample: `set_global_routing_region_adjustment {1.5 2 20 30.5} -layer Metal4 -adjustment 0.7`\n\n```tcl\nset_global_routing_region_adjustment\n    {lower_left_x lower_left_y upper_right_x upper_right_y}\n    -layer layer \n    -adjustment adjustment\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `lower_left_x`, `lower_left_y`, `upper_right_x` , `upper_right_y` | Bounding box to consider. |\n| `-layer` | Integer for the layer number (e.g. for M1 you would use 1). |\n| `-adjustment` | Float indicating the percentage reduction of each edge in the specified layer. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_94.png"], "neg_text": ["How can I generate a congestion report file during global routing as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_6"]}
{"q_img": "source_images/global_routing/global_routing_94.png", "q_text": "How can I generate a congestion report file during global routing as shown in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_94.png"], "neg_text": ["How can I adjust the routing regions for met3 to reduce its usage from 56.47% as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_77.png", "q_text": "How can I modify the script to set the routing layers for signal nets to Metal1-Metal4 and for clock nets to Metal3-Metal6?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_77.png"], "neg_text": ["In the script shown in the screenshot, the `global_route -verbose` command is used. How can I allow global routing results to be generated even if there is remaining congestion?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_77.png", "q_text": "In the script shown in the screenshot, the `global_route -verbose` command is used. How can I allow global routing results to be generated even if there is remaining congestion?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_77.png"], "neg_text": ["How can I modify the script to set the routing layers for signal nets to Metal1-Metal4 and for clock nets to Metal3-Metal6?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/global_routing/global_routing_24.png", "q_text": "How can I adjust the minimum and maximum routing layers to resolve the horizontal edge usage error shown in the screenshot?", "pos_doc": "id:global_routing_2\n### Set Routing Layers\n\nThis command sets the minimum and maximum routing layers for signal and clock nets.\nExample: `set_routing_layers -signal Metal2-Metal10 -clock Metal6-Metal9`\n\n```tcl\nset_routing_layers \n    [-signal min-max]\n    [-clock min-max]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-signal` | Set the min and max routing signal layer (names) in this format \"%s-%s\". |\n| `-clock` | Set the min and max routing clock layer (names) in this format \"%s-%s\". |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_24.png"], "neg_text": ["How can I allow the global routing to proceed despite the horizontal edge usage exceeding the maximum allowed, as shown in the error message in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_2"]}
{"q_img": "source_images/global_routing/global_routing_24.png", "q_text": "How can I allow the global routing to proceed despite the horizontal edge usage exceeding the maximum allowed, as shown in the error message in the screenshot?", "pos_doc": "id:global_routing_1\n### Global Route\n\nThis command performs global routing with the option to use a `guide_file`.\nYou may also choose to use incremental global routing using `-start_incremental`.\n\n```tcl\nglobal_route \n    [-guide_file out_file]\n    [-congestion_iterations iterations]\n    [-congestion_report_file file_name]\n    [-congestion_report_iter_step steps]\n    [-grid_origin {x y}]\n    [-critical_nets_percentage percent]\n    [-allow_congestion]\n    [-allow_overflow]\n    [-overflow_iterations]\n    [-verbose]\n    [-start_incremental]\n    [-end_incremental]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-guide_file` | Set the output guides file name (e.g., `route.guide`). |\n| `-congestion_iterations` | Set the number of iterations made to remove the overflow of the routing. The default value is `50`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-congestion_report_file` | Set the file name to save the congestion report. The file generated can be read by the DRC viewer in the GUI (e.g., `report_file.rpt`). |\n| `-congestion_report_iter_step` | Set the number of iterations to report. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-grid_origin` | Set the (x, y) origin of the routing grid in DBU. For example, `-grid_origin {1 1}` corresponds to the die (0, 0) + 1 DBU in each x--, y- direction. |\n| `-critical_nets_percentage` | Set the percentage of nets with the worst slack value that are considered timing critical, having preference over other nets during congestion iterations (e.g. `-critical_nets_percentage 30`). The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-allow_congestion` | Allow global routing results to be generated with remaining congestion. The default is false. |\n| `-verbose` | This flag enables the full reporting of the global routing. |\n| `-start_incremental` | This flag initializes the GRT listener to get the net modified. The default is false. |\n| `-end_incremental` | This flag run incremental GRT with the nets modified. The default is false. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_routing/global_routing_24.png"], "neg_text": ["How can I adjust the minimum and maximum routing layers to resolve the horizontal edge usage error shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_routing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_92.png", "q_text": "How can I remove the buffers inserted during the `repair_design` step shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_92.png", "source_images/gate_resizing/gate_resizing_92.png"], "neg_text": ["How can I adjust the `repair_design` command to handle the max fanout violation shown in the screenshot?", "How can I adjust the maximum wire length parameter in the `repair_design` command to address the fanout violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_92.png", "q_text": "How can I adjust the `repair_design` command to handle the max fanout violation shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_92.png"], "neg_text": ["How can I remove the buffers inserted during the `repair_design` step shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_92.png", "q_text": "How can I adjust the maximum wire length parameter in the `repair_design` command to address the fanout violations shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_92.png"], "neg_text": ["How can I remove the buffers inserted during the `repair_design` step shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_72.png", "q_text": "How can I use the `repair_timing` command to fix the max slew violation shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_72.png", "source_images/gate_resizing/gate_resizing_72.png"], "neg_text": ["How can I adjust the `repair_design` command to address the max slew violation shown in the screenshot?", "How can I fix the max slew violation shown in the screenshot using the `repair_design` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_72.png", "q_text": "How can I adjust the `repair_design` command to address the max slew violation shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_72.png", "source_images/gate_resizing/gate_resizing_72.png"], "neg_text": ["How can I use the `repair_timing` command to fix the max slew violation shown in the screenshot?", "How can I fix the max slew violation shown in the screenshot using the `repair_design` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_72.png", "q_text": "How can I fix the max slew violation shown in the screenshot using the `repair_design` command?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_72.png", "source_images/gate_resizing/gate_resizing_72.png"], "neg_text": ["How can I use the `repair_timing` command to fix the max slew violation shown in the screenshot?", "How can I adjust the `repair_design` command to address the max slew violation shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_26.png", "q_text": "What is the purpose of using the `-placement` flag with the `estimate_parasitics` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_26.png"], "neg_text": ["What is the purpose of using the `-layer` option in the `set_wire_rc` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_26.png", "q_text": "What is the purpose of using the `-layer` option in the `set_wire_rc` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_26.png"], "neg_text": ["What is the purpose of using the `-placement` flag with the `estimate_parasitics` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_52.png", "q_text": "How can I use the `repair_design` command to fix the 105 slew violations shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_52.png"], "neg_text": ["How can I use the `repair_timing` command to address the 105 slew violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_52.png", "q_text": "How can I use the `repair_design` command to address the 105 slew violations shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_52.png"], "neg_text": ["How can I use the `repair_timing` command to address the 105 slew violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_52.png", "q_text": "How can I use the `repair_timing` command to address the 105 slew violations shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_52.png", "source_images/gate_resizing/gate_resizing_52.png"], "neg_text": ["How can I use the `repair_design` command to fix the 105 slew violations shown in the screenshot?", "How can I use the `repair_design` command to address the 105 slew violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_63.png", "q_text": "How can I use the `repair_tie_fanout` command to address the high fanout issue shown in the screenshot for the net `clk1`?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_63.png"], "neg_text": ["How can I use the `repair_timing` command to address potential setup and hold violations for the high fanout net \"clk1\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_63.png", "q_text": "How can I use the `repair_timing` command to address potential setup and hold violations for the high fanout net \"clk1\" shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_63.png"], "neg_text": ["How can I use the `repair_tie_fanout` command to address the high fanout issue shown in the screenshot for the net `clk1`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_15.png", "q_text": "How can I insert a buffer similar to `sky130_fd_sc_hs__buf_1` between the input and its loads in my design?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_15.png"], "neg_text": ["How can I remove the buffer instance `sky130_fd_sc_hs__buf_1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_15.png", "q_text": "How can I insert a buffer at the input port similar to the buffer shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_15.png"], "neg_text": ["How can I remove the buffer instance `sky130_fd_sc_hs__buf_1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_15.png", "q_text": "How can I remove the buffer instance `sky130_fd_sc_hs__buf_1` shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_15.png", "source_images/gate_resizing/gate_resizing_15.png"], "neg_text": ["How can I insert a buffer similar to `sky130_fd_sc_hs__buf_1` between the input and its loads in my design?", "How can I insert a buffer at the input port similar to the buffer shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_42.png", "q_text": "How can I use the `repair_design` command to address potential RC delay issues on the `clk1` net shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_42.png"], "neg_text": ["How can I optimize the long wire in the clock net `clk1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_42.png", "q_text": "How can I optimize the long wire in the clock net `clk1` shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_42.png"], "neg_text": ["How can I use the `repair_design` command to address potential RC delay issues on the `clk1` net shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_50.png", "q_text": "How can I modify the resistance and capacitance values for the metal2 layer in the script shown in the screenshot?", "pos_doc": "id:gate_resizing_2\n### Set Layer RC\n\nThe `set_layer_rc` command can be used to set the resistance and capacitance\nfor a layer or via. This is useful if these values are missing from the LEF file,\nor to override the values in the LEF.\n\n```tcl\nset_layer_rc \n    [-layer layer]\n    [-via via_layer]\n    [-resistance res]\n    [-capacitance cap]\n    [-corner corner]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Set layer name to modify. Note that the layer must be a routing layer. |\n| `-via` | Select via layer name. Note that via resistance is per cut/via, not area-based. |\n| `-resistance` | Resistance per unit length, same convention as `set_wire_rc`. |\n| `-capacitance` | Capacitance per unit length, same convention as `set_wire_rc`. |\n| `-corner` | Process corner to use. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_50.png", "source_images/gate_resizing/gate_resizing_50.png"], "neg_text": ["How do the `-corner` and `-layer` options in the `set_wire_rc` command affect the resistance and capacitance settings in the script?", "What is the purpose of using the `-placement` flag with the `estimate_parasitics` command in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_2"]}
{"q_img": "source_images/gate_resizing/gate_resizing_50.png", "q_text": "How do the `-corner` and `-layer` options in the `set_wire_rc` command affect the resistance and capacitance settings in the script?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_50.png", "source_images/gate_resizing/gate_resizing_50.png"], "neg_text": ["How can I modify the resistance and capacitance values for the metal2 layer in the script shown in the screenshot?", "What is the purpose of using the `-placement` flag with the `estimate_parasitics` command in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_50.png", "q_text": "What is the purpose of using the `-placement` flag with the `estimate_parasitics` command in the script shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_50.png", "source_images/gate_resizing/gate_resizing_50.png"], "neg_text": ["How can I modify the resistance and capacitance values for the metal2 layer in the script shown in the screenshot?", "How do the `-corner` and `-layer` options in the `set_wire_rc` command affect the resistance and capacitance settings in the script?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_35.png", "q_text": "What is the purpose of the `set_wire_rc -layer metal3` command in the script shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_35.png", "source_images/gate_resizing/gate_resizing_35.png"], "neg_text": ["How can I use the `repair_timing` command to avoid buffer removal during setup timing repair as shown in the screenshot?", "What does the `-hold_margin` option do in the `repair_timing` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_35.png", "q_text": "How can I use the `repair_timing` command to avoid buffer removal during setup timing repair as shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_35.png"], "neg_text": ["What is the purpose of the `set_wire_rc -layer metal3` command in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_35.png", "q_text": "What does the `-hold_margin` option do in the `repair_timing` command shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_35.png"], "neg_text": ["What is the purpose of the `set_wire_rc -layer metal3` command in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_62.png", "q_text": "How can I use the `repair_timing` command to address the setup violation shown in the screenshot for the pin `drvr/Q`?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_62.png", "source_images/gate_resizing/gate_resizing_62.png"], "neg_text": ["How can I adjust the `repair_design` command to address the max capacitance violation shown in the screenshot?", "How can I use the `repair_design` command to address the max capacitance violation shown for pin `drvr/Q` in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_62.png", "q_text": "How can I adjust the `repair_design` command to address the max capacitance violation shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_62.png"], "neg_text": ["How can I use the `repair_timing` command to address the setup violation shown in the screenshot for the pin `drvr/Q`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_62.png", "q_text": "How can I use the `repair_design` command to address the max capacitance violation shown for pin `drvr/Q` in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_62.png"], "neg_text": ["How can I use the `repair_timing` command to address the setup violation shown in the screenshot for the pin `drvr/Q`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_31.png", "q_text": "How can I repair setup violations between the `in1` and `out1` pins shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_31.png", "source_images/gate_resizing/gate_resizing_31.png"], "neg_text": ["How can I repair the design to handle the long wire between \"in1\" and \"out1\" as shown in the screenshot?", "How can I add a buffer between the input port \"in1\" and its load in the circuit shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_31.png", "q_text": "How can I repair the design to handle the long wire between \"in1\" and \"out1\" as shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_31.png", "source_images/gate_resizing/gate_resizing_31.png"], "neg_text": ["How can I repair setup violations between the `in1` and `out1` pins shown in the screenshot?", "How can I add a buffer between the input port \"in1\" and its load in the circuit shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_31.png", "q_text": "How can I add a buffer between the input port \"in1\" and its load in the circuit shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_31.png", "source_images/gate_resizing/gate_resizing_31.png"], "neg_text": ["How can I repair setup violations between the `in1` and `out1` pins shown in the screenshot?", "How can I repair the design to handle the long wire between \"in1\" and \"out1\" as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_37.png", "q_text": "How can I set the resistance and capacitance values for the routed net `_246_` shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_37.png"], "neg_text": ["How can I prevent the net `_246_` from being modified by resizer commands?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_37.png", "q_text": "How can I prevent the net `_246_` from being modified by resizer commands?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_37.png"], "neg_text": ["How can I set the resistance and capacitance values for the routed net `_246_` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_76.png", "q_text": "How can I skip buffer removal for the cell `sky130_fd_sc_hd__ebufn_8` shown in the screenshot during timing repair?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_76.png", "source_images/gate_resizing/gate_resizing_76.png"], "neg_text": ["How can I use the `repair_design` command to address potential RC delay issues in the design shown in the screenshot?", "How can I set the `Dont Touch` attribute to `True` for the instance `u1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_76.png", "q_text": "How can I use the `repair_design` command to address potential RC delay issues in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_76.png", "source_images/gate_resizing/gate_resizing_76.png"], "neg_text": ["How can I skip buffer removal for the cell `sky130_fd_sc_hd__ebufn_8` shown in the screenshot during timing repair?", "How can I set the `Dont Touch` attribute to `True` for the instance `u1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_76.png", "q_text": "How can I set the `Dont Touch` attribute to `True` for the instance `u1` shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_76.png", "source_images/gate_resizing/gate_resizing_76.png"], "neg_text": ["How can I skip buffer removal for the cell `sky130_fd_sc_hd__ebufn_8` shown in the screenshot during timing repair?", "How can I use the `repair_design` command to address potential RC delay issues in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_68.png", "q_text": "How can I address the high fanout issue shown in the screenshot using the `repair_clock_inverters` command?", "pos_doc": "id:gate_resizing_15\n### Repair Clock Inverters\n\nThe repair_clock_inverters command replaces an inverter in the clock\ntree with multiple fanouts with one inverter per fanout.  This\nprevents the inverter from splitting up the clock tree seen by CTS.\nIt should be run before clock_tree_synthesis.\n\n```tcl\nrepair_clock_inverters\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_68.png"], "neg_text": ["How can I repair the high fanout net shown in the screenshot using the `repair_design` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_15"]}
{"q_img": "source_images/gate_resizing/gate_resizing_68.png", "q_text": "How can I repair the high fanout net shown in the screenshot using the `repair_design` command?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_68.png"], "neg_text": ["How can I address the high fanout issue shown in the screenshot using the `repair_clock_inverters` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_32.png", "q_text": "How can I estimate the parasitics for the placed components shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_32.png"], "neg_text": ["How can I use the `repair_design` command to address max fanout violations in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_32.png", "q_text": "How can I use the `repair_design` command to address max fanout violations in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_32.png"], "neg_text": ["How can I estimate the parasitics for the placed components shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_91.png", "q_text": "How can I skip buffer removal when repairing timing violations in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_91.png", "source_images/gate_resizing/gate_resizing_91.png"], "neg_text": ["How can I report the area and utilization of the design shown in the screenshot?", "How can I remove the buffers shown in the screenshot using the `remove_buffers` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_91.png", "q_text": "How can I report the area and utilization of the design shown in the screenshot?", "pos_doc": "id:gate_resizing_16\n### Report Design Area\n\nThe `report_design_area` command reports the area of the design's components\nand the utilization.\n\n```tcl\nreport_design_area\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_91.png", "source_images/gate_resizing/gate_resizing_91.png"], "neg_text": ["How can I skip buffer removal when repairing timing violations in the design shown in the screenshot?", "How can I remove the buffers shown in the screenshot using the `remove_buffers` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_16"]}
{"q_img": "source_images/gate_resizing/gate_resizing_91.png", "q_text": "How can I remove the buffers shown in the screenshot using the `remove_buffers` command?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_91.png", "source_images/gate_resizing/gate_resizing_91.png"], "neg_text": ["How can I skip buffer removal when repairing timing violations in the design shown in the screenshot?", "How can I report the area and utilization of the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_97.png", "q_text": "How can I use the `repair_design` command to address the long wires shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_97.png", "source_images/gate_resizing/gate_resizing_97.png"], "neg_text": ["How can I repair the long wire from the clock input pin to the clock tree root buffer as shown in the screenshot?", "How can I use the `repair_clock_nets` command to address the long wire issue shown in the screenshot for the clock net associated with `sink445`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_97.png", "q_text": "How can I repair the long wire from the clock input pin to the clock tree root buffer as shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_97.png"], "neg_text": ["How can I use the `repair_design` command to address the long wires shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_97.png", "q_text": "How can I use the `repair_clock_nets` command to address the long wire issue shown in the screenshot for the clock net associated with `sink445`?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_97.png"], "neg_text": ["How can I use the `repair_design` command to address the long wires shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_16.png", "q_text": "How can I use the `repair_design` command to address the long wire issue shown in the screenshot for the net `u1z`?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_16.png", "source_images/gate_resizing/gate_resizing_16.png"], "neg_text": ["How can I remove the buffer tree `in1` from the net `u1z` as shown in the screenshot?", "How can I set the resistance and capacitance values for the long wire shown in the screenshot to optimize its delay?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_16.png", "q_text": "How can I remove the buffer tree `in1` from the net `u1z` as shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_16.png", "source_images/gate_resizing/gate_resizing_16.png"], "neg_text": ["How can I use the `repair_design` command to address the long wire issue shown in the screenshot for the net `u1z`?", "How can I set the resistance and capacitance values for the long wire shown in the screenshot to optimize its delay?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_16.png", "q_text": "How can I set the resistance and capacitance values for the long wire shown in the screenshot to optimize its delay?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_16.png", "source_images/gate_resizing/gate_resizing_16.png"], "neg_text": ["How can I use the `repair_design` command to address the long wire issue shown in the screenshot for the net `u1z`?", "How can I remove the buffer tree `in1` from the net `u1z` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_94.png", "q_text": "How can I modify the `set_wire_rc` command in the script to set different resistance and capacitance values for horizontal and vertical wires?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_94.png"], "neg_text": ["How can I use the `repair_design` command to optimize the wire lengths in my design as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_94.png", "q_text": "How can I set different resistance and capacitance values for horizontal and vertical wires as shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_94.png"], "neg_text": ["How can I use the `repair_design` command to optimize the wire lengths in my design as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_94.png", "q_text": "How can I use the `repair_design` command to optimize the wire lengths in my design as shown in the screenshot?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_94.png", "source_images/gate_resizing/gate_resizing_94.png"], "neg_text": ["How can I modify the `set_wire_rc` command in the script to set different resistance and capacitance values for horizontal and vertical wires?", "How can I set different resistance and capacitance values for horizontal and vertical wires as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_58.png", "q_text": "What is the purpose of running `report_checks -unconstrained` before and after the `remove_buffers` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_58.png"], "neg_text": ["How can I use the `repair_design` command to fix the design after removing buffers as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_58.png", "q_text": "What is the purpose of running `report_checks -unconstrained` before and after the `remove_buffers` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_58.png"], "neg_text": ["How can I use the `repair_design` command to fix the design after removing buffers as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_58.png", "q_text": "How can I use the `repair_design` command to fix the design after removing buffers as shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_58.png", "source_images/gate_resizing/gate_resizing_58.png"], "neg_text": ["What is the purpose of running `report_checks -unconstrained` before and after the `remove_buffers` command as shown in the screenshot?", "What is the purpose of running `report_checks -unconstrained` before and after the `remove_buffers` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_88.png", "q_text": "How can I estimate parasitics to avoid the warning \"no estimated parasitics\" shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_88.png"], "neg_text": ["How can I reverse the `set_dont_touch` command for instances or nets in the design to allow buffer insertion, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_88.png", "q_text": "How can I reverse the `set_dont_touch` command for instances or nets in the design to allow buffer insertion, as shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_88.png"], "neg_text": ["How can I estimate parasitics to avoid the warning \"no estimated parasitics\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_64.png", "q_text": "How can I use the `repair_tie_fanout` command to manage the high fanout issue shown in the screenshot for `net0`?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_64.png", "source_images/gate_resizing/gate_resizing_64.png"], "neg_text": ["How can I use the `repair_clock_nets` command to manage the high fanout net shown in the screenshot?", "How can I use the `repair_clock_nets` command to manage the high fanout net shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_64.png", "q_text": "How can I use the `repair_clock_nets` command to manage the high fanout net shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_64.png"], "neg_text": ["How can I use the `repair_tie_fanout` command to manage the high fanout issue shown in the screenshot for `net0`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_64.png", "q_text": "How can I use the `repair_clock_nets` command to manage the high fanout net shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_64.png"], "neg_text": ["How can I use the `repair_tie_fanout` command to manage the high fanout issue shown in the screenshot for `net0`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_24.png", "q_text": "How can I remove the buffer tree associated with the net `n3-43` as shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_24.png", "source_images/gate_resizing/gate_resizing_24.png"], "neg_text": ["How can I set the `Dont Touch` attribute to `True` for the net `n3-43` shown in the screenshot?", "How can I reverse the `set_dont_touch` command for the net `n3-43` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_24.png", "q_text": "How can I set the `Dont Touch` attribute to `True` for the net `n3-43` shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_24.png"], "neg_text": ["How can I remove the buffer tree associated with the net `n3-43` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_24.png", "q_text": "How can I reverse the `set_dont_touch` command for the net `n3-43` shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_24.png"], "neg_text": ["How can I remove the buffer tree associated with the net `n3-43` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_66.png", "q_text": "How can I use the `repair_design` command to address long wire issues in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_66.png"], "neg_text": ["How can I use the `repair_design` command to fix issues related to maximum wire length as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_66.png", "q_text": "How can I use the `repair_design` command to fix issues related to maximum wire length as shown in the screenshot?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_66.png"], "neg_text": ["How can I use the `repair_design` command to address long wire issues in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_101.png", "q_text": "How can I use the `repair_clock_nets` command to address the long wire issue in the `clk1` net shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_101.png", "source_images/gate_resizing/gate_resizing_101.png"], "neg_text": ["How can I use the `repair_tie_fanout` command to manage the high fanout issue shown in the screenshot for the net `clk1`?", "How can I use the `repair_design` command to address the high fanout issue shown in the screenshot for the net `clk1`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_101.png", "q_text": "How can I use the `repair_tie_fanout` command to manage the high fanout issue shown in the screenshot for the net `clk1`?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_101.png", "source_images/gate_resizing/gate_resizing_101.png"], "neg_text": ["How can I use the `repair_clock_nets` command to address the long wire issue in the `clk1` net shown in the screenshot?", "How can I use the `repair_design` command to address the high fanout issue shown in the screenshot for the net `clk1`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_101.png", "q_text": "How can I use the `repair_design` command to address the high fanout issue shown in the screenshot for the net `clk1`?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_101.png", "source_images/gate_resizing/gate_resizing_101.png"], "neg_text": ["How can I use the `repair_clock_nets` command to address the long wire issue in the `clk1` net shown in the screenshot?", "How can I use the `repair_tie_fanout` command to manage the high fanout issue shown in the screenshot for the net `clk1`?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_33.png", "q_text": "How can I use the `repair_design` command to address the long wire length issue shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_33.png"], "neg_text": ["How can I insert buffers in the long wire of the clock net `clk` shown in the screenshot to reduce delay?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_33.png", "q_text": "How can I insert buffers in the long wire of the clock net `clk` shown in the screenshot to reduce delay?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_33.png"], "neg_text": ["How can I use the `repair_design` command to address the long wire length issue shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_70.png", "q_text": "How can I use the `repair_design` command to address the long wire issue shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_70.png", "source_images/gate_resizing/gate_resizing_70.png"], "neg_text": ["How can I insert buffers to address the long wire connected to the output pin (out1) of the buffer (BUF_X1) shown in the screenshot?", "How can I remove the buffer instance `u3` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_70.png", "q_text": "How can I insert buffers to address the long wire connected to the output pin (out1) of the buffer (BUF_X1) shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_70.png", "source_images/gate_resizing/gate_resizing_70.png"], "neg_text": ["How can I use the `repair_design` command to address the long wire issue shown in the screenshot?", "How can I remove the buffer instance `u3` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_70.png", "q_text": "How can I remove the buffer instance `u3` shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_70.png", "source_images/gate_resizing/gate_resizing_70.png"], "neg_text": ["How can I use the `repair_design` command to address the long wire issue shown in the screenshot?", "How can I insert buffers to address the long wire connected to the output pin (out1) of the buffer (BUF_X1) shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_34.png", "q_text": "How can I ensure that the instance `r1` in the screenshot is not protected from modifications?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_34.png", "source_images/gate_resizing/gate_resizing_34.png"], "neg_text": ["How can I ensure that the `repair_timing` command does not remove any buffers while fixing setup and hold violations for the instance `r1` shown in the screenshot?", "How can I prevent the instance `r1` from being modified by resizer commands in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_34.png", "q_text": "How can I ensure that the `repair_timing` command does not remove any buffers while fixing setup and hold violations for the instance `r1` shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_34.png", "source_images/gate_resizing/gate_resizing_34.png"], "neg_text": ["How can I ensure that the instance `r1` in the screenshot is not protected from modifications?", "How can I prevent the instance `r1` from being modified by resizer commands in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_34.png", "q_text": "How can I prevent the instance `r1` from being modified by resizer commands in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_34.png", "source_images/gate_resizing/gate_resizing_34.png"], "neg_text": ["How can I ensure that the instance `r1` in the screenshot is not protected from modifications?", "How can I ensure that the `repair_timing` command does not remove any buffers while fixing setup and hold violations for the instance `r1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_8.png", "q_text": "How can I optimize the high fanout net shown in the screenshot using the `resizer` commands?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_8.png", "source_images/gate_resizing/gate_resizing_8.png"], "neg_text": ["How can I repair the timing violations for the high fanout net \"net1\" shown in the screenshot?", "How can I manage the high fanout of the net shown in the screenshot using the `repair_tie_fanout` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_8.png", "q_text": "How can I repair the timing violations for the high fanout net \"net1\" shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_8.png", "source_images/gate_resizing/gate_resizing_8.png"], "neg_text": ["How can I optimize the high fanout net shown in the screenshot using the `resizer` commands?", "How can I manage the high fanout of the net shown in the screenshot using the `repair_tie_fanout` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_8.png", "q_text": "How can I manage the high fanout of the net shown in the screenshot using the `repair_tie_fanout` command?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_8.png", "source_images/gate_resizing/gate_resizing_8.png"], "neg_text": ["How can I optimize the high fanout net shown in the screenshot using the `resizer` commands?", "How can I repair the timing violations for the high fanout net \"net1\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_43.png", "q_text": "How can I use the `set_wire_rc` command to specify the resistance and capacitance for a different metal layer in the script shown in the screenshot?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_43.png", "source_images/gate_resizing/gate_resizing_43.png"], "neg_text": ["What does the `-placement` option do in the `estimate_parasitics` command shown in the screenshot?", "What is the purpose of using the `-placement` flag with the `estimate_parasitics` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_43.png", "q_text": "What does the `-placement` option do in the `estimate_parasitics` command shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_43.png"], "neg_text": ["How can I use the `set_wire_rc` command to specify the resistance and capacitance for a different metal layer in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_43.png", "q_text": "What is the purpose of using the `-placement` flag with the `estimate_parasitics` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_43.png"], "neg_text": ["How can I use the `set_wire_rc` command to specify the resistance and capacitance for a different metal layer in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_41.png", "q_text": "How can I use the `repair_design` command to address the issues reported by `report_checks` in the script shown in the screenshot?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_41.png"], "neg_text": ["What is the purpose of using the `-layer metal2` option in the `set_wire_rc` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_41.png", "q_text": "What is the purpose of using the `-layer metal2` option in the `set_wire_rc` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_41.png"], "neg_text": ["How can I use the `repair_design` command to address the issues reported by `report_checks` in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_81.png", "q_text": "What are the options available for the `estimate_parasitics` command shown in the screenshot, and how do they affect the estimation process?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_81.png"], "neg_text": ["How can I skip buffer removal during the `repair_design` process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_81.png", "q_text": "How can I skip buffer removal during the `repair_design` process as shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_81.png"], "neg_text": ["What are the options available for the `estimate_parasitics` command shown in the screenshot, and how do they affect the estimation process?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_25.png", "q_text": "How can I add a buffer to the input port of the net `n2-98` as shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_25.png", "source_images/gate_resizing/gate_resizing_25.png"], "neg_text": ["How can I skip buffer removal for the net `n2-98` shown in the screenshot?", "How can I reverse the `Dont Touch` attribute for the net `n2-98` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_25.png", "q_text": "How can I skip buffer removal for the net `n2-98` shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_25.png", "source_images/gate_resizing/gate_resizing_25.png"], "neg_text": ["How can I add a buffer to the input port of the net `n2-98` as shown in the screenshot?", "How can I reverse the `Dont Touch` attribute for the net `n2-98` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_25.png", "q_text": "How can I reverse the `Dont Touch` attribute for the net `n2-98` shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_25.png", "source_images/gate_resizing/gate_resizing_25.png"], "neg_text": ["How can I add a buffer to the input port of the net `n2-98` as shown in the screenshot?", "How can I skip buffer removal for the net `n2-98` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_10.png", "q_text": "How can I use the `repair_design` command to address the buffer tree on the net \"in1\" shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_10.png"], "neg_text": ["How can I remove the buffer associated with the net \"in1\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_10.png", "q_text": "How can I remove the buffer associated with the net \"in1\" shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_10.png"], "neg_text": ["How can I use the `repair_design` command to address the buffer tree on the net \"in1\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_51.png", "q_text": "How can I use the `repair_design` command to address the max slew and capacitance violations shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_51.png"], "neg_text": ["How can I repair setup and hold violations after estimating parasitics as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_51.png", "q_text": "How can I repair setup and hold violations after estimating parasitics as shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_51.png"], "neg_text": ["How can I use the `repair_design` command to address the max slew and capacitance violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_85.png", "q_text": "How can I ensure that the `repair_timing` command uses estimated parasitics instead of wire load models, as shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_85.png"], "neg_text": ["How can I set the resistance and capacitance values for the net \"RESET\" as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_85.png", "q_text": "How can I ensure that the `repair_timing` command does not skip buffer removal, as shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_85.png"], "neg_text": ["How can I set the resistance and capacitance values for the net \"RESET\" as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_85.png", "q_text": "How can I set the resistance and capacitance values for the net \"RESET\" as shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_85.png", "source_images/gate_resizing/gate_resizing_85.png"], "neg_text": ["How can I ensure that the `repair_timing` command uses estimated parasitics instead of wire load models, as shown in the screenshot?", "How can I ensure that the `repair_timing` command does not skip buffer removal, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_67.png", "q_text": "How can I ensure that the `repair_timing` command does not remove the buffer `load_slew1` shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_67.png", "source_images/gate_resizing/gate_resizing_67.png"], "neg_text": ["How can I adjust the maximum wire length for buffers like `load_slew1` in the design?", "How can I adjust the maximum wire length for the buffer `load_slew1` shown in the screenshot to reduce RC delay?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_67.png", "q_text": "How can I adjust the maximum wire length for buffers like `load_slew1` in the design?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_67.png"], "neg_text": ["How can I ensure that the `repair_timing` command does not remove the buffer `load_slew1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_67.png", "q_text": "How can I adjust the maximum wire length for the buffer `load_slew1` shown in the screenshot to reduce RC delay?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_67.png"], "neg_text": ["How can I ensure that the `repair_timing` command does not remove the buffer `load_slew1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_57.png", "q_text": "How can I insert buffers to address the long wire in the net \"in2\" shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_57.png"], "neg_text": ["How can I prevent the net \"in2\" from being modified by the resizer commands as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_57.png", "q_text": "How can I prevent the net \"in2\" from being modified by the resizer commands as shown in the screenshot?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_57.png"], "neg_text": ["How can I insert buffers to address the long wire in the net \"in2\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_80.png", "q_text": "How can I repair the clock net that includes the buffer `sky130_fd_sc_hd__buf_1` shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_80.png", "source_images/gate_resizing/gate_resizing_80.png"], "neg_text": ["How can I remove the buffer instance `hi_fanout` shown in the screenshot?", "How can I add a buffer similar to `hi_fanout` between the input and its loads using the `buffer_ports` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_80.png", "q_text": "How can I remove the buffer instance `hi_fanout` shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_80.png", "source_images/gate_resizing/gate_resizing_80.png"], "neg_text": ["How can I repair the clock net that includes the buffer `sky130_fd_sc_hd__buf_1` shown in the screenshot?", "How can I add a buffer similar to `hi_fanout` between the input and its loads using the `buffer_ports` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_80.png", "q_text": "How can I add a buffer similar to `hi_fanout` between the input and its loads using the `buffer_ports` command?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_80.png", "source_images/gate_resizing/gate_resizing_80.png"], "neg_text": ["How can I repair the clock net that includes the buffer `sky130_fd_sc_hd__buf_1` shown in the screenshot?", "How can I remove the buffer instance `hi_fanout` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_47.png", "q_text": "How can I use the `repair_timing` command to address setup violations after running the `estimate_parasitics` command shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_47.png"], "neg_text": ["How can I set different resistance and capacitance values for horizontal and vertical wires as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_47.png", "q_text": "How can I set different resistance and capacitance values for horizontal and vertical wires as shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_47.png"], "neg_text": ["How can I use the `repair_timing` command to address setup violations after running the `estimate_parasitics` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_61.png", "q_text": "How can I ensure that the buffer tree \"in1\" shown in the screenshot is not removed during the timing repair process?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_61.png", "source_images/gate_resizing/gate_resizing_61.png"], "neg_text": ["How can I set the net `n2` to be \"Don't Touch\" in the OpenROAD tool?", "How can I prevent the buffer tree `in1` from being used in the net `n2` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_61.png", "q_text": "How can I set the net `n2` to be \"Don't Touch\" in the OpenROAD tool?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_61.png", "source_images/gate_resizing/gate_resizing_61.png"], "neg_text": ["How can I ensure that the buffer tree \"in1\" shown in the screenshot is not removed during the timing repair process?", "How can I prevent the buffer tree `in1` from being used in the net `n2` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_61.png", "q_text": "How can I prevent the buffer tree `in1` from being used in the net `n2` as shown in the screenshot?", "pos_doc": "id:gate_resizing_4\n### Set Don't Use\n\nThe `set_dont_use` command removes library cells from consideration by\nthe `resizer` engine and the `CTS` engine. `lib_cells` is a list of cells returned by `get_lib_cells`\nor a list of cell names (`wildcards` allowed). For example, `DLY*` says do\nnot use cells with names that begin with `DLY` in all libraries.\n\n```tcl\nset_dont_use lib_cells \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_61.png", "source_images/gate_resizing/gate_resizing_61.png"], "neg_text": ["How can I ensure that the buffer tree \"in1\" shown in the screenshot is not removed during the timing repair process?", "How can I set the net `n2` to be \"Don't Touch\" in the OpenROAD tool?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_4"]}
{"q_img": "source_images/gate_resizing/gate_resizing_5.png", "q_text": "How can I use the `repair_design` command to address the slew violation shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_5.png"], "neg_text": ["How can I ensure that the `repair_timing` command does not skip buffer removal when fixing the slew violation shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_5.png", "q_text": "How can I ensure that the `repair_timing` command does not skip buffer removal when fixing the slew violation shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_5.png"], "neg_text": ["How can I use the `repair_design` command to address the slew violation shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_39.png", "q_text": "How can I use the `repair_timing` command to address setup violations after running `estimate_parasitics -placement` as shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_39.png"], "neg_text": ["How can I modify the script to set the resistance and capacitance for a specific layer instead of a wire?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_39.png", "q_text": "How can I modify the script to set the resistance and capacitance for a specific layer instead of a wire?", "pos_doc": "id:gate_resizing_2\n### Set Layer RC\n\nThe `set_layer_rc` command can be used to set the resistance and capacitance\nfor a layer or via. This is useful if these values are missing from the LEF file,\nor to override the values in the LEF.\n\n```tcl\nset_layer_rc \n    [-layer layer]\n    [-via via_layer]\n    [-resistance res]\n    [-capacitance cap]\n    [-corner corner]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Set layer name to modify. Note that the layer must be a routing layer. |\n| `-via` | Select via layer name. Note that via resistance is per cut/via, not area-based. |\n| `-resistance` | Resistance per unit length, same convention as `set_wire_rc`. |\n| `-capacitance` | Capacitance per unit length, same convention as `set_wire_rc`. |\n| `-corner` | Process corner to use. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_39.png"], "neg_text": ["How can I use the `repair_timing` command to address setup violations after running `estimate_parasitics -placement` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_2"]}
{"q_img": "source_images/gate_resizing/gate_resizing_59.png", "q_text": "How can I use the `repair_design` command to address the max slew violations after removing buffers b1 and b3 as shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_59.png"], "neg_text": ["How does the `set_dont_touch` command in the script prevent the instances `b1` from being modified during buffer removal?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_59.png", "q_text": "How does the `set_dont_touch` command in the script prevent the instances `b1` from being modified during buffer removal?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_59.png"], "neg_text": ["How can I use the `repair_design` command to address the max slew violations after removing buffers b1 and b3 as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_102.png", "q_text": "How can I use the `repair_timing` command to address potential setup and hold violations for the net `output0` shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_102.png"], "neg_text": ["How can I repair the tie fanout for the `hi_fanout` block shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_102.png", "q_text": "How can I repair the tie fanout for the `hi_fanout` block shown in the screenshot?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_102.png"], "neg_text": ["How can I use the `repair_timing` command to address potential setup and hold violations for the net `output0` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_3.png", "q_text": "How can I adjust the maximum wire length to minimize wire delay for the design shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_3.png", "source_images/gate_resizing/gate_resizing_3.png"], "neg_text": ["How can I specify a custom buffer cell when using the `buffer_ports` command as shown in the screenshot?", "How can I remove the 4 output buffers that were inserted, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_3.png", "q_text": "How can I specify a custom buffer cell when using the `buffer_ports` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_3.png", "source_images/gate_resizing/gate_resizing_3.png"], "neg_text": ["How can I adjust the maximum wire length to minimize wire delay for the design shown in the screenshot?", "How can I remove the 4 output buffers that were inserted, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_3.png", "q_text": "How can I remove the 4 output buffers that were inserted, as shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_3.png", "source_images/gate_resizing/gate_resizing_3.png"], "neg_text": ["How can I adjust the maximum wire length to minimize wire delay for the design shown in the screenshot?", "How can I specify a custom buffer cell when using the `buffer_ports` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_60.png", "q_text": "How can I ensure that only specific buffer instances are removed, as shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_60.png"], "neg_text": ["How can I add buffers to the input and output ports in the design, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_60.png", "q_text": "How can I add buffers to the input and output ports in the design, as shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_60.png"], "neg_text": ["How can I ensure that only specific buffer instances are removed, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_98.png", "q_text": "How can I insert buffers to handle the long wire shown in the net \"o[1669]\" in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_98.png"], "neg_text": ["How can I set the resistance and capacitance for the routed net `o[1669]` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_98.png", "q_text": "How can I set the resistance and capacitance for the routed net `o[1669]` shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_98.png"], "neg_text": ["How can I insert buffers to handle the long wire shown in the net \"o[1669]\" in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_53.png", "q_text": "How can I prevent the instance `r1` from being modified by resizer commands as shown in the screenshot?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_53.png"], "neg_text": ["How can I insert buffers in the clock net shown in the screenshot to reduce its length?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_53.png", "q_text": "How can I insert buffers in the clock net shown in the screenshot to reduce its length?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_53.png"], "neg_text": ["How can I prevent the instance `r1` from being modified by resizer commands as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_89.png", "q_text": "How can I use the `repair_tie_fanout` command to manage the high fanout net `net2` shown in the screenshot?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_89.png"], "neg_text": ["How can I use the `repair_tie_fanout` command to manage the fanout of the cell `r4` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_89.png", "q_text": "How can I use the `repair_tie_fanout` command to manage the fanout of the cell `r4` shown in the screenshot?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_89.png"], "neg_text": ["How can I use the `repair_tie_fanout` command to manage the high fanout net `net2` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_28.png", "q_text": "How can I estimate the parasitics for the net \"a1\" shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_28.png", "source_images/gate_resizing/gate_resizing_28.png"], "neg_text": ["How can I skip the buffer removal for the net \"a1\" as shown in the screenshot?", "How can I use the `repair_design` command to address potential max slew, max capacitance, and max fanout violations in the net `a1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_28.png", "q_text": "How can I skip the buffer removal for the net \"a1\" as shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_28.png", "source_images/gate_resizing/gate_resizing_28.png"], "neg_text": ["How can I estimate the parasitics for the net \"a1\" shown in the screenshot?", "How can I use the `repair_design` command to address potential max slew, max capacitance, and max fanout violations in the net `a1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_28.png", "q_text": "How can I use the `repair_design` command to address potential max slew, max capacitance, and max fanout violations in the net `a1` shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_28.png", "source_images/gate_resizing/gate_resizing_28.png"], "neg_text": ["How can I estimate the parasitics for the net \"a1\" shown in the screenshot?", "How can I skip the buffer removal for the net \"a1\" as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_75.png", "q_text": "How can I adjust the maximum wire length used in the `repair_design` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_75.png"], "neg_text": ["How can I remove all buffers from the design shown in the screenshot before running the `repair_design` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_75.png", "q_text": "How can I adjust the maximum wire length used in the `repair_design` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_75.png"], "neg_text": ["How can I remove all buffers from the design shown in the screenshot before running the `repair_design` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_75.png", "q_text": "How can I remove all buffers from the design shown in the screenshot before running the `repair_design` command?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_75.png", "source_images/gate_resizing/gate_resizing_75.png"], "neg_text": ["How can I adjust the maximum wire length used in the `repair_design` command as shown in the screenshot?", "How can I adjust the maximum wire length used in the `repair_design` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_14.png", "q_text": "How can I estimate the parasitics for the placed instance `u2` shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_14.png", "source_images/gate_resizing/gate_resizing_14.png"], "neg_text": ["How can I remove the buffer `u2` shown in the screenshot?", "How can I remove the buffer instance `u2` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_14.png", "q_text": "How can I remove the buffer `u2` shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_14.png"], "neg_text": ["How can I estimate the parasitics for the placed instance `u2` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_14.png", "q_text": "How can I remove the buffer instance `u2` shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_14.png"], "neg_text": ["How can I estimate the parasitics for the placed instance `u2` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_93.png", "q_text": "How can I insert buffers to manage the long wire for the net \"in1\" shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_93.png"], "neg_text": ["How can I add buffers to the high fanout net \"in1\" shown in the screenshot to manage its load?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_93.png", "q_text": "How can I add buffers to the high fanout net \"in1\" shown in the screenshot to manage its load?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_93.png"], "neg_text": ["How can I insert buffers to manage the long wire for the net \"in1\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_95.png", "q_text": "How can I prevent the resizer engine from using certain library cells when resizing instances, as shown in the screenshot?", "pos_doc": "id:gate_resizing_4\n### Set Don't Use\n\nThe `set_dont_use` command removes library cells from consideration by\nthe `resizer` engine and the `CTS` engine. `lib_cells` is a list of cells returned by `get_lib_cells`\nor a list of cell names (`wildcards` allowed). For example, `DLY*` says do\nnot use cells with names that begin with `DLY` in all libraries.\n\n```tcl\nset_dont_use lib_cells \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_95.png", "source_images/gate_resizing/gate_resizing_95.png"], "neg_text": ["How can I use the `repair_design` command to address the setup violations shown in the screenshot?", "How can I specify the buffer cell to be used when inserting buffers, as shown in the screenshot where 508 buffers were inserted?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_4"]}
{"q_img": "source_images/gate_resizing/gate_resizing_95.png", "q_text": "How can I use the `repair_design` command to address the setup violations shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_95.png", "source_images/gate_resizing/gate_resizing_95.png"], "neg_text": ["How can I prevent the resizer engine from using certain library cells when resizing instances, as shown in the screenshot?", "How can I specify the buffer cell to be used when inserting buffers, as shown in the screenshot where 508 buffers were inserted?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_95.png", "q_text": "How can I specify the buffer cell to be used when inserting buffers, as shown in the screenshot where 508 buffers were inserted?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_95.png", "source_images/gate_resizing/gate_resizing_95.png"], "neg_text": ["How can I prevent the resizer engine from using certain library cells when resizing instances, as shown in the screenshot?", "How can I use the `repair_design` command to address the setup violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_79.png", "q_text": "How can I manage the high fanout net `hi_fanout` shown in the screenshot?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_79.png"], "neg_text": ["How can I add a buffer to the input port of the instance tri649 shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_79.png", "q_text": "How can I add a buffer to the input port of the instance tri649 shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_79.png"], "neg_text": ["How can I manage the high fanout net `hi_fanout` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_36.png", "q_text": "How can I prevent the instance `_532_` from being modified by resizer commands as shown in the screenshot?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_36.png"], "neg_text": ["How can I ensure that the setup timing for the instance _532_ is repaired without causing hold violations?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_36.png", "q_text": "How can I ensure that the setup timing for the instance _532_ is repaired without causing hold violations?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_36.png"], "neg_text": ["How can I prevent the instance `_532_` from being modified by resizer commands as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_83.png", "q_text": "How can I use the `repair_tie_fanout` command to manage the high fanout instance shown in the screenshot?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_83.png"], "neg_text": ["How can I use the `repair_timing` command to address the high fanout issue shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_83.png", "q_text": "How can I use the `repair_timing` command to address the high fanout issue shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_83.png"], "neg_text": ["How can I use the `repair_tie_fanout` command to manage the high fanout instance shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_77.png", "q_text": "How can I prevent the net `n1` from being modified by resizer commands as shown in the screenshot?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_77.png", "source_images/gate_resizing/gate_resizing_77.png"], "neg_text": ["How can I remove the buffers associated with the net `n1` shown in the screenshot?", "How can I remove the buffers associated with the net \"n1\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_77.png", "q_text": "How can I remove the buffers associated with the net `n1` shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_77.png"], "neg_text": ["How can I prevent the net `n1` from being modified by resizer commands as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_77.png", "q_text": "How can I remove the buffers associated with the net \"n1\" shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_77.png"], "neg_text": ["How can I prevent the net `n1` from being modified by resizer commands as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_54.png", "q_text": "How can I use the `repair_design` command to address the high fanout issue observed in the `rdrv` cell in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_54.png", "source_images/gate_resizing/gate_resizing_54.png"], "neg_text": ["How can I optimize the high fanout net \"net0\" shown in the screenshot using the commands provided in the document?", "How can I add buffers to the high fanout net \"net0\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_54.png", "q_text": "How can I optimize the high fanout net \"net0\" shown in the screenshot using the commands provided in the document?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_54.png", "source_images/gate_resizing/gate_resizing_54.png"], "neg_text": ["How can I use the `repair_design` command to address the high fanout issue observed in the `rdrv` cell in the screenshot?", "How can I add buffers to the high fanout net \"net0\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_54.png", "q_text": "How can I add buffers to the high fanout net \"net0\" shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_54.png", "source_images/gate_resizing/gate_resizing_54.png"], "neg_text": ["How can I use the `repair_design` command to address the high fanout issue observed in the `rdrv` cell in the screenshot?", "How can I optimize the high fanout net \"net0\" shown in the screenshot using the commands provided in the document?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_46.png", "q_text": "How can I optimize the long net shown in the screenshot using the `repair_design` command?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_46.png"], "neg_text": ["How can I use the `repair_timing` command to address potential timing issues caused by the long net shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_46.png", "q_text": "How can I use the `repair_design` command to address the long wire issue shown in the screenshot?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_46.png"], "neg_text": ["How can I use the `repair_timing` command to address potential timing issues caused by the long net shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_46.png", "q_text": "How can I use the `repair_timing` command to address potential timing issues caused by the long net shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_46.png", "source_images/gate_resizing/gate_resizing_46.png"], "neg_text": ["How can I optimize the long net shown in the screenshot using the `repair_design` command?", "How can I use the `repair_design` command to address the long wire issue shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_11.png", "q_text": "How can I use the `repair_design` command to address the long wire issue shown in the layout view of the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_11.png"], "neg_text": ["How can I specify a custom buffer cell when using the `buffer_ports` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_11.png", "q_text": "How can I specify a custom buffer cell when using the `buffer_ports` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_11.png"], "neg_text": ["How can I use the `repair_design` command to address the long wire issue shown in the layout view of the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_29.png", "q_text": "How can I use the `repair_timing` command to address the timing issues caused by the long wire between \"in1\" and \"out1\" shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_29.png"], "neg_text": ["How can I use the `repair_design` command to address the long wire issue shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_29.png", "q_text": "How can I skip buffer removal when running the `repair_timing` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_29.png"], "neg_text": ["How can I use the `repair_design` command to address the long wire issue shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_29.png", "q_text": "How can I use the `repair_design` command to address the long wire issue shown in the screenshot?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_29.png", "source_images/gate_resizing/gate_resizing_29.png"], "neg_text": ["How can I use the `repair_timing` command to address the timing issues caused by the long wire between \"in1\" and \"out1\" shown in the screenshot?", "How can I skip buffer removal when running the `repair_timing` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_71.png", "q_text": "How can I use the `repair_timing` command to address the slew violations shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_71.png"], "neg_text": ["What is the purpose of using the `-placement` flag with the `estimate_parasitics` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_71.png", "q_text": "What is the purpose of using the `-placement` flag with the `estimate_parasitics` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_71.png"], "neg_text": ["How can I use the `repair_timing` command to address the slew violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_56.png", "q_text": "How can I set the `Dont Touch` attribute to `True` for the cell `u1` shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_56.png", "source_images/gate_resizing/gate_resizing_56.png"], "neg_text": ["How can I remove the buffer instance `u1` shown in the screenshot?", "How can I ensure that buffers are not removed during the timing repair process for the cell `u1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_56.png", "q_text": "How can I remove the buffer instance `u1` shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_56.png", "source_images/gate_resizing/gate_resizing_56.png"], "neg_text": ["How can I set the `Dont Touch` attribute to `True` for the cell `u1` shown in the screenshot?", "How can I ensure that buffers are not removed during the timing repair process for the cell `u1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_56.png", "q_text": "How can I ensure that buffers are not removed during the timing repair process for the cell `u1` shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_56.png", "source_images/gate_resizing/gate_resizing_56.png"], "neg_text": ["How can I set the `Dont Touch` attribute to `True` for the cell `u1` shown in the screenshot?", "How can I remove the buffer instance `u1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_65.png", "q_text": "How can I use the `repair_design` command to address the max capacitance violations shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_65.png"], "neg_text": ["What does the `-placement` flag do in the `estimate_parasitics` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_65.png", "q_text": "What does the `-placement` flag do in the `estimate_parasitics` command shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_65.png"], "neg_text": ["How can I use the `repair_design` command to address the max capacitance violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_90.png", "q_text": "How can I use the `repair_design` command to address the long wires shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_90.png"], "neg_text": ["How can I use the `repair_clock_nets` command to address the long wires shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_90.png", "q_text": "How can I use the `repair_design` command to address the long wires shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_90.png"], "neg_text": ["How can I use the `repair_clock_nets` command to address the long wires shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_90.png", "q_text": "How can I use the `repair_clock_nets` command to address the long wires shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_90.png", "source_images/gate_resizing/gate_resizing_90.png"], "neg_text": ["How can I use the `repair_design` command to address the long wires shown in the screenshot?", "How can I use the `repair_design` command to address the long wires shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_1.png", "q_text": "How can I specify a custom buffer cell when using the `buffer_ports` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_1.png", "source_images/gate_resizing/gate_resizing_1.png"], "neg_text": ["How can I adjust the maximum wire length for buffer insertion as shown in the screenshot?", "How can I remove the input and output buffers that were inserted in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_1.png", "q_text": "How can I adjust the maximum wire length for buffer insertion as shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_1.png", "source_images/gate_resizing/gate_resizing_1.png"], "neg_text": ["How can I specify a custom buffer cell when using the `buffer_ports` command as shown in the screenshot?", "How can I remove the input and output buffers that were inserted in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_1.png", "q_text": "How can I remove the input and output buffers that were inserted in the script shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_1.png", "source_images/gate_resizing/gate_resizing_1.png"], "neg_text": ["How can I specify a custom buffer cell when using the `buffer_ports` command as shown in the screenshot?", "How can I adjust the maximum wire length for buffer insertion as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_100.png", "q_text": "What is the purpose of skipping the `repair_design` command in the provided script?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_100.png"], "neg_text": ["How can I set the resistance and capacitance for a specific layer before running the `estimate_parasitics -placement` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_100.png", "q_text": "How can I set the resistance and capacitance for a specific layer before running the `estimate_parasitics -placement` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_2\n### Set Layer RC\n\nThe `set_layer_rc` command can be used to set the resistance and capacitance\nfor a layer or via. This is useful if these values are missing from the LEF file,\nor to override the values in the LEF.\n\n```tcl\nset_layer_rc \n    [-layer layer]\n    [-via via_layer]\n    [-resistance res]\n    [-capacitance cap]\n    [-corner corner]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | Set layer name to modify. Note that the layer must be a routing layer. |\n| `-via` | Select via layer name. Note that via resistance is per cut/via, not area-based. |\n| `-resistance` | Resistance per unit length, same convention as `set_wire_rc`. |\n| `-capacitance` | Capacitance per unit length, same convention as `set_wire_rc`. |\n| `-corner` | Process corner to use. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_100.png"], "neg_text": ["What is the purpose of skipping the `repair_design` command in the provided script?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_2"]}
{"q_img": "source_images/gate_resizing/gate_resizing_87.png", "q_text": "How can I use the `repair_clock_nets` command to address the long wire from the clock input pin to the clock tree root buffer shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_87.png", "source_images/gate_resizing/gate_resizing_87.png"], "neg_text": ["How can I ensure that the `repair_timing` command does not perform buffer removal while fixing the setup and hold violations in the design shown in the screenshot?", "How can I repair the clock inverters in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_87.png", "q_text": "How can I ensure that the `repair_timing` command does not perform buffer removal while fixing the setup and hold violations in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_87.png", "source_images/gate_resizing/gate_resizing_87.png"], "neg_text": ["How can I use the `repair_clock_nets` command to address the long wire from the clock input pin to the clock tree root buffer shown in the screenshot?", "How can I repair the clock inverters in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_87.png", "q_text": "How can I repair the clock inverters in the layout shown in the screenshot?", "pos_doc": "id:gate_resizing_15\n### Repair Clock Inverters\n\nThe repair_clock_inverters command replaces an inverter in the clock\ntree with multiple fanouts with one inverter per fanout.  This\nprevents the inverter from splitting up the clock tree seen by CTS.\nIt should be run before clock_tree_synthesis.\n\n```tcl\nrepair_clock_inverters\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_87.png", "source_images/gate_resizing/gate_resizing_87.png"], "neg_text": ["How can I use the `repair_clock_nets` command to address the long wire from the clock input pin to the clock tree root buffer shown in the screenshot?", "How can I ensure that the `repair_timing` command does not perform buffer removal while fixing the setup and hold violations in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_15"]}
{"q_img": "source_images/gate_resizing/gate_resizing_17.png", "q_text": "How can I use the `repair_design` command to address long wire issues in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_17.png"], "neg_text": ["How can I set the resistance and capacitance values for the clock nets in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_17.png", "q_text": "How can I use the `repair_design` command to address max slew violations in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_17.png"], "neg_text": ["How can I set the resistance and capacitance values for the clock nets in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_17.png", "q_text": "How can I set the resistance and capacitance values for the clock nets in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_17.png", "source_images/gate_resizing/gate_resizing_17.png"], "neg_text": ["How can I use the `repair_design` command to address long wire issues in the design shown in the screenshot?", "How can I use the `repair_design` command to address max slew violations in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_40.png", "q_text": "How can I use the `repair_design` command to address the timing issues shown in the screenshot?", "pos_doc": "id:gate_resizing_17\n# Gate Resizer\n## Example scripts\n\nA typical `resizer` command file (after a design and Liberty libraries have\nbeen read) is shown below.\n\n```\nread_sdc gcd.sdc\n\nset_wire_rc -layer metal2\n\nset_dont_use {CLKBUF_* AOI211_X1 OAI211_X1}\n\nbuffer_ports\nrepair_design -max_wire_length 100\nrepair_tie_fanout LOGIC0_X1/Z\nrepair_tie_fanout LOGIC1_X1/Z\n# clock tree synthesis...\nrepair_timing\n```\n\nNote that OpenSTA commands can be used to report timing metrics before\nor after resizing the design.\n\n```\nset_wire_rc -layer metal2\nreport_checks\nreport_tns\nreport_wns\nreport_checks\n\nrepair_design\n\nreport_checks\nreport_tns\nreport_wns\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_40.png", "source_images/gate_resizing/gate_resizing_40.png"], "neg_text": ["How can I remove the buffer `BUF_X1` shown in the timing report?", "How can I use the `repair_timing` command to address setup violations if the slack was not met in the timing report shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_17"]}
{"q_img": "source_images/gate_resizing/gate_resizing_40.png", "q_text": "How can I remove the buffer `BUF_X1` shown in the timing report?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_40.png", "source_images/gate_resizing/gate_resizing_40.png"], "neg_text": ["How can I use the `repair_design` command to address the timing issues shown in the screenshot?", "How can I use the `repair_timing` command to address setup violations if the slack was not met in the timing report shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_40.png", "q_text": "How can I use the `repair_timing` command to address setup violations if the slack was not met in the timing report shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_40.png", "source_images/gate_resizing/gate_resizing_40.png"], "neg_text": ["How can I use the `repair_design` command to address the timing issues shown in the screenshot?", "How can I remove the buffer `BUF_X1` shown in the timing report?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_21.png", "q_text": "How can I prevent the buffers created in the script from being modified by the resizer commands?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_21.png", "source_images/gate_resizing/gate_resizing_21.png"], "neg_text": ["How can I remove all buffers inserted by synthesis in the design shown in the screenshot?", "How can I add a buffer between the input and output ports in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_21.png", "q_text": "How can I remove all buffers inserted by synthesis in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_21.png", "source_images/gate_resizing/gate_resizing_21.png"], "neg_text": ["How can I prevent the buffers created in the script from being modified by the resizer commands?", "How can I add a buffer between the input and output ports in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_21.png", "q_text": "How can I add a buffer between the input and output ports in the script shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_21.png", "source_images/gate_resizing/gate_resizing_21.png"], "neg_text": ["How can I prevent the buffers created in the script from being modified by the resizer commands?", "How can I remove all buffers inserted by synthesis in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_6.png", "q_text": "How can I repair setup timing violations for the cell `r201` shown in the screenshot without performing buffer removal?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_6.png", "source_images/gate_resizing/gate_resizing_6.png"], "neg_text": ["How can I use the `repair_clock_nets` command to optimize the clock net `clk1` shown in the screenshot?", "How can I use the `repair_tie_fanout` command to manage the high fanout instance `r201` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_6.png", "q_text": "How can I use the `repair_clock_nets` command to optimize the clock net `clk1` shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_6.png", "source_images/gate_resizing/gate_resizing_6.png"], "neg_text": ["How can I repair setup timing violations for the cell `r201` shown in the screenshot without performing buffer removal?", "How can I use the `repair_tie_fanout` command to manage the high fanout instance `r201` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_6.png", "q_text": "How can I use the `repair_tie_fanout` command to manage the high fanout instance `r201` shown in the screenshot?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_6.png", "source_images/gate_resizing/gate_resizing_6.png"], "neg_text": ["How can I repair setup timing violations for the cell `r201` shown in the screenshot without performing buffer removal?", "How can I use the `repair_clock_nets` command to optimize the clock net `clk1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_38.png", "q_text": "How can I set the resistance and capacitance for the clock net shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_38.png", "source_images/gate_resizing/gate_resizing_38.png"], "neg_text": ["How can I use the `repair_timing` command to fix setup violations in the design shown in the screenshot?", "How can I use the `repair_design` command to address the long wires shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_38.png", "q_text": "How can I use the `repair_timing` command to fix setup violations in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_38.png", "source_images/gate_resizing/gate_resizing_38.png"], "neg_text": ["How can I set the resistance and capacitance for the clock net shown in the screenshot?", "How can I use the `repair_design` command to address the long wires shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_38.png", "q_text": "How can I use the `repair_design` command to address the long wires shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_38.png", "source_images/gate_resizing/gate_resizing_38.png"], "neg_text": ["How can I set the resistance and capacitance for the clock net shown in the screenshot?", "How can I use the `repair_timing` command to fix setup violations in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_45.png", "q_text": "How can I reverse the \"Dont Touch\" setting for the instance \"pad2\" shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_45.png"], "neg_text": ["How can I add a buffer to the output port of the pad shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_45.png", "q_text": "How can I add a buffer to the output port of the pad shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_45.png"], "neg_text": ["How can I reverse the \"Dont Touch\" setting for the instance \"pad2\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_44.png", "q_text": "How can I use the `repair_design` command to address the max capacitance violation shown in the screenshot after running `estimate_parasitics -placement`?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_44.png", "source_images/gate_resizing/gate_resizing_44.png"], "neg_text": ["What is the purpose of using the `set_wire_rc -layer metal3` command in the script shown in the screenshot?", "What does the `-placement` option do in the `estimate_parasitics` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_44.png", "q_text": "What is the purpose of using the `set_wire_rc -layer metal3` command in the script shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_44.png", "source_images/gate_resizing/gate_resizing_44.png"], "neg_text": ["How can I use the `repair_design` command to address the max capacitance violation shown in the screenshot after running `estimate_parasitics -placement`?", "What does the `-placement` option do in the `estimate_parasitics` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_44.png", "q_text": "What does the `-placement` option do in the `estimate_parasitics` command shown in the screenshot?", "pos_doc": "id:gate_resizing_3\n### Estimate Parasitics\n\nEstimate RC parasitics based on placed component pin locations. If there are\nno component locations, then no parasitics are added. The resistance and capacitance\nvalues are per distance unit of a routing wire. Use the `set_units` command to check\nunits or `set_cmd_units` to change units. The goal is to represent \"average\"\nrouting layer resistance and capacitance. If the set_wire_rc command is not\ncalled before resizing, then the default_wireload model specified in the first\nLiberty file read or with the SDC set_wire_load command is used to make parasitics.\n\nAfter the `global_route` command has been called, the global routing topology\nand layers can be used to estimate parasitics  with the `-global_routing`\nflag.\n\n```tcl\nestimate_parasitics\n    -placement|-global_routing\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-placement` or `-global_routing` | Either of these flags must be set. Parasitics are estimated based after placement stage versus after global routing stage. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_44.png", "source_images/gate_resizing/gate_resizing_44.png"], "neg_text": ["How can I use the `repair_design` command to address the max capacitance violation shown in the screenshot after running `estimate_parasitics -placement`?", "What is the purpose of using the `set_wire_rc -layer metal3` command in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_3"]}
{"q_img": "source_images/gate_resizing/gate_resizing_55.png", "q_text": "How can I insert buffers to manage the long wire from the clock input pin to the clock tree root buffer in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_55.png", "source_images/gate_resizing/gate_resizing_55.png"], "neg_text": ["How can I balance the row usage in the design shown in the screenshot?", "How can I report the area of the design components and utilization for the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_55.png", "q_text": "How can I balance the row usage in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_10\n### Balance Row Usage\n\nCommand description pending.\n\n```tcl\nbalance_row_usage\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_55.png", "source_images/gate_resizing/gate_resizing_55.png"], "neg_text": ["How can I insert buffers to manage the long wire from the clock input pin to the clock tree root buffer in the design shown in the screenshot?", "How can I report the area of the design components and utilization for the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_10"]}
{"q_img": "source_images/gate_resizing/gate_resizing_55.png", "q_text": "How can I report the area of the design components and utilization for the layout shown in the screenshot?", "pos_doc": "id:gate_resizing_16\n### Report Design Area\n\nThe `report_design_area` command reports the area of the design's components\nand the utilization.\n\n```tcl\nreport_design_area\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_55.png", "source_images/gate_resizing/gate_resizing_55.png"], "neg_text": ["How can I insert buffers to manage the long wire from the clock input pin to the clock tree root buffer in the design shown in the screenshot?", "How can I balance the row usage in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_16"]}
{"q_img": "source_images/gate_resizing/gate_resizing_82.png", "q_text": "How can I use the `buffer_ports` command to address the fanout violations shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_82.png", "source_images/gate_resizing/gate_resizing_82.png"], "neg_text": ["How can I use the `repair_clock_nets` command to address the fanout violations shown in the screenshot?", "How can I prevent the resizer from modifying the instances or nets shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_82.png", "q_text": "How can I use the `repair_clock_nets` command to address the fanout violations shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_82.png", "source_images/gate_resizing/gate_resizing_82.png"], "neg_text": ["How can I use the `buffer_ports` command to address the fanout violations shown in the screenshot?", "How can I prevent the resizer from modifying the instances or nets shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_82.png", "q_text": "How can I prevent the resizer from modifying the instances or nets shown in the screenshot?", "pos_doc": "id:gate_resizing_6\n### Set Don't Touch\n\nThe `set_dont_touch` command prevents the resizer commands from\nmodifying instances or nets.\n\n```tcl\nset_dont_touch instances_nets \n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_82.png", "source_images/gate_resizing/gate_resizing_82.png"], "neg_text": ["How can I use the `buffer_ports` command to address the fanout violations shown in the screenshot?", "How can I use the `repair_clock_nets` command to address the fanout violations shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_6"]}
{"q_img": "source_images/gate_resizing/gate_resizing_2.png", "q_text": "How can I remove the buffer instance `output3` shown in the screenshot?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_2.png", "source_images/gate_resizing/gate_resizing_2.png"], "neg_text": ["How can I skip the insertion of buffers during the timing repair process shown in the screenshot?", "How can I adjust the maximum wire length for the buffer `output3` shown in the screenshot using the `repair_design` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_2.png", "q_text": "How can I skip the insertion of buffers during the timing repair process shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_2.png", "source_images/gate_resizing/gate_resizing_2.png"], "neg_text": ["How can I remove the buffer instance `output3` shown in the screenshot?", "How can I adjust the maximum wire length for the buffer `output3` shown in the screenshot using the `repair_design` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_2.png", "q_text": "How can I adjust the maximum wire length for the buffer `output3` shown in the screenshot using the `repair_design` command?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_2.png", "source_images/gate_resizing/gate_resizing_2.png"], "neg_text": ["How can I remove the buffer instance `output3` shown in the screenshot?", "How can I skip the insertion of buffers during the timing repair process shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_69.png", "q_text": "How can I adjust the maximum wire length for clock net repair as shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_69.png"], "neg_text": ["How can I use the `repair_clock_inverters` command to address the issue shown in the screenshot where the clock net requires repair due to long wire length?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_69.png", "q_text": "How can I adjust the maximum wire length for the `repair_clock_nets` command shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_69.png"], "neg_text": ["How can I use the `repair_clock_inverters` command to address the issue shown in the screenshot where the clock net requires repair due to long wire length?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_69.png", "q_text": "How can I use the `repair_clock_inverters` command to address the issue shown in the screenshot where the clock net requires repair due to long wire length?", "pos_doc": "id:gate_resizing_15\n### Repair Clock Inverters\n\nThe repair_clock_inverters command replaces an inverter in the clock\ntree with multiple fanouts with one inverter per fanout.  This\nprevents the inverter from splitting up the clock tree seen by CTS.\nIt should be run before clock_tree_synthesis.\n\n```tcl\nrepair_clock_inverters\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_69.png", "source_images/gate_resizing/gate_resizing_69.png"], "neg_text": ["How can I adjust the maximum wire length for clock net repair as shown in the screenshot?", "How can I adjust the maximum wire length for the `repair_clock_nets` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_15"]}
{"q_img": "source_images/gate_resizing/gate_resizing_74.png", "q_text": "How can I set the resistance and capacitance values for the routed net `clk1` shown in the screenshot?", "pos_doc": "id:gate_resizing_1\n### Set Wire RC\n\nThe `set_wire_rc` command sets the resistance and capacitance used to estimate\ndelay of routing wires.  Separate values can be specified for clock and data\nnets with the `-signal` and `-clock` flags. Without either `-signal` or\n`-clock` the resistance and capacitance for clocks and data nets are set.\n\n```\n# Either run \nset_wire_rc -clock ... -signal ... -layer ...\n\n# Or\nset_wire_rc -resistance ... -capacitance ...\n```\n\n```tcl\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layers layers_list]\n\nor \nset_wire_rc\n    [-h_resistance res]\n    [-h_capacitance cap]\n    [-v_resistance res]\n    [-v_capacitance cap]\n\nor\nset_wire_rc \n    [-clock] \n    [-signal]\n    [-data]\n    [-corner corner]\n    [-layer layer_name]\nor \nset_wire_rc\n    [-resistance res]\n    [-capacitance cap]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-clock` | Enable setting of RC for clock nets. |\n| `-signal` | Enable setting of RC for signal nets. | \n| `-layers` | Use the LEF technology resistance and area/edge capacitance values for the layers. The values for each layers will be used for wires with the prefered layer direction, if 2 or more layers have the same prefered direction the avarege value is used for wires with that direction. This is used for a default width wire on the layer. |\n| `-layer` | Use the LEF technology resistance and area/edge capacitance values for the layer. This is used for a default width wire on the layer. |\n| `-resistance` | Resistance per unit length, units are from the first Liberty file read. |\n| `-capacitance` | Capacitance per unit length, units are from the first Liberty file read. |\n| `-h_resistance` | Resistance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-h_capacitance` | Capacitance per unit length for horizontal wires, units are from the first Liberty file read. |\n| `-v_resistance` | Resistance per unit length for vertical wires, units are from the first Liberty file read. |\n| `-v_capacitance` | Capacitance per unit length for vertical wires, units are from the first Liberty file read. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_74.png", "source_images/gate_resizing/gate_resizing_74.png"], "neg_text": ["How can I insert buffers on the `clk1` net to manage its high fanout as shown in the screenshot?", "How can I optimize the high fanout clock net `clk1` shown in the screenshot using the `repair_clock_inverters` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_1"]}
{"q_img": "source_images/gate_resizing/gate_resizing_74.png", "q_text": "How can I insert buffers on the `clk1` net to manage its high fanout as shown in the screenshot?", "pos_doc": "id:gate_resizing_14\n### Repair Clock Nets\n\nThe `clock_tree_synthesis` command inserts a clock tree in the design\nbut may leave a long wire from the clock input pin to the clock tree\nroot buffer.\n\nThe `repair_clock_nets` command inserts buffers in the\nwire from the clock input pin to the clock root buffer.\n\n```tcl\nrepair_clock_nets \n    [-max_wire_length max_wire_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_74.png", "source_images/gate_resizing/gate_resizing_74.png"], "neg_text": ["How can I set the resistance and capacitance values for the routed net `clk1` shown in the screenshot?", "How can I optimize the high fanout clock net `clk1` shown in the screenshot using the `repair_clock_inverters` command?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_14"]}
{"q_img": "source_images/gate_resizing/gate_resizing_74.png", "q_text": "How can I optimize the high fanout clock net `clk1` shown in the screenshot using the `repair_clock_inverters` command?", "pos_doc": "id:gate_resizing_15\n### Repair Clock Inverters\n\nThe repair_clock_inverters command replaces an inverter in the clock\ntree with multiple fanouts with one inverter per fanout.  This\nprevents the inverter from splitting up the clock tree seen by CTS.\nIt should be run before clock_tree_synthesis.\n\n```tcl\nrepair_clock_inverters\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_74.png", "source_images/gate_resizing/gate_resizing_74.png"], "neg_text": ["How can I set the resistance and capacitance values for the routed net `clk1` shown in the screenshot?", "How can I insert buffers on the `clk1` net to manage its high fanout as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_15"]}
{"q_img": "source_images/gate_resizing/gate_resizing_73.png", "q_text": "How can I use the `repair_tie_fanout` command to address the high fanout issue shown in the screenshot?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_73.png"], "neg_text": ["How can I use the `repair_design` command to address potential max fanout violations for the instance \"drvr\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_73.png", "q_text": "How can I use the `repair_design` command to address potential max fanout violations for the instance \"drvr\" shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_73.png"], "neg_text": ["How can I use the `repair_tie_fanout` command to address the high fanout issue shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_9.png", "q_text": "How can I reverse the `set_dont_touch` command on the buffers inserted in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_9.png", "source_images/gate_resizing/gate_resizing_9.png"], "neg_text": ["How can I specify a maximum utilization percentage when using the `buffer_ports` command as shown in the screenshot?", "How can I ensure that the tie high/low loads are properly connected to copies of the tie high/low cell in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/gate_resizing/gate_resizing_9.png", "q_text": "How can I specify a maximum utilization percentage when using the `buffer_ports` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_8\n### Buffer Ports\n\nThe `buffer_ports -inputs` command adds a buffer between the input and its\nloads.  The `buffer_ports -outputs` adds a buffer between the port driver\nand the output port. Inserting buffers on input and output ports makes\nthe block input capacitances and output drives independent of the block\ninternals.\n\n```tcl\nbuffer_ports \n    [-inputs] \n    [-outputs] \n    [-max_utilization util]\n    [-buffer_cell buf_cell]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-inputs`, `-outputs` | Insert a buffer between the input and load, output and load respectively. The default behavior is `-inputs` and `-outputs` set if neither is specified. |\n| `-max_utilization` | Defines the percentage of core area used. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_9.png", "source_images/gate_resizing/gate_resizing_9.png"], "neg_text": ["How can I reverse the `set_dont_touch` command on the buffers inserted in the design shown in the screenshot?", "How can I ensure that the tie high/low loads are properly connected to copies of the tie high/low cell in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_8"]}
{"q_img": "source_images/gate_resizing/gate_resizing_9.png", "q_text": "How can I ensure that the tie high/low loads are properly connected to copies of the tie high/low cell in the design shown in the screenshot?", "pos_doc": "id:gate_resizing_12\n### Repair Tie Fanout\n\nThe `repair_tie_fanout` command connects each tie high/low load to a copy\nof the tie high/low cell.\n\n```tcl\nrepair_tie_fanout \n    [-separation dist]\n    [-max_fanout fanout]\n    [-verbose]\n    lib_port\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-separation` | Tie high/low insts are separated from the load by this value (Liberty units, usually microns). |\n| `-verbose` | Enable verbose logging of repair progress. |\n| `lib_port` | Tie high/low port, which can be a library/cell/port name or object returned by `get_lib_pins`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_9.png", "source_images/gate_resizing/gate_resizing_9.png"], "neg_text": ["How can I reverse the `set_dont_touch` command on the buffers inserted in the design shown in the screenshot?", "How can I specify a maximum utilization percentage when using the `buffer_ports` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_12"]}
{"q_img": "source_images/gate_resizing/gate_resizing_22.png", "q_text": "How can I ensure that the `repair_timing` command in the screenshot does not skip buffer removal during the setup violation repair process?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_22.png"], "neg_text": ["How can I adjust the maximum wire length used in the `repair_design` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_22.png", "q_text": "How can I adjust the maximum wire length used in the `repair_design` command as shown in the screenshot?", "pos_doc": "id:gate_resizing_11\n### Repair Design\n\nThe `repair_design` command inserts buffers on nets to repair max slew, max\ncapacitance and max fanout violations, and on long wires to reduce RC delay in\nthe wire. It also resizes gates to normalize slews.  Use `estimate_parasitics\n-placement` before `repair_design` to estimate parasitics considered\nduring repair. Placement-based parasitics cannot accurately predict\nrouted parasitics, so a margin can be used to \"over-repair\" the design\nto compensate. \n\n```tcl\nrepair_design \n    [-max_wire_length max_length]\n    [-slew_margin slew_margin]\n    [-cap_margin cap_margin]\n    [-max_utilization util]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-max_wire_length` | Maximum length of wires (in microns), defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`. |\n| `-slew_margin` | Add a slew margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-cap_margin` | Add a capactitance margin. The default value is `0`, the allowed values are integers `[0, 100]`. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-verbose` | Enable verbose logging on progress of the repair. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_22.png"], "neg_text": ["How can I ensure that the `repair_timing` command in the screenshot does not skip buffer removal during the setup violation repair process?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_11"]}
{"q_img": "source_images/gate_resizing/gate_resizing_12.png", "q_text": "How can I remove the buffer instance `r1` shown in the screenshot using OpenROAD?", "pos_doc": "id:gate_resizing_9\n### Remove Buffers\n\nUse the `remove_buffers` command to remove buffers inserted by synthesis. This\nstep is recommended before using `repair_design` so that there is more flexibility\nin buffering nets.  If buffer instances are specified, only specified buffer instances\nwill be removed regardless of dont-touch or fixed cell.  Direct input port to output port\nfeedthrough buffers will not be removed.\nIf no buffer instances are specified, all buffers will be removed except those that are associated with\ndont-touch, fixed cell or direct input port to output port feedthrough buffering.\n\n```tcl\nremove_buffers\n    [ instances ]\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_12.png", "source_images/gate_resizing/gate_resizing_12.png"], "neg_text": ["How can I use the `repair_timing` command to address setup violations for the instance `r1` shown in the screenshot?", "How can I reverse the `Dont Touch` attribute for the instance `r1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_9"]}
{"q_img": "source_images/gate_resizing/gate_resizing_12.png", "q_text": "How can I use the `repair_timing` command to address setup violations for the instance `r1` shown in the screenshot?", "pos_doc": "id:gate_resizing_13\n### Repair Timing\n\nThe `repair_timing` command repairs setup and hold violations.  It\nshould be run after clock tree synthesis with propagated clocks.\nSetup repair is done before hold repair so that hold repair does not\ncause setup checks to fail.\n\nThe worst setup path is always repaired.  Next, violating paths to\nendpoints are repaired to reduced the total negative slack. \n\n```tcl\nrepair_timing \n    [-setup]\n    [-hold]\n    [-recover_power percent_of_paths_with_slack]\n    [-setup_margin setup_margin]\n    [-hold_margin hold_margin]\n    [-slack_margin slack_margin]\n    [-libraries libs]\n    [-allow_setup_violations]\n    [-skip_pin_swap]\n    [-skip_gate_cloning]\n    [-skip_buffering]\n    [-skip_buffer_removal]\n    [-repair_tns tns_end_percent]\n    [-max_passes passes]\n    [-max_utilization util]\n    [-max_buffer_percent buffer_percent]\n    [-verbose]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-setup` | Repair setup timing. |\n| `-hold` | Repair hold timing. |\n| `-recover_power` | Set the percentage of paths to recover power for. The default value is `0`, and the allowed values are floats `(0, 100]`. |\n| `-setup_margin` | Add additional setup slack margin. |\n| `-hold_margin` | Add additional hold slack margin. |\n| `-allow_setup_violations` | While repairing hold violations, buffers are not inserted that will cause setup violations unless `-allow_setup_violations` is specified. |\n| `-skip_pin_swap` | Flag to skip pin swap. The default is to perform pin swap transform during setup fixing. |\n| `-skip_gate_cloning` | Flag to skip gate cloning. The default is to perform gate cloning transform during setup fixing. |\n| `-skip_buffering` | Flag to skip rebuffering and load splitting. The default is to perform rebuffering and load splitting transforms during setup fixing. |\n| `-skip_buffer_removal` | Flag to skip buffer removal.  The default is to perform buffer removal transform during setup fixing. |\n| `-repair_tns` | Percentage of violating endpoints to repair (0-100). When `tns_end_percent` is zero, only the worst endpoint is repaired. When `tns_end_percent` is 100 (default), all violating endpoints are repaired. |\n| `-max_utilization` | Defines the percentage of core area used. |\n| `-max_buffer_percent` | Specify a maximum number of buffers to insert to repair hold violations as a percentage of the number of instances in the design. The default value is `20`, and the allowed values are integers `[0, 100]`. |\n| `-verbose` | Enable verbose logging of the repair progress. |\n\nUse`-recover_power` to specify the percent of paths with positive slack which\nwill be considered for gate resizing to save power. It is recommended that\nthis option be used with global routing based parasitics. \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_12.png", "source_images/gate_resizing/gate_resizing_12.png"], "neg_text": ["How can I remove the buffer instance `r1` shown in the screenshot using OpenROAD?", "How can I reverse the `Dont Touch` attribute for the instance `r1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_13"]}
{"q_img": "source_images/gate_resizing/gate_resizing_12.png", "q_text": "How can I reverse the `Dont Touch` attribute for the instance `r1` shown in the screenshot?", "pos_doc": "id:gate_resizing_7\n### Unset Don't Touch\n\nThe `unset_dont_touch` command reverse the `set_dont_touch` command.\n\n```tcl\nunset_dont_touch instances_nets\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/gate_resizing/gate_resizing_12.png", "source_images/gate_resizing/gate_resizing_12.png"], "neg_text": ["How can I remove the buffer instance `r1` shown in the screenshot using OpenROAD?", "How can I use the `repair_timing` command to address setup violations for the instance `r1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["gate_resizing_7"]}
{"q_img": "source_images/pin_placement/pin_placement_175.png", "q_text": "How can I modify the `set_io_pin_constraint` command to ensure that the pins `resp_val`, `resp_rdy`, and `req_rdy` are placed only on the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_175.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed very close to each other. How can I ensure that pins are placed with a larger minimum distance between them?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_175.png", "q_text": "How can I modify the `set_io_pin_constraint` command to ensure that the pins `req_msg[15]` and `req_msg[14]` are placed symmetrically on the vertical edges?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_175.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed very close to each other. How can I ensure that pins are placed with a larger minimum distance between them?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_175.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed very close to each other. How can I ensure that pins are placed with a larger minimum distance between them?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_175.png", "source_images/pin_placement/pin_placement_175.png"], "neg_text": ["How can I modify the `set_io_pin_constraint` command to ensure that the pins `resp_val`, `resp_rdy`, and `req_rdy` are placed only on the top edge of the die?", "How can I modify the `set_io_pin_constraint` command to ensure that the pins `req_msg[15]` and `req_msg[14]` are placed symmetrically on the vertical edges?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_11.png", "q_text": "How can I restrict the placement of the 54 pins created in my design to only the top and right edges of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_11.png", "source_images/pin_placement/pin_placement_11.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region inside the die area, as shown in the screenshot?", "How can I use the `define_pin_shape_pattern` command to ensure that the pins are placed only within a specific region inside the die area, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_11.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region inside the die area, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_11.png"], "neg_text": ["How can I restrict the placement of the 54 pins created in my design to only the top and right edges of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_11.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that the pins are placed only within a specific region inside the die area, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_11.png"], "neg_text": ["How can I restrict the placement of the 54 pins created in my design to only the top and right edges of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_202.png", "q_text": "When I use the `place_pin` command to place the `clk` pin at (40.02um, 0.40um) and the `resp_rdy` pin at (1.25um, 15.30um), I receive a warning that a macro is not placed. How can I ensure that the macro is placed correctly?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_202.png", "source_images/pin_placement/pin_placement_202.png"], "neg_text": ["How can I change the default minimum distance between IO pins from 2 tracks to 3 tracks using the `place_pins` command?", "How can I ensure that the pin `clk` is placed on the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_202.png", "q_text": "How can I change the default minimum distance between IO pins from 2 tracks to 3 tracks using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_202.png", "source_images/pin_placement/pin_placement_202.png"], "neg_text": ["When I use the `place_pin` command to place the `clk` pin at (40.02um, 0.40um) and the `resp_rdy` pin at (1.25um, 15.30um), I receive a warning that a macro is not placed. How can I ensure that the macro is placed correctly?", "How can I ensure that the pin `clk` is placed on the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_202.png", "q_text": "How can I ensure that the pin `clk` is placed on the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_202.png", "source_images/pin_placement/pin_placement_202.png"], "neg_text": ["When I use the `place_pin` command to place the `clk` pin at (40.02um, 0.40um) and the `resp_rdy` pin at (1.25um, 15.30um), I receive a warning that a macro is not placed. How can I ensure that the macro is placed correctly?", "How can I change the default minimum distance between IO pins from 2 tracks to 3 tracks using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_181.png", "q_text": "In the script, the `set_io_pin_constraint` command is used with the `-region left:*` option for the `clk` pin names. How can I modify the command to restrict the `clk` pins to the top edge of the die instead?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_181.png", "source_images/pin_placement/pin_placement_181.png"], "neg_text": ["When I run the `place_pins -hor_layer metal3 -ver_layer metal2` command, how can I ensure that no pins are placed on the right boundary of the die?", "In the screenshot, the `place_pins` command is used with `-hor_layer metal3` and `-ver_layer metal2`. How can I modify the command to avoid placing pins on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_181.png", "q_text": "When I run the `place_pins -hor_layer metal3 -ver_layer metal2` command, how can I ensure that no pins are placed on the right boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_181.png"], "neg_text": ["In the script, the `set_io_pin_constraint` command is used with the `-region left:*` option for the `clk` pin names. How can I modify the command to restrict the `clk` pins to the top edge of the die instead?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_181.png", "q_text": "In the screenshot, the `place_pins` command is used with `-hor_layer metal3` and `-ver_layer metal2`. How can I modify the command to avoid placing pins on the left boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_181.png"], "neg_text": ["In the script, the `set_io_pin_constraint` command is used with the `-region left:*` option for the `clk` pin names. How can I modify the command to restrict the `clk` pins to the top edge of the die instead?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_58.png", "q_text": "How can I use the `place_pin` command to ensure that the pin `req_msg[31]` is placed at the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_58.png"], "neg_text": ["How can I restrict the pin `req_msg[31]` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_58.png", "q_text": "How can I place the pin `req_msg[31]` at the location (82.71, 88.725) on the specified layer using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_58.png"], "neg_text": ["How can I restrict the pin `req_msg[31]` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_58.png", "q_text": "How can I restrict the pin `req_msg[31]` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_58.png", "source_images/pin_placement/pin_placement_58.png"], "neg_text": ["How can I use the `place_pin` command to ensure that the pin `req_msg[31]` is placed at the die boundary?", "How can I place the pin `req_msg[31]` at the location (82.71, 88.725) on the specified layer using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_149.png", "q_text": "How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_149.png"], "neg_text": ["How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_149.png", "q_text": "How can I modify the `place_pins` command to avoid placing pins within 10 microns of the corners of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_149.png"], "neg_text": ["How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_149.png", "q_text": "How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_149.png", "source_images/pin_placement/pin_placement_149.png"], "neg_text": ["How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?", "How can I modify the `place_pins` command to avoid placing pins within 10 microns of the corners of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_46.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins are placed too close to the corners of the die. How can I avoid placing pins within a certain distance from the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_46.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to place the pins of `req_msg` inside the die area instead of at the edges, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_46.png", "q_text": "How can I modify the `place_pins` command to avoid placing pins on the bottom boundary of the die, as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_46.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to place the pins of `req_msg` inside the die area instead of at the edges, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_46.png", "q_text": "How can I use the `define_pin_shape_pattern` command to place the pins of `req_msg` inside the die area instead of at the edges, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_46.png", "source_images/pin_placement/pin_placement_46.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins are placed too close to the corners of the die. How can I avoid placing pins within a certain distance from the corners?", "How can I modify the `place_pins` command to avoid placing pins on the bottom boundary of the die, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_124.png", "q_text": "How can I ensure that the pins for buffer40 are placed with a minimum distance of 5 microns from each other using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_124.png"], "neg_text": ["How can I place a pin named `buffer40` at the location (87.59, 12.515) with a size of (1.33, 0.455) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_124.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_124.png"], "neg_text": ["How can I place a pin named `buffer40` at the location (87.59, 12.515) with a size of (1.33, 0.455) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_124.png", "q_text": "How can I place a pin named `buffer40` at the location (87.59, 12.515) with a size of (1.33, 0.455) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_124.png", "source_images/pin_placement/pin_placement_124.png"], "neg_text": ["How can I ensure that the pins for buffer40 are placed with a minimum distance of 5 microns from each other using the `place_pins` command?", "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_102.png", "q_text": "How can I adjust the temperature parameter for the simulated annealing process when running the `place_pins` command with the `-annealing` option?", "pos_doc": "id:pin_placement_7\n### Set Simulated Annealing\n\nThe `set_simulated_annealing` command defines the parameters for simulated annealing pin placement.\n\n```tcl\nset_simulated_annealing\n    [-temperature temperature]\n    [-max_iterations iter]\n    [-perturb_per_iter perturbs]\n    [-alpha alpha]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-temperature` | Temperature parameter. The default value is `1.0`, and the allowed values are floats `[0, MAX_FLOAT]`. |\n| `-max_iterations` | The maximum number of iterations. The default value is `2000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-perturb_per_iter` | The number of perturbations per iteration. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-alpha` | The temperature decay factor. The default value is `0.985`, and the allowed values are floats `(0, 1]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_102.png"], "neg_text": ["In the screenshot, the `set_io_pin_constraint` command is used with the `-region left:*` and `-region right:*` options. How can I modify the command to restrict pins to the top edge of the die with a specific interval?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_7"]}
{"q_img": "source_images/pin_placement/pin_placement_102.png", "q_text": "How can I adjust the temperature decay factor for the simulated annealing process used in the `place_pins` command shown in the screenshot?", "pos_doc": "id:pin_placement_7\n### Set Simulated Annealing\n\nThe `set_simulated_annealing` command defines the parameters for simulated annealing pin placement.\n\n```tcl\nset_simulated_annealing\n    [-temperature temperature]\n    [-max_iterations iter]\n    [-perturb_per_iter perturbs]\n    [-alpha alpha]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-temperature` | Temperature parameter. The default value is `1.0`, and the allowed values are floats `[0, MAX_FLOAT]`. |\n| `-max_iterations` | The maximum number of iterations. The default value is `2000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-perturb_per_iter` | The number of perturbations per iteration. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-alpha` | The temperature decay factor. The default value is `0.985`, and the allowed values are floats `(0, 1]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_102.png"], "neg_text": ["In the screenshot, the `set_io_pin_constraint` command is used with the `-region left:*` and `-region right:*` options. How can I modify the command to restrict pins to the top edge of the die with a specific interval?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_7"]}
{"q_img": "source_images/pin_placement/pin_placement_102.png", "q_text": "In the screenshot, the `set_io_pin_constraint` command is used with the `-region left:*` and `-region right:*` options. How can I modify the command to restrict pins to the top edge of the die with a specific interval?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_102.png", "source_images/pin_placement/pin_placement_102.png"], "neg_text": ["How can I adjust the temperature parameter for the simulated annealing process when running the `place_pins` command with the `-annealing` option?", "How can I adjust the temperature decay factor for the simulated annealing process used in the `place_pins` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_174.png", "q_text": "How can I use the `place_pins` command to ensure that the pin `_758_/B` is not placed on the bottom boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_174.png"], "neg_text": ["How can I use the `place_pin` command to place a pin named `_758_/B` at the location (31.229, 76.953) on the `metal2` layer with a size of (0.13, 0.175) microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_174.png", "q_text": "How can I use the `place_pin` command to place a pin named `_758_/B` at the location (31.229, 76.953) on the `metal2` layer with a size of (0.13, 0.175) microns?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_174.png"], "neg_text": ["How can I use the `place_pins` command to ensure that the pin `_758_/B` is not placed on the bottom boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_40.png", "q_text": "How can I place a specific pin named `clk` at location {50 50} on metal layer `metal3` with a size of {1 1} microns using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_40.png", "source_images/pin_placement/pin_placement_40.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?", "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed very close to the corners of the die. How can I avoid placing pins within a certain distance from the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_40.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_40.png"], "neg_text": ["How can I place a specific pin named `clk` at location {50 50} on metal layer `metal3` with a size of {1 1} microns using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_40.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed very close to the corners of the die. How can I avoid placing pins within a certain distance from the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_40.png"], "neg_text": ["How can I place a specific pin named `clk` at location {50 50} on metal layer `metal3` with a size of {1 1} microns using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_13.png", "q_text": "How can I resolve the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[15] resp_msg[14] resp_rdy resp_val are assigned to multiple constraints\" when running the `place_pins` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_13.png", "source_images/pin_placement/pin_placement_13.png"], "neg_text": ["When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I get the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[14] resp_rdy resp_val are assigned to multiple constraints.\" How should I resolve this issue?", "When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I get the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[15] resp_msg[14] resp_rdy resp_val are assigned to multiple constraints.\" How can I resolve this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_13.png", "q_text": "When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I get the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[14] resp_rdy resp_val are assigned to multiple constraints.\" How should I resolve this issue?", "pos_doc": "id:pin_placement_11\n# Pin Placer\n## FAQs\n\nCheck out [GitHub discussion](https://github.com/The-OpenROAD-Project/OpenROAD/discussions/categories/q-a?discussions_q=category%3AQ%26A+ioplacer+in%3Atitle)\nabout this tool.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_13.png", "source_images/pin_placement/pin_placement_13.png"], "neg_text": ["How can I resolve the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[15] resp_msg[14] resp_rdy resp_val are assigned to multiple constraints\" when running the `place_pins` command?", "When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I get the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[15] resp_msg[14] resp_rdy resp_val are assigned to multiple constraints.\" How can I resolve this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_11"]}
{"q_img": "source_images/pin_placement/pin_placement_13.png", "q_text": "When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I get the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[15] resp_msg[14] resp_rdy resp_val are assigned to multiple constraints.\" How can I resolve this issue?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_13.png", "source_images/pin_placement/pin_placement_13.png"], "neg_text": ["How can I resolve the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[15] resp_msg[14] resp_rdy resp_val are assigned to multiple constraints\" when running the `place_pins` command?", "When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I get the error \"Pins req_msg[15] req_msg[14] req_rdy req_val resp_msg[14] resp_rdy resp_val are assigned to multiple constraints.\" How should I resolve this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_5.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed too close to each other. How can I ensure a minimum distance between pins using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_5.png", "source_images/pin_placement/pin_placement_5.png"], "neg_text": ["I used the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude bottom:*` command, but I noticed that some pins are still placed very close to the corners. How can I ensure that pins are not placed near the corners of the die?", "How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_5.png", "q_text": "I used the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude bottom:*` command, but I noticed that some pins are still placed very close to the corners. How can I ensure that pins are not placed near the corners of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_5.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed too close to each other. How can I ensure a minimum distance between pins using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_5.png", "q_text": "How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_5.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed too close to each other. How can I ensure a minimum distance between pins using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_100.png", "q_text": "After running the `place_pins -hor_layers metal2 -ver_layers metal3 -exclude bottom:*` command, I noticed that some pins are still placed very close to the corners of the die. How can I ensure that pins are not placed within a certain distance from the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_100.png"], "neg_text": ["How can I define a pin placement grid on the specified layer with a region that includes the bounding box coordinates (52.12, 11.9, 52.23, 12.075) shown for `buffer21`?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_100.png", "q_text": "How can I define a pin placement grid on the specified layer with a region that includes the bounding box coordinates (52.12, 11.9, 52.23, 12.075) shown for `buffer21`?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_100.png"], "neg_text": ["After running the `place_pins -hor_layers metal2 -ver_layers metal3 -exclude bottom:*` command, I noticed that some pins are still placed very close to the corners of the die. How can I ensure that pins are not placed within a certain distance from the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_108.png", "q_text": "In the provided script, the `place_pins` command is used with the `-annealing` option. How can I adjust the temperature and maximum iterations for the simulated annealing process?", "pos_doc": "id:pin_placement_7\n### Set Simulated Annealing\n\nThe `set_simulated_annealing` command defines the parameters for simulated annealing pin placement.\n\n```tcl\nset_simulated_annealing\n    [-temperature temperature]\n    [-max_iterations iter]\n    [-perturb_per_iter perturbs]\n    [-alpha alpha]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-temperature` | Temperature parameter. The default value is `1.0`, and the allowed values are floats `[0, MAX_FLOAT]`. |\n| `-max_iterations` | The maximum number of iterations. The default value is `2000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-perturb_per_iter` | The number of perturbations per iteration. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-alpha` | The temperature decay factor. The default value is `0.985`, and the allowed values are floats `(0, 1]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_108.png", "source_images/pin_placement/pin_placement_108.png"], "neg_text": ["In the provided script, the `set_io_pin_constraint` command is used with the `-group` and `-order` options for `group1` and `group2`. How can I modify the script to ensure that the pins in `group1` are placed only on the top edge of the die?", "When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, I notice that some pins are placed too close to each other. How can I ensure that pins are placed with a minimum distance between them?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_7"]}
{"q_img": "source_images/pin_placement/pin_placement_108.png", "q_text": "In the provided script, the `set_io_pin_constraint` command is used with the `-group` and `-order` options for `group1` and `group2`. How can I modify the script to ensure that the pins in `group1` are placed only on the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_108.png", "source_images/pin_placement/pin_placement_108.png"], "neg_text": ["In the provided script, the `place_pins` command is used with the `-annealing` option. How can I adjust the temperature and maximum iterations for the simulated annealing process?", "When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, I notice that some pins are placed too close to each other. How can I ensure that pins are placed with a minimum distance between them?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_108.png", "q_text": "When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, I notice that some pins are placed too close to each other. How can I ensure that pins are placed with a minimum distance between them?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_108.png", "source_images/pin_placement/pin_placement_108.png"], "neg_text": ["In the provided script, the `place_pins` command is used with the `-annealing` option. How can I adjust the temperature and maximum iterations for the simulated annealing process?", "In the provided script, the `set_io_pin_constraint` command is used with the `-group` and `-order` options for `group1` and `group2`. How can I modify the script to ensure that the pins in `group1` are placed only on the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_185.png", "q_text": "How can I modify the `place_pins` command to ensure that the pins in the `group_pins` list are placed in ascending x/y position?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_185.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -group_pins` command, I noticed that the pins are placed on all four boundaries of the die. How can I ensure that pins are not placed on the bottom boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_185.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -group_pins` command, I noticed that the pins are placed on all four boundaries of the die. How can I ensure that pins are not placed on the bottom boundary?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_185.png"], "neg_text": ["How can I modify the `place_pins` command to ensure that the pins in the `group_pins` list are placed in ascending x/y position?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_36.png", "q_text": "How can I use the `place_pins` command to ensure that no pins are placed on the bottom boundary of the die, similar to the pins shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_36.png"], "neg_text": ["How can I place the pin `req_msg[30]` at the location (20, 100) on the `metal2` layer with a size of (0.5, 0.5) microns using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_36.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins are placed too close to each other along the bottom boundary. How can I increase the minimum distance between the pins?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_36.png"], "neg_text": ["How can I place the pin `req_msg[30]` at the location (20, 100) on the `metal2` layer with a size of (0.5, 0.5) microns using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_36.png", "q_text": "How can I place the pin `req_msg[30]` at the location (20, 100) on the `metal2` layer with a size of (0.5, 0.5) microns using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_36.png", "source_images/pin_placement/pin_placement_36.png"], "neg_text": ["How can I use the `place_pins` command to ensure that no pins are placed on the bottom boundary of the die, similar to the pins shown in the screenshot?", "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins are placed too close to each other along the bottom boundary. How can I increase the minimum distance between the pins?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_178.png", "q_text": "When I run the `place_pin` command to place a specific pin, how can I ensure that the pin is snapped to the nearest routing track next to the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_178.png", "source_images/pin_placement/pin_placement_178.png"], "neg_text": ["After running the `place_pins` command, I see that the pins are successfully assigned to sections, but I want to ensure that no pins are placed within 10 microns of the corners. How can I achieve this?", "How can I use the `place_pins` command to ensure that the pin groups [resp_val resp_rdy req_rdy] and [req_msg[15] req_msg[14] resp_msg[15] resp_msg[14]] are placed together on the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_178.png", "q_text": "After running the `place_pins` command, I see that the pins are successfully assigned to sections, but I want to ensure that no pins are placed within 10 microns of the corners. How can I achieve this?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_178.png"], "neg_text": ["When I run the `place_pin` command to place a specific pin, how can I ensure that the pin is snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_178.png", "q_text": "How can I use the `place_pins` command to ensure that the pin groups [resp_val resp_rdy req_rdy] and [req_msg[15] req_msg[14] resp_msg[15] resp_msg[14]] are placed together on the die boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_178.png"], "neg_text": ["When I run the `place_pin` command to place a specific pin, how can I ensure that the pin is snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_106.png", "q_text": "How can I place a pin named `resp_msg[5]` at the location (88.205, 18.35) with a size of (0.45, 1.1) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_106.png"], "neg_text": ["How can I clear all previously defined constraints and pin shape patterns for the buffer instance `buffer47` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_106.png", "q_text": "How can I clear all previously defined constraints and pin shape patterns for the buffer instance `buffer47` shown in the screenshot?", "pos_doc": "id:pin_placement_3\n### Clear IO Pin Constraints\n\nThe `clear_io_pin_constraints` command clears all the previously-defined\nconstraints and pin shape patterns created with `set_io_pin_constraint` or\n`define_pin_shape_pattern`.\n\n```tcl\nclear_io_pin_constraints\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_106.png"], "neg_text": ["How can I place a pin named `resp_msg[5]` at the location (88.205, 18.35) with a size of (0.45, 1.1) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_3"]}
{"q_img": "source_images/pin_placement/pin_placement_87.png", "q_text": "After running the `place_pins` command, I see that 54 pins were created and placed, but I want to ensure that no pins are placed within 10 microns of the die corners. How can I achieve this?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_87.png"], "neg_text": ["How can I restrict the placement of the 54 pins created in my design to only the top and right edges of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_87.png", "q_text": "After running the `place_pins` command, I noticed that the number of I/O pins created is 54, but I want to ensure that no pins are placed within 10 microns of the corners of the die. How can I achieve this?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_87.png"], "neg_text": ["How can I restrict the placement of the 54 pins created in my design to only the top and right edges of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_87.png", "q_text": "How can I restrict the placement of the 54 pins created in my design to only the top and right edges of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_87.png", "source_images/pin_placement/pin_placement_87.png"], "neg_text": ["After running the `place_pins` command, I see that 54 pins were created and placed, but I want to ensure that no pins are placed within 10 microns of the die corners. How can I achieve this?", "After running the `place_pins` command, I noticed that the number of I/O pins created is 54, but I want to ensure that no pins are placed within 10 microns of the corners of the die. How can I achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_126.png", "q_text": "After running the `place_pins` command, I noticed that the pin group `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] ...]` was created. How can I ensure that these pins are placed together on the die boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_126.png", "source_images/pin_placement/pin_placement_126.png"], "neg_text": ["How can I restrict the pins in the pin group `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] ...]` to be placed only on the top edge of the die?", "How does the pin placement process in OpenROAD minimize net wirelengths, as indicated by the I/O nets HPWL value of 2487.34 um in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_126.png", "q_text": "How can I restrict the pins in the pin group `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] ...]` to be placed only on the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_126.png", "source_images/pin_placement/pin_placement_126.png"], "neg_text": ["After running the `place_pins` command, I noticed that the pin group `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] ...]` was created. How can I ensure that these pins are placed together on the die boundary?", "How does the pin placement process in OpenROAD minimize net wirelengths, as indicated by the I/O nets HPWL value of 2487.34 um in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_126.png", "q_text": "How does the pin placement process in OpenROAD minimize net wirelengths, as indicated by the I/O nets HPWL value of 2487.34 um in the screenshot?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_126.png", "source_images/pin_placement/pin_placement_126.png"], "neg_text": ["After running the `place_pins` command, I noticed that the pin group `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] ...]` was created. How can I ensure that these pins are placed together on the die boundary?", "How can I restrict the pins in the pin group `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] ...]` to be placed only on the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_111.png", "q_text": "After running the `place_pins` command, I noticed that all pins are placed along the left boundary of the die, as shown in the screenshot. How can I modify the command to distribute the pins more evenly across all boundaries?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_111.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to place pins only on the left edge of the die, similar to the pin placement shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_111.png", "q_text": "How can I modify the `place_pins` command to avoid placing pins on the left boundary of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_111.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to place pins only on the left edge of the die, similar to the pin placement shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_111.png", "q_text": "How can I use the `set_io_pin_constraint` command to place pins only on the left edge of the die, similar to the pin placement shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_111.png", "source_images/pin_placement/pin_placement_111.png"], "neg_text": ["After running the `place_pins` command, I noticed that all pins are placed along the left boundary of the die, as shown in the screenshot. How can I modify the command to distribute the pins more evenly across all boundaries?", "How can I modify the `place_pins` command to avoid placing pins on the left boundary of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_19.png", "q_text": "How can I place the \"clk\" pin at the top boundary of the die using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_19.png"], "neg_text": ["How can I restrict the \"clk\" pin to be placed only on the top boundary of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_19.png", "q_text": "How can I place the pin \"clk\" at the top boundary of the die using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_19.png"], "neg_text": ["How can I restrict the \"clk\" pin to be placed only on the top boundary of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_19.png", "q_text": "How can I restrict the \"clk\" pin to be placed only on the top boundary of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_19.png", "source_images/pin_placement/pin_placement_19.png"], "neg_text": ["How can I place the \"clk\" pin at the top boundary of the die using the `place_pin` command?", "How can I place the pin \"clk\" at the top boundary of the die using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_224.png", "q_text": "After running the `place_pins -hor_layer met3 -ver_layer met2` command, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_224.png"], "neg_text": ["After running the `place_pins -hor_layer met3 -ver_layer met2` command, I noticed that some pins are placed outside the desired region. How can I use the `set_io_pin_constraint` command to restrict pins to specific regions?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_224.png", "q_text": "After running the `place_pins -hor_layer met3 -ver_layer met2` command, I noticed that some pins are placed outside the desired region. How can I use the `set_io_pin_constraint` command to restrict pins to specific regions?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_224.png"], "neg_text": ["After running the `place_pins -hor_layer met3 -ver_layer met2` command, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_37.png", "q_text": "When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I notice that some pins are placed too close to the corners of the die. How can I adjust the command to avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_37.png"], "neg_text": ["When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I notice that some pins are placed too close to the die boundary. How can I ensure that pins are snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_37.png", "q_text": "In the script, the `place_pins` command is used with the options `-hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`. How can I modify the command to exclude pin placement on the left boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_37.png"], "neg_text": ["When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I notice that some pins are placed too close to the die boundary. How can I ensure that pins are snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_37.png", "q_text": "When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I notice that some pins are placed too close to the die boundary. How can I ensure that pins are snapped to the nearest routing track next to the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_37.png", "source_images/pin_placement/pin_placement_37.png"], "neg_text": ["When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I notice that some pins are placed too close to the corners of the die. How can I adjust the command to avoid placing pins near the corners?", "In the script, the `place_pins` command is used with the options `-hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`. How can I modify the command to exclude pin placement on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_88.png", "q_text": "In the script, the command `set_io_pin_constraint -direction INPUT -region bottom:*` is used. How can I modify this command to restrict input pins to the left edge of the die instead of the bottom?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_88.png"], "neg_text": ["How can I adjust the temperature decay factor for the simulated annealing process used in the `place_pins` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_88.png", "q_text": "How can I modify the `set_io_pin_constraint` command to restrict the placement of input pins to the left edge of the die instead of the bottom edge?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_88.png"], "neg_text": ["How can I adjust the temperature decay factor for the simulated annealing process used in the `place_pins` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_88.png", "q_text": "How can I adjust the temperature decay factor for the simulated annealing process used in the `place_pins` command shown in the screenshot?", "pos_doc": "id:pin_placement_7\n### Set Simulated Annealing\n\nThe `set_simulated_annealing` command defines the parameters for simulated annealing pin placement.\n\n```tcl\nset_simulated_annealing\n    [-temperature temperature]\n    [-max_iterations iter]\n    [-perturb_per_iter perturbs]\n    [-alpha alpha]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-temperature` | Temperature parameter. The default value is `1.0`, and the allowed values are floats `[0, MAX_FLOAT]`. |\n| `-max_iterations` | The maximum number of iterations. The default value is `2000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-perturb_per_iter` | The number of perturbations per iteration. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-alpha` | The temperature decay factor. The default value is `0.985`, and the allowed values are floats `(0, 1]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_88.png", "source_images/pin_placement/pin_placement_88.png"], "neg_text": ["In the script, the command `set_io_pin_constraint -direction INPUT -region bottom:*` is used. How can I modify this command to restrict input pins to the left edge of the die instead of the bottom?", "How can I modify the `set_io_pin_constraint` command to restrict the placement of input pins to the left edge of the die instead of the bottom edge?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_7"]}
{"q_img": "source_images/pin_placement/pin_placement_118.png", "q_text": "How can I restrict the pin `req_msg[27]` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_118.png"], "neg_text": ["How can I place the pin `req_msg[27]` at the location (55.35, 88.725) on the specified layer using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_118.png", "q_text": "How can I place the pin `req_msg[27]` at the location (55.35, 88.725) on the specified layer using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_118.png"], "neg_text": ["How can I restrict the pin `req_msg[27]` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_177.png", "q_text": "In the script, the command `set_io_pin_constraint -pin_names {resp_val resp_rdy req_rdy} -group -order` is used. How does the `-group` option affect the placement of these pins?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_177.png"], "neg_text": ["How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_177.png", "q_text": "How can I modify the `set_io_pin_constraint` command to restrict the pins `resp_val`, `resp_rdy`, and `req_rdy` to the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_177.png"], "neg_text": ["How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_177.png", "q_text": "How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_177.png", "source_images/pin_placement/pin_placement_177.png"], "neg_text": ["In the script, the command `set_io_pin_constraint -pin_names {resp_val resp_rdy req_rdy} -group -order` is used. How does the `-group` option affect the placement of these pins?", "How can I modify the `set_io_pin_constraint` command to restrict the pins `resp_val`, `resp_rdy`, and `req_rdy` to the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_39.png", "q_text": "How can I place the pin `req_msg[5]` at the location (87.65, 14.7) on the `metal2` layer using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_39.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins `req_msg[5]` and `resp_msg[12]` are placed on the right boundary of the die. How can I modify the command to avoid placing any pins on the right boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_39.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins `req_msg[5]` and `resp_msg[12]` are placed on the right boundary of the die. How can I modify the command to avoid placing any pins on the right boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_39.png"], "neg_text": ["How can I place the pin `req_msg[5]` at the location (87.65, 14.7) on the `metal2` layer using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_198.png", "q_text": "In the script, the `place_pins` command is used with the `-corner_avoidance 15` option. What does the `-corner_avoidance` option do, and how does it affect pin placement?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_198.png"], "neg_text": ["How can I modify the `set_io_pin_constraint` command to ensure that the pins in `group1` are placed only on the top edge but within a specific interval from 50 to 150 microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_198.png", "q_text": "How can I modify the `set_io_pin_constraint` command to ensure that the pins in `group1` are placed only on the top edge but within a specific interval from 50 to 150 microns?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_198.png"], "neg_text": ["In the script, the `place_pins` command is used with the `-corner_avoidance 15` option. What does the `-corner_avoidance` option do, and how does it affect pin placement?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_35.png", "q_text": "How can I restrict the placement of the pin `req_msg[28]` to the top boundary of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_35.png"], "neg_text": ["How can I place the pin `req_msg[28]` at a specific location with a defined size using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_35.png", "q_text": "How can I place the pin `req_msg[28]` at a specific location with a defined size using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_35.png"], "neg_text": ["How can I restrict the placement of the pin `req_msg[28]` to the top boundary of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_47.png", "q_text": "How can I use the `set_io_pin_constraint` command to prevent the pins `req_msg[0]` to `req_msg[20]` from being placed on the bottom boundary of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_47.png"], "neg_text": ["How can I place the pin `req_msg[14]` at a specific location (e.g., {30 10}) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_47.png", "q_text": "How can I place the pin `req_msg[14]` at a specific location (e.g., {30 10}) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_47.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to prevent the pins `req_msg[0]` to `req_msg[20]` from being placed on the bottom boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_103.png", "q_text": "How can I restrict the pin `req_msg[10]` to be placed only on the left edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_103.png"], "neg_text": ["When I run the `place_pins -hor_layers metal3 -ver_layers metal2` command, I notice that the net `req_msg[10]` is not routed correctly. How can I ensure that the pins are placed with a minimum distance of 10 microns between them to avoid routing issues?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_103.png", "q_text": "When I run the `place_pins -hor_layers metal3 -ver_layers metal2` command, I notice that the net `req_msg[10]` is not routed correctly. How can I ensure that the pins are placed with a minimum distance of 10 microns between them to avoid routing issues?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_103.png"], "neg_text": ["How can I restrict the pin `req_msg[10]` to be placed only on the left edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_152.png", "q_text": "After running the `place_pins` command with `-hor_layers metal3` and `-ver_layers metal2`, I noticed that some pins are overlapping. How can I prevent pin overlaps using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_152.png"], "neg_text": ["When I use the `place_pins` command with the `-group_pins` option, how can I ensure that the grouped pins are placed with a minimum distance of 0.12 microns between them?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_152.png", "q_text": "When I use the `place_pins` command with the `-group_pins` option, how can I ensure that the grouped pins are placed with a minimum distance of 0.12 microns between them?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_152.png"], "neg_text": ["After running the `place_pins` command with `-hor_layers metal3` and `-ver_layers metal2`, I noticed that some pins are overlapping. How can I prevent pin overlaps using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_119.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region of the die, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_119.png"], "neg_text": ["How can I ensure that pins are not placed within 10 microns of the corners when using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_119.png", "q_text": "How can I ensure that pins are not placed within 10 microns of the corners when using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_119.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region of the die, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_101.png", "q_text": "How can I adjust the pin placement grid to ensure that pins are only placed within a specific region inside the die area, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_101.png"], "neg_text": ["How can I restrict the pins to be placed only on the top and right edges of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_101.png", "q_text": "How can I restrict the pins to be placed only on the top and right edges of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_101.png"], "neg_text": ["How can I adjust the pin placement grid to ensure that pins are only placed within a specific region inside the die area, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_114.png", "q_text": "When I run `place_pins -hor_layers metal2 -ver_layers metal3 -corner_avoidance 0 -min_distance 0.12 -annealing -random`, I noticed that some pins are placed too close to the corners. How can I avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_114.png"], "neg_text": ["When I use the `set_io_pin_constraint -mirrored_pins` command as shown in the screenshot, how can I ensure that the pins are placed symmetrically on the vertical edges of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_114.png", "q_text": "When I use the `set_io_pin_constraint -mirrored_pins` command as shown in the screenshot, how can I ensure that the pins are placed symmetrically on the vertical edges of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_114.png"], "neg_text": ["When I run `place_pins -hor_layers metal2 -ver_layers metal3 -corner_avoidance 0 -min_distance 0.12 -annealing -random`, I noticed that some pins are placed too close to the corners. How can I avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_154.png", "q_text": "After running the `place_pins` command, I noticed that the pins are placed along the top boundary of the die. How can I modify the command to avoid placing any pins on the top boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_154.png"], "neg_text": ["How can I place the pin `buffer3/VSS` at the location (44.27, 12.23) with a size of (1.33, 0.455) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_154.png", "q_text": "How can I place the pin `buffer3/VSS` at the location (44.27, 12.23) with a size of (1.33, 0.455) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_154.png"], "neg_text": ["After running the `place_pins` command, I noticed that the pins are placed along the top boundary of the die. How can I modify the command to avoid placing any pins on the top boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_121.png", "q_text": "How can I restrict the placement of the pin `req_msg[28]` to the left boundary of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_121.png"], "neg_text": ["How can I define a pin placement grid for the net `req_msg[28]` to ensure the pins are placed within the die area and not just at the edges?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_121.png", "q_text": "How can I define a pin placement grid for the net `req_msg[28]` to ensure the pins are placed within the die area and not just at the edges?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_121.png"], "neg_text": ["How can I restrict the placement of the pin `req_msg[28]` to the left boundary of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_210.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 3 -min_distance_in_tracks` command, I noticed that some pins are placed too close to each other. How can I ensure a larger minimum distance between the pins?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_210.png"], "neg_text": ["After running the `place_pins` command with `-corner_avoidance 0`, I noticed that some pins are placed very close to the corners of the die. How can I adjust the command to avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_210.png", "q_text": "After running the `place_pins` command with `-corner_avoidance 0`, I noticed that some pins are placed very close to the corners of the die. How can I adjust the command to avoid placing pins near the corners?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_210.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 3 -min_distance_in_tracks` command, I noticed that some pins are placed too close to each other. How can I ensure a larger minimum distance between the pins?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_134.png", "q_text": "How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die, as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_134.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to restrict the pins to only the top and left boundaries of the die, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_134.png", "q_text": "How can I use the `set_io_pin_constraint` command to restrict the pins to only the top and left boundaries of the die, as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_134.png"], "neg_text": ["How can I modify the `place_pins` command to ensure that no pins are placed on the left boundary of the die, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_1.png", "q_text": "How can I modify the `place_pins` command to avoid placing pins on the left boundary of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_1.png"], "neg_text": ["How can I adjust the distance between the pins in the x-direction on the grid shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_1.png", "q_text": "How can I adjust the distance between the pins in the x-direction on the grid shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_1.png"], "neg_text": ["How can I modify the `place_pins` command to avoid placing pins on the left boundary of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_171.png", "q_text": "In the provided script, the `place_pins` command is used with the `-group_pins` option to group certain pins together. How can I ensure that the grouped pins are placed with a minimum distance of 0.24 microns between them?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_171.png"], "neg_text": ["In the screenshot, the `set_io_pin_constraint` command is used with the `-region bottom:*` option. How can I modify this command to restrict the pins to a specific interval on the bottom edge instead of the entire edge?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_171.png", "q_text": "In the screenshot, the `set_io_pin_constraint` command is used with the `-region bottom:*` option. How can I modify this command to restrict the pins to a specific interval on the bottom edge instead of the entire edge?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_171.png"], "neg_text": ["In the provided script, the `place_pins` command is used with the `-group_pins` option to group certain pins together. How can I ensure that the grouped pins are placed with a minimum distance of 0.24 microns between them?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_209.png", "q_text": "How can I place a pin named `resp_val` at location (88.205, 26.75) on layer `metal2` with a size of (11.925, 1.1) microns using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_209.png"], "neg_text": ["After running the `place_pins -hor_layers metal2 -ver_layers metal3` command, I noticed that the pin `resp_val` is placed too close to the corner of the die. How can I adjust the placement to avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_209.png", "q_text": "After running the `place_pins -hor_layers metal2 -ver_layers metal3` command, I noticed that the pin `resp_val` is placed too close to the corner of the die. How can I adjust the placement to avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_209.png"], "neg_text": ["How can I place a pin named `resp_val` at location (88.205, 26.75) on layer `metal2` with a size of (11.925, 1.1) microns using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_221.png", "q_text": "How can I place the pin `resp_msg[10]` at the location (100.06, 0.735) on the metal2 layer using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_221.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to restrict the placement of the pin `resp_msg[10]` to the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_221.png", "q_text": "How can I use the `set_io_pin_constraint` command to restrict the placement of the pin `resp_msg[10]` to the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_221.png"], "neg_text": ["How can I place the pin `resp_msg[10]` at the location (100.06, 0.735) on the metal2 layer using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_143.png", "q_text": "How can I restrict the `req_msg` pins to be placed only on the left boundary of the die instead of the bottom boundary?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_143.png"], "neg_text": ["How can I use the `place_pins` command to ensure that the pins `req_msg[20]`, `req_msg[14]`, `req_msg[11]`, and `req_msg[26]` are not placed on the bottom boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_143.png", "q_text": "How can I use the `place_pins` command to ensure that the pins `req_msg[20]`, `req_msg[14]`, `req_msg[11]`, and `req_msg[26]` are not placed on the bottom boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_143.png"], "neg_text": ["How can I restrict the `req_msg` pins to be placed only on the left boundary of the die instead of the bottom boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_155.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region inside the die area, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_155.png"], "neg_text": ["How can I restrict the pins to only the left and right boundaries of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_155.png", "q_text": "How can I restrict the pins to only the left and right boundaries of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_155.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region inside the die area, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_53.png", "q_text": "After running the command `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.36`, I noticed that some pins are not placed on the specified metal layers. How can I ensure that all pins are placed on the correct layers?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_53.png"], "neg_text": ["In the script, the `place_pins` command is used with `-hor_layers metal3` and `-ver_layers metal2`. How can I modify the command to ensure that no pins are placed on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_53.png", "q_text": "In the script, the `place_pins` command is used with `-hor_layers metal3` and `-ver_layers metal2`. How can I modify the command to ensure that no pins are placed on the left boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_53.png"], "neg_text": ["After running the command `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.36`, I noticed that some pins are not placed on the specified metal layers. How can I ensure that all pins are placed on the correct layers?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_211.png", "q_text": "After running the `place_pins` command, I noticed that the number of slots per section is set to 200. How can I change the number of slots per section?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_211.png"], "neg_text": ["How can I restrict the placement of pins to the top and right edges of the die, given the pin placement results shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_211.png", "q_text": "How can I restrict the placement of pins to the top and right edges of the die, given the pin placement results shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_211.png"], "neg_text": ["After running the `place_pins` command, I noticed that the number of slots per section is set to 200. How can I change the number of slots per section?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_193.png", "q_text": "How can I restrict the placement of pins to only the top and left edges of the die, given that I have 400 pins created as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_193.png"], "neg_text": ["After running the `place_pins` command, I see that 400 pins were successfully assigned to sections, but I want to ensure that no pins are placed within 10 microns of the corners. How can I achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_193.png", "q_text": "After running the `place_pins` command, I see that 400 pins were successfully assigned to sections, but I want to ensure that no pins are placed within 10 microns of the corners. How can I achieve this?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_193.png"], "neg_text": ["How can I restrict the placement of pins to only the top and left edges of the die, given that I have 400 pins created as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_151.png", "q_text": "How can I use the `place_pins` command to ensure that no pins are placed on the left boundary of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_151.png"], "neg_text": ["How can I ensure that the pin `resp_val` is placed exactly at the die boundary using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_151.png", "q_text": "How can I ensure that the pin `resp_val` is placed exactly at the die boundary using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_151.png"], "neg_text": ["How can I use the `place_pins` command to ensure that no pins are placed on the left boundary of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_136.png", "q_text": "How can I use the `define_pin_shape_pattern` command to place pins within the die area instead of just on the boundary, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_136.png"], "neg_text": ["In the command `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude top:* -exclude bottom:*`, how can I modify it to also exclude the left edge from 0 to 50 microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_136.png", "q_text": "In the command `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude top:* -exclude bottom:*`, how can I modify it to also exclude the left edge from 0 to 50 microns?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_136.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to place pins within the die area instead of just on the boundary, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_9.png", "q_text": "How can I place a specific pin named `clk` at the location (53.58, 44.8) with a size of (3.23, 1.4) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_9.png"], "neg_text": ["How can I restrict the placement of the pin named `CK` to the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_9.png", "q_text": "How can I restrict the placement of the pin named `CK` to the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_9.png"], "neg_text": ["How can I place a specific pin named `clk` at the location (53.58, 44.8) with a size of (3.23, 1.4) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_74.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal4 -annealing` command, I noticed that some pins are placed very close to each other. How can I ensure that there is a minimum spacing between the pins?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_74.png"], "neg_text": ["When I use the `place_pins -hor_layers metal3 -ver_layers metal4 -annealing` command, how can I ensure that no pins are placed within 10 microns of the corners of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_74.png", "q_text": "When I use the `place_pins -hor_layers metal3 -ver_layers metal4 -annealing` command, how can I ensure that no pins are placed within 10 microns of the corners of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_74.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal4 -annealing` command, I noticed that some pins are placed very close to each other. How can I ensure that there is a minimum spacing between the pins?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_127.png", "q_text": "How can I ensure that the pins `req_msg[0]` to `req_msg[10]` are not placed on the bottom boundary of the die when using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_127.png"], "neg_text": ["When I use the `place_pin` command to place the pins `req_msg[0]` to `req_msg[10]` at the bottom boundary, they are not aligned properly. How can I ensure they are placed correctly along the bottom boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_127.png", "q_text": "When I use the `place_pin` command to place the pins `req_msg[0]` to `req_msg[10]` at the bottom boundary, they are not aligned properly. How can I ensure they are placed correctly along the bottom boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_127.png"], "neg_text": ["How can I ensure that the pins `req_msg[0]` to `req_msg[10]` are not placed on the bottom boundary of the die when using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_191.png", "q_text": "How can I place the pin named `D` of the instance `_858_` at the coordinates (27.17, 53.2) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_191.png"], "neg_text": ["How can I use the `place_pins` command to ensure that no pins are placed on the left boundary of the die for the standard cell \"DFF_X1\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_191.png", "q_text": "How can I use the `place_pins` command to ensure that no pins are placed on the left boundary of the die for the standard cell \"DFF_X1\" shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_191.png"], "neg_text": ["How can I place the pin named `D` of the instance `_858_` at the coordinates (27.17, 53.2) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_92.png", "q_text": "How can I adjust the temperature decay factor for the simulated annealing process used in the `place_pins` command?", "pos_doc": "id:pin_placement_7\n### Set Simulated Annealing\n\nThe `set_simulated_annealing` command defines the parameters for simulated annealing pin placement.\n\n```tcl\nset_simulated_annealing\n    [-temperature temperature]\n    [-max_iterations iter]\n    [-perturb_per_iter perturbs]\n    [-alpha alpha]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-temperature` | Temperature parameter. The default value is `1.0`, and the allowed values are floats `[0, MAX_FLOAT]`. |\n| `-max_iterations` | The maximum number of iterations. The default value is `2000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-perturb_per_iter` | The number of perturbations per iteration. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-alpha` | The temperature decay factor. The default value is `0.985`, and the allowed values are floats `(0, 1]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_92.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, I noticed that some pins are placed too close to the corners. How can I modify the command to ensure pins are not placed within 10 microns of the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_7"]}
{"q_img": "source_images/pin_placement/pin_placement_92.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, I noticed that some pins are placed too close to the corners. How can I modify the command to ensure pins are not placed within 10 microns of the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_92.png"], "neg_text": ["How can I adjust the temperature decay factor for the simulated annealing process used in the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_123.png", "q_text": "After running the `place_pins` command, I noticed that the I/O nets HPWL is 5091.84 um. How can I reduce the HPWL by adjusting the pin placement?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_123.png"], "neg_text": ["How can I restrict the placement of the I/O pins to a specific region on the die, as shown in the log output where 54 I/O pins are created?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_123.png", "q_text": "How can I restrict the placement of the I/O pins to a specific region on the die, as shown in the log output where 54 I/O pins are created?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_123.png"], "neg_text": ["After running the `place_pins` command, I noticed that the I/O nets HPWL is 5091.84 um. How can I reduce the HPWL by adjusting the pin placement?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_163.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region of the die area as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_163.png"], "neg_text": ["When I use the `place_pin` command to place a pin at a specific location, how can I ensure that the pin is snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_163.png", "q_text": "When I use the `place_pin` command to place a pin at a specific location, how can I ensure that the pin is snapped to the nearest routing track next to the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_163.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region of the die area as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_172.png", "q_text": "After running the `place_pins` command, I see that the pins are successfully assigned to sections, but I want to ensure that no pins are placed within 10 microns of the corners of the die. How can I achieve this?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_172.png"], "neg_text": ["According to the log, the number of I/O nets HPWL is 2430.76 um. How does the pin placement process in OpenROAD minimize net wirelengths?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_172.png", "q_text": "According to the log, the number of I/O nets HPWL is 2430.76 um. How does the pin placement process in OpenROAD minimize net wirelengths?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_172.png"], "neg_text": ["After running the `place_pins` command, I see that the pins are successfully assigned to sections, but I want to ensure that no pins are placed within 10 microns of the corners of the die. How can I achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_80.png", "q_text": "How can I restrict the pin `resp_msg[4]` to be placed only on the left edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_80.png"], "neg_text": ["How can I place the pin `resp_msg[4]` at the location (13.345, 0) with a size of (0.45, 12.45) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_80.png", "q_text": "How can I place the pin `resp_msg[4]` at the location (13.345, 0) with a size of (0.45, 12.45) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_80.png"], "neg_text": ["How can I restrict the pin `resp_msg[4]` to be placed only on the left edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_133.png", "q_text": "How can I modify the `set_io_pin_constraint` command to restrict input pins to only the left half of the top boundary?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_133.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the die boundary. How can I ensure that pins are placed with a specific distance from the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_133.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the die boundary. How can I ensure that pins are placed with a specific distance from the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_133.png"], "neg_text": ["How can I modify the `set_io_pin_constraint` command to restrict input pins to only the left half of the top boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_26.png", "q_text": "After running the `place_pin` command, I see that the number of I/O pins with sinks is 54, but I want to ensure that no pins are placed outside the die boundary. How can I achieve this?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_26.png"], "neg_text": ["How does the pin placement process ensure that the net wirelength is minimized, as indicated by the HPWL value in the log?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_26.png", "q_text": "How does the pin placement process ensure that the net wirelength is minimized, as indicated by the HPWL value in the log?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_26.png"], "neg_text": ["After running the `place_pin` command, I see that the number of I/O pins with sinks is 54, but I want to ensure that no pins are placed outside the die boundary. How can I achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_219.png", "q_text": "When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude top:* -exclude bottom:*` command, how does the pin placement minimize net wirelengths?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_219.png"], "neg_text": ["How can I define a pin placement grid on metal3 with a step size of 10 microns in both x and y directions, and ensure that pins are not placed within 5 microns of existing routing obstructions?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_219.png", "q_text": "How can I define a pin placement grid on metal3 with a step size of 10 microns in both x and y directions, and ensure that pins are not placed within 5 microns of existing routing obstructions?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_219.png"], "neg_text": ["When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude top:* -exclude bottom:*` command, how does the pin placement minimize net wirelengths?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_222.png", "q_text": "When I run the `place_pins -hor_layers metal3 -ver_layers metal2` command, I get the error `[ERROR PPL-0019] Design without pins.` How can I resolve this issue?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_222.png"], "neg_text": ["How can I clear all previously defined pin constraints and pin shape patterns before running the `place_pins` command to avoid the `[ERROR PPL-0019] Design without pins` error?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_222.png", "q_text": "How can I clear all previously defined pin constraints and pin shape patterns before running the `place_pins` command to avoid the `[ERROR PPL-0019] Design without pins` error?", "pos_doc": "id:pin_placement_3\n### Clear IO Pin Constraints\n\nThe `clear_io_pin_constraints` command clears all the previously-defined\nconstraints and pin shape patterns created with `set_io_pin_constraint` or\n`define_pin_shape_pattern`.\n\n```tcl\nclear_io_pin_constraints\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_222.png"], "neg_text": ["When I run the `place_pins -hor_layers metal3 -ver_layers metal2` command, I get the error `[ERROR PPL-0019] Design without pins.` How can I resolve this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_3"]}
{"q_img": "source_images/pin_placement/pin_placement_89.png", "q_text": "How can I place a pin named \"buffer40\" at the coordinates (87.59, 12.6) with a size of (1.33, 1.4) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_89.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the buffers, as shown in the screenshot. How can I ensure a minimum distance between the pins and the buffers?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_89.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the buffers, as shown in the screenshot. How can I ensure a minimum distance between the pins and the buffers?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_89.png"], "neg_text": ["How can I place a pin named \"buffer40\" at the coordinates (87.59, 12.6) with a size of (1.33, 1.4) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_215.png", "q_text": "How can I use the `define_pin_shape_pattern` command to place the pins `req_msg[15]`, `req_msg[8]`, and `req_msg[30]` within the die area instead of on the top boundary?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_215.png"], "neg_text": ["How can I adjust the length of the pins `req_msg[15]`, `req_msg[8]`, and `req_msg[30]` shown in the screenshot using the `set_pin_length` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_215.png", "q_text": "How can I adjust the length of the pins `req_msg[15]`, `req_msg[8]`, and `req_msg[30]` shown in the screenshot using the `set_pin_length` command?", "pos_doc": "id:pin_placement_4\n### Set Pin Length\n\nThe `set_pin_length` command defines the length of all vertical and horizontal\npins.\n\n```tcl\nset_pin_length \n    [-hor_length h_length]\n    [-ver_length v_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_length` | The length (in microns) of the horizontal pins. |\n| `-ver_length` | The length (in microns) of the vertical pins. |\n\nThe default length of the pins is the minimum length necessary to respect the\nminimum area defined in the routing layer they were placed. The width of the\npins is the minimum width defined in the routing layer.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_215.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to place the pins `req_msg[15]`, `req_msg[8]`, and `req_msg[30]` within the die area instead of on the top boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_4"]}
{"q_img": "source_images/pin_placement/pin_placement_66.png", "q_text": "How can I restrict the pins to be placed only on the top and right boundaries of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_66.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed within the die area. How can I ensure that all pins are placed only on the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_66.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed within the die area. How can I ensure that all pins are placed only on the die boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_66.png"], "neg_text": ["How can I restrict the pins to be placed only on the top and right boundaries of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_113.png", "q_text": "How can I ensure that the pins in the pin group `[pin0 pin1 pin2 pin3 pin4 ...]` are placed together on the die boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_113.png"], "neg_text": ["After running the pin placement process, I noticed that the I/O nets HPWL is 17114.00 um. How can I minimize the net wirelengths during pin placement?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_113.png", "q_text": "After running the pin placement process, I noticed that the I/O nets HPWL is 17114.00 um. How can I minimize the net wirelengths during pin placement?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_113.png"], "neg_text": ["How can I ensure that the pins in the pin group `[pin0 pin1 pin2 pin3 pin4 ...]` are placed together on the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_3.png", "q_text": "When I use the `place_pin` command to place a pin at the bottom left corner of the die, it overlaps with the routing tracks. How can I ensure that the pin is placed without overlapping the routing tracks?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_3.png"], "neg_text": ["How can I define a pin placement grid on metal layer 3 with a step size of 5 microns in both x and y directions, and ensure that the pins avoid existing routing obstructions by 2 microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_3.png", "q_text": "How can I define a pin placement grid on metal layer 3 with a step size of 5 microns in both x and y directions, and ensure that the pins avoid existing routing obstructions by 2 microns?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_3.png"], "neg_text": ["When I use the `place_pin` command to place a pin at the bottom left corner of the die, it overlaps with the routing tracks. How can I ensure that the pin is placed without overlapping the routing tracks?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_204.png", "q_text": "When I run the `place_pin -pin_name clk -layer met4 -location {40 30} -force_to_die_boundary` command, the pin is not placed at the specified location. How can I ensure the pin is placed correctly?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_204.png"], "neg_text": ["When I run `place_pins -hor_layer met3 -ver_layer met2 -random`, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_204.png", "q_text": "When I run `place_pins -hor_layer met3 -ver_layer met2 -random`, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_204.png"], "neg_text": ["When I run the `place_pin -pin_name clk -layer met4 -location {40 30} -force_to_die_boundary` command, the pin is not placed at the specified location. How can I ensure the pin is placed correctly?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_197.png", "q_text": "When I use the `place_pin` command to place a pin at location {27.17, 53.2} on the layer `metal2`, I notice that the pin is not aligned with the die boundary. How can I ensure that the pin is snapped to the nearest routing track next to the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_197.png"], "neg_text": ["How can I restrict the pins to only the left and right boundaries of the die, avoiding the top and bottom boundaries, using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_197.png", "q_text": "How can I restrict the pins to only the left and right boundaries of the die, avoiding the top and bottom boundaries, using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_197.png"], "neg_text": ["When I use the `place_pin` command to place a pin at location {27.17, 53.2} on the layer `metal2`, I notice that the pin is not aligned with the die boundary. How can I ensure that the pin is snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_57.png", "q_text": "When I run the `place_pin` command, I get the error \"List of pins must have an even number of pins.\" How can I resolve this issue?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_57.png"], "neg_text": ["When I run the `set_io_pin_constraint -mirrored_pins` command, I get the error `[ERROR PPL-0081] List of pins must have an even number of pins.` How can I resolve this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_57.png", "q_text": "When I run the `set_io_pin_constraint -mirrored_pins` command, I get the error `[ERROR PPL-0081] List of pins must have an even number of pins.` How can I resolve this issue?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_57.png"], "neg_text": ["When I run the `place_pin` command, I get the error \"List of pins must have an even number of pins.\" How can I resolve this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_120.png", "q_text": "How can I adjust the temperature parameter for the simulated annealing process when running the `place_pins -annealing` command?", "pos_doc": "id:pin_placement_7\n### Set Simulated Annealing\n\nThe `set_simulated_annealing` command defines the parameters for simulated annealing pin placement.\n\n```tcl\nset_simulated_annealing\n    [-temperature temperature]\n    [-max_iterations iter]\n    [-perturb_per_iter perturbs]\n    [-alpha alpha]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-temperature` | Temperature parameter. The default value is `1.0`, and the allowed values are floats `[0, MAX_FLOAT]`. |\n| `-max_iterations` | The maximum number of iterations. The default value is `2000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-perturb_per_iter` | The number of perturbations per iteration. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-alpha` | The temperature decay factor. The default value is `0.985`, and the allowed values are floats `(0, 1]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_120.png"], "neg_text": ["How can I modify the `set_io_pin_constraint` command to ensure that the pins listed in `-pin_names` are placed only on the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_7"]}
{"q_img": "source_images/pin_placement/pin_placement_120.png", "q_text": "How can I modify the `set_io_pin_constraint` command to ensure that the pins listed in `-pin_names` are placed only on the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_120.png"], "neg_text": ["How can I adjust the temperature parameter for the simulated annealing process when running the `place_pins -annealing` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_159.png", "q_text": "When I run the `place_pins -hor_layer metal3 -ver_layer metal2 -corner_avoidance 0 -min_distance 0.6 -group_pins {req_msg[10] req_msg[11] req_msg[12] req_msg[13] req_msg[14] req_msg[15] req_msg[16] req_msg[17] req_msg[18] req_msg[19] req_msg[20] req_msg[21] req_msg[22] req_msg[23] req_msg[0] req_msg[1]}` command, how can I ensure that no pins are placed on the top boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_159.png"], "neg_text": ["In the provided script, the `set_io_pin_constraint` command is used to set constraints for various pins on different edges of the die. How can I ensure that the pins are placed symmetrically on the vertical edges using the `-mirrored_pins` option?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_159.png", "q_text": "In the provided script, the `set_io_pin_constraint` command is used to set constraints for various pins on different edges of the die. How can I ensure that the pins are placed symmetrically on the vertical edges using the `-mirrored_pins` option?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_159.png"], "neg_text": ["When I run the `place_pins -hor_layer metal3 -ver_layer metal2 -corner_avoidance 0 -min_distance 0.6 -group_pins {req_msg[10] req_msg[11] req_msg[12] req_msg[13] req_msg[14] req_msg[15] req_msg[16] req_msg[17] req_msg[18] req_msg[19] req_msg[20] req_msg[21] req_msg[22] req_msg[23] req_msg[0] req_msg[1]}` command, how can I ensure that no pins are placed on the top boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_69.png", "q_text": "How can I use the `place_pins` command to ensure that no pins are placed within 10 microns of the corners of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_69.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to restrict the placement of the pin `req_msg[20]` to the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_69.png", "q_text": "How can I use the `set_io_pin_constraint` command to restrict the placement of the pin `req_msg[20]` to the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_69.png"], "neg_text": ["How can I use the `place_pins` command to ensure that no pins are placed within 10 microns of the corners of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_128.png", "q_text": "I used the `place_pin` command to place pins along the die boundary, but some pins are not aligned correctly. How can I ensure that the pins are snapped to the nearest routing track next to the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_128.png"], "neg_text": ["How can I restrict the pins to be placed only on the left and right edges of the die boundary as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_128.png", "q_text": "How can I restrict the pins to be placed only on the left and right edges of the die boundary as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_128.png"], "neg_text": ["I used the `place_pin` command to place pins along the die boundary, but some pins are not aligned correctly. How can I ensure that the pins are snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_45.png", "q_text": "After running the `place_pins` command, I see that 54 I/O pins were successfully assigned to sections, but I want to ensure that no pins are placed within 20 microns of the corners. How can I achieve this?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_45.png"], "neg_text": ["How can I restrict the placement of pins to the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_45.png", "q_text": "How can I restrict the placement of pins to the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_45.png"], "neg_text": ["After running the `place_pins` command, I see that 54 I/O pins were successfully assigned to sections, but I want to ensure that no pins are placed within 20 microns of the corners. How can I achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_41.png", "q_text": "In the screenshot, the command `set_io_pin_constraint -region bottom:* -group -order -pin_names {resp_msg[0] resp_msg[1] clk resp_val resp_rdy resp_msg[10]}` is used. How can I modify this command to restrict the pins to the top edge instead of the bottom edge?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_41.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are not placed as expected. How can I ensure that individual pins are placed correctly before running the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_41.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are not placed as expected. How can I ensure that individual pins are placed correctly before running the `place_pins` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_41.png"], "neg_text": ["In the screenshot, the command `set_io_pin_constraint -region bottom:* -group -order -pin_names {resp_msg[0] resp_msg[1] clk resp_val resp_rdy resp_msg[10]}` is used. How can I modify this command to restrict the pins to the top edge instead of the bottom edge?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_33.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are not placed on the boundary of the die. What could be the reason for this issue?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_33.png"], "neg_text": ["In the screenshot, the command `set_io_pin_constraint -pin_names {resp_msg[3] resp_msg[2] resp_msg[14] req_val} -region top:0-18` is used. How can I modify this command to ensure that the pins are placed symmetrically on the top and bottom edges?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_33.png", "q_text": "In the screenshot, the command `set_io_pin_constraint -pin_names {resp_msg[3] resp_msg[2] resp_msg[14] req_val} -region top:0-18` is used. How can I modify this command to ensure that the pins are placed symmetrically on the top and bottom edges?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_33.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are not placed on the boundary of the die. What could be the reason for this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_15.png", "q_text": "How can I ensure that pins are not placed within 20 microns of the corners when using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_15.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region inside the die area, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_15.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region inside the die area, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_15.png"], "neg_text": ["How can I ensure that pins are not placed within 20 microns of the corners when using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_153.png", "q_text": "After running the `place_pins` command, I see in the log that the number of I/O pins without a sink is 0. What could be the reason for this, and how can I ensure that all I/O pins have sinks?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_153.png"], "neg_text": ["After running the `place_pin` command, I noticed that all pins are placed correctly except for one pin that is not aligned with the die boundary. How can I ensure that this pin is snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_153.png", "q_text": "After running the `place_pin` command, I noticed that all pins are placed correctly except for one pin that is not aligned with the die boundary. How can I ensure that this pin is snapped to the nearest routing track next to the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_153.png"], "neg_text": ["After running the `place_pins` command, I see in the log that the number of I/O pins without a sink is 0. What could be the reason for this, and how can I ensure that all I/O pins have sinks?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_203.png", "q_text": "How can I adjust the length of the pin `resp_rdy` shown in the screenshot using the `set_pin_length` command?", "pos_doc": "id:pin_placement_4\n### Set Pin Length\n\nThe `set_pin_length` command defines the length of all vertical and horizontal\npins.\n\n```tcl\nset_pin_length \n    [-hor_length h_length]\n    [-ver_length v_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_length` | The length (in microns) of the horizontal pins. |\n| `-ver_length` | The length (in microns) of the vertical pins. |\n\nThe default length of the pins is the minimum length necessary to respect the\nminimum area defined in the routing layer they were placed. The width of the\npins is the minimum width defined in the routing layer.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_203.png"], "neg_text": ["After running the `place_pins` command, I noticed that the pin `resp_rdy` is placed on the right boundary of the die. How can I modify the command to exclude the right boundary from pin placement?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_4"]}
{"q_img": "source_images/pin_placement/pin_placement_203.png", "q_text": "After running the `place_pins` command, I noticed that the pin `resp_rdy` is placed on the right boundary of the die. How can I modify the command to exclude the right boundary from pin placement?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_203.png"], "neg_text": ["How can I adjust the length of the pin `resp_rdy` shown in the screenshot using the `set_pin_length` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_125.png", "q_text": "When I use the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, how can I debug the simulated annealing process?", "pos_doc": "id:pin_placement_8\n### Simulated Annealing Debug Mode\n\nThe `simulated_annealing_debug` command allows you to debug the simulated\nannealing pin placement with a pause mode.\n\n```tcl\nsimulated_annealing_debug\n    [-iters_between_paintings iters]\n    [-no_pause_mode no_pause_mode]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |                                    \n| `-iters_between_paintings` | Determines the number of iterations between updates. |\n| `-no_pause_mode` | Print solver state every second based on `iters_between_paintings`. |\n                                    \n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_125.png"], "neg_text": ["In the script, the command `set_io_pin_constraint -region bottom:* -group -order -pin_names {req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] req_msg[5] req_msg[6] req_msg[7] req_msg[8] req_msg[9]}` is used. How can I modify this command to restrict the pins to the bottom edge but only within the interval from 10 to 50 microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_8"]}
{"q_img": "source_images/pin_placement/pin_placement_125.png", "q_text": "In the script, the command `set_io_pin_constraint -region bottom:* -group -order -pin_names {req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] req_msg[5] req_msg[6] req_msg[7] req_msg[8] req_msg[9]}` is used. How can I modify this command to restrict the pins to the bottom edge but only within the interval from 10 to 50 microns?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_125.png"], "neg_text": ["When I use the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, how can I debug the simulated annealing process?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_138.png", "q_text": "How can I restrict the placement of the pin `buffer40/Z` to the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_138.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that the pins for buffer40 are placed only within a specific region of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_138.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that the pins for buffer40 are placed only within a specific region of the die?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_138.png"], "neg_text": ["How can I restrict the placement of the pin `buffer40/Z` to the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_182.png", "q_text": "How can I restrict the placement of pins in the `clk` pin group to the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_182.png"], "neg_text": ["According to the log, 103 pins were created and successfully assigned to sections. How does the pin placement process minimize net wirelengths as described in the document?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_182.png", "q_text": "According to the log, 103 pins were created and successfully assigned to sections. How does the pin placement process minimize net wirelengths as described in the document?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_182.png"], "neg_text": ["How can I restrict the placement of pins in the `clk` pin group to the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_130.png", "q_text": "How can I clear all previously defined constraints and pin shape patterns for the pins shown in the layout?", "pos_doc": "id:pin_placement_3\n### Clear IO Pin Constraints\n\nThe `clear_io_pin_constraints` command clears all the previously-defined\nconstraints and pin shape patterns created with `set_io_pin_constraint` or\n`define_pin_shape_pattern`.\n\n```tcl\nclear_io_pin_constraints\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_130.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that the pins are placed within a specific region of the die, such as avoiding the top edge where the pins are currently placed?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_3"]}
{"q_img": "source_images/pin_placement/pin_placement_130.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that the pins are placed within a specific region of the die, such as avoiding the top edge where the pins are currently placed?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_130.png"], "neg_text": ["How can I clear all previously defined constraints and pin shape patterns for the pins shown in the layout?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_144.png", "q_text": "How can I use the `set_io_pin_constraint` command to prevent the pin `req_msg[20]` from being placed on the bottom boundary of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_144.png"], "neg_text": ["How can I use the `place_pins` command to ensure that the pin `req_msg[20]` is not placed on the bottom boundary of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_144.png", "q_text": "How can I use the `place_pins` command to ensure that the pin `req_msg[20]` is not placed on the bottom boundary of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_144.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to prevent the pin `req_msg[20]` from being placed on the bottom boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_158.png", "q_text": "How can I use the `set_io_pin_constraint` command to ensure that the pins of the instance `_805_` are placed only on the left and right edges of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_158.png"], "neg_text": ["In the layout shown, if I want to place the pins such that they avoid the corners of the die by 10 microns, which option should I use with the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_158.png", "q_text": "In the layout shown, if I want to place the pins such that they avoid the corners of the die by 10 microns, which option should I use with the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_158.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to ensure that the pins of the instance `_805_` are placed only on the left and right edges of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_162.png", "q_text": "How can I place a pin named `_716_/B2` at the location (40.0765, 58.3865) on layer `metal2` with a size of (0.125, 0.175) microns using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_162.png"], "neg_text": ["How can I restrict the pin `_716_` to be placed only on the left edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_162.png", "q_text": "How can I restrict the pin `_716_` to be placed only on the left edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_162.png"], "neg_text": ["How can I place a pin named `_716_/B2` at the location (40.0765, 58.3865) on layer `metal2` with a size of (0.125, 0.175) microns using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_183.png", "q_text": "How can I restrict the placement of the pin `bus[92]` to the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_183.png"], "neg_text": ["How can I place the pin `bus[92]` at the location (28.295 µm, 100.3 µm) with a size of (0.57 µm, 1.4 µm) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_183.png", "q_text": "How can I place the pin `bus[92]` at the location (28.295 µm, 100.3 µm) with a size of (0.57 µm, 1.4 µm) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_183.png"], "neg_text": ["How can I restrict the placement of the pin `bus[92]` to the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_97.png", "q_text": "In the script, the `place_pins` command is used with the `-annealing` option. How can I adjust the temperature parameter for the simulated annealing process?", "pos_doc": "id:pin_placement_7\n### Set Simulated Annealing\n\nThe `set_simulated_annealing` command defines the parameters for simulated annealing pin placement.\n\n```tcl\nset_simulated_annealing\n    [-temperature temperature]\n    [-max_iterations iter]\n    [-perturb_per_iter perturbs]\n    [-alpha alpha]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-temperature` | Temperature parameter. The default value is `1.0`, and the allowed values are floats `[0, MAX_FLOAT]`. |\n| `-max_iterations` | The maximum number of iterations. The default value is `2000`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-perturb_per_iter` | The number of perturbations per iteration. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-alpha` | The temperature decay factor. The default value is `0.985`, and the allowed values are floats `(0, 1]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_97.png"], "neg_text": ["In the screenshot, the command `set_io_pin_constraint -region bottom:* -group -order -pin_names {req_msg[0] req_msg[1] req_msg[2] ...}` is used. How can I modify this command to restrict the pins to only the left half of the bottom edge?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_7"]}
{"q_img": "source_images/pin_placement/pin_placement_97.png", "q_text": "In the screenshot, the command `set_io_pin_constraint -region bottom:* -group -order -pin_names {req_msg[0] req_msg[1] req_msg[2] ...}` is used. How can I modify this command to restrict the pins to only the left half of the bottom edge?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_97.png"], "neg_text": ["In the script, the `place_pins` command is used with the `-annealing` option. How can I adjust the temperature parameter for the simulated annealing process?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_179.png", "q_text": "How can I use the `place_pin` command to place a pin named `_890_` at the location (53.07, 15.66) on the `metal2` layer with a size of (0.07, 0.525)?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_179.png"], "neg_text": ["How can I restrict the pin `_890_/QN` to be placed only on the left edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_179.png", "q_text": "How can I restrict the pin `_890_/QN` to be placed only on the left edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_179.png"], "neg_text": ["How can I use the `place_pin` command to place a pin named `_890_` at the location (53.07, 15.66) on the `metal2` layer with a size of (0.07, 0.525)?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_34.png", "q_text": "How can I ensure that the pins are not placed within 10 microns of the corners when using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_34.png"], "neg_text": ["How can I define a pin placement grid inside the die area similar to the one shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_34.png", "q_text": "How can I define a pin placement grid inside the die area similar to the one shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_34.png"], "neg_text": ["How can I ensure that the pins are not placed within 10 microns of the corners when using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_12.png", "q_text": "After running the `place_pins` command, I noticed that some pins are placed too close to each other on the die boundary, as shown in the screenshot. How can I ensure a minimum distance between the pins?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_12.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to ensure that the `req_msg` pins are only placed on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_12.png", "q_text": "How can I use the `set_io_pin_constraint` command to ensure that the `req_msg` pins are only placed on the left boundary of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_12.png"], "neg_text": ["After running the `place_pins` command, I noticed that some pins are placed too close to each other on the die boundary, as shown in the screenshot. How can I ensure a minimum distance between the pins?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_107.png", "q_text": "How can I ensure that a pin is placed exactly on the die boundary using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_107.png"], "neg_text": ["When I use the `place_pins -hor_layers metal3 -ver_layers metal2` command, the pins are placed on the metal3 and metal2 layers, but I want to avoid placing pins near the corners of the die. How can I achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_107.png", "q_text": "When I use the `place_pins -hor_layers metal3 -ver_layers metal2` command, the pins are placed on the metal3 and metal2 layers, but I want to avoid placing pins near the corners of the die. How can I achieve this?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_107.png"], "neg_text": ["How can I ensure that a pin is placed exactly on the die boundary using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_227.png", "q_text": "After running the pin placement operation, the output shows \"Number of I/O w/o sink: 0\". What does this indicate about the pin placement process?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_227.png"], "neg_text": ["How can I ensure that pins are not placed within 10 microns of the corners when using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_227.png", "q_text": "How can I ensure that pins are not placed within 10 microns of the corners when using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_227.png"], "neg_text": ["After running the pin placement operation, the output shows \"Number of I/O w/o sink: 0\". What does this indicate about the pin placement process?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_192.png", "q_text": "When I run the command `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, how can I ensure that no pins are placed on the left boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_192.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are overlapping with each other. How can I ensure that individual pins are placed without overlaps before running the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_192.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are overlapping with each other. How can I ensure that individual pins are placed without overlaps before running the `place_pins` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_192.png"], "neg_text": ["When I run the command `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, how can I ensure that no pins are placed on the left boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_142.png", "q_text": "How can I use the `set_io_pin_constraint` command to exclude pins from the right boundary between 15 and 95 microns and the bottom boundary between 10 and 70 microns, similar to the `-exclude` option in the `place_pins` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_142.png"], "neg_text": ["In the command `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude right:15-95 -exclude bottom:10-70`, how can I ensure that pins are not placed within 20 microns of the left edge?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_142.png", "q_text": "In the command `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude right:15-95 -exclude bottom:10-70`, how can I ensure that pins are not placed within 20 microns of the left edge?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_142.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to exclude pins from the right boundary between 15 and 95 microns and the bottom boundary between 10 and 70 microns, similar to the `-exclude` option in the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_98.png", "q_text": "After running the `place_pins` command, I see that the pin groups `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] ...]` and `[resp_msg[0] resp_msg[1] resp_msg[2] resp_msg[3] resp_msg[4] ...]` are created. How can I ensure that these pin groups are placed together on the die boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_98.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to ensure that the pins in the group `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4]]` are placed only on the top boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_98.png", "q_text": "How can I use the `set_io_pin_constraint` command to ensure that the pins in the group `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4]]` are placed only on the top boundary of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_98.png"], "neg_text": ["After running the `place_pins` command, I see that the pin groups `[req_msg[0] req_msg[1] req_msg[2] req_msg[3] req_msg[4] ...]` and `[resp_msg[0] resp_msg[1] resp_msg[2] resp_msg[3] resp_msg[4] ...]` are created. How can I ensure that these pin groups are placed together on the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_201.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that pins are placed within the die area and not just at the edges, as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_201.png"], "neg_text": ["When I run the `place_pin` command with the `-force_to_die_boundary` option, the pin is not placed exactly at the die boundary. How can I ensure the pin is placed correctly at the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_201.png", "q_text": "When I run the `place_pin` command with the `-force_to_die_boundary` option, the pin is not placed exactly at the die boundary. How can I ensure the pin is placed correctly at the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_201.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that pins are placed within the die area and not just at the edges, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_8.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region of the die when using the `place_pins` command?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_8.png"], "neg_text": ["How can I modify the `place_pins` command to ensure that no pins are placed on the right boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_8.png", "q_text": "How can I modify the `place_pins` command to ensure that no pins are placed on the right boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_8.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that pins are placed only within a specific region of the die when using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_72.png", "q_text": "How can I modify the `set_io_pin_constraint` command to increase the region on the TOP edge to accommodate more pins?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_72.png"], "neg_text": ["How can I resolve the error \"1 constraint(s) does not have available slots for the pins\" when running the `place_pins -hor_layers metal3 -ver_layers metal2` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_72.png", "q_text": "How can I resolve the error \"1 constraint(s) does not have available slots for the pins\" when running the `place_pins -hor_layers metal3 -ver_layers metal2` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_72.png"], "neg_text": ["How can I modify the `set_io_pin_constraint` command to increase the region on the TOP edge to accommodate more pins?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_105.png", "q_text": "How can I restrict the pins to be placed only on the left and right boundaries of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_105.png"], "neg_text": ["After running the `place_pins -hor_layers metal2 -ver_layers metal3` command, I noticed that some pins are placed inside the die area instead of just on the boundary. How can I ensure that all pins are placed only on the boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_105.png", "q_text": "After running the `place_pins -hor_layers metal2 -ver_layers metal3` command, I noticed that some pins are placed inside the die area instead of just on the boundary. How can I ensure that all pins are placed only on the boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_105.png"], "neg_text": ["How can I restrict the pins to be placed only on the left and right boundaries of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_180.png", "q_text": "How can I restrict the pins to be placed only on the left and top edges of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_180.png"], "neg_text": ["After running the `set_pin_length -hor_length 10 -ver_length 5` command, I noticed that the pins on the left boundary are longer than those on the top boundary. How can I adjust the pin lengths to make them uniform?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_180.png", "q_text": "After running the `set_pin_length -hor_length 10 -ver_length 5` command, I noticed that the pins on the left boundary are longer than those on the top boundary. How can I adjust the pin lengths to make them uniform?", "pos_doc": "id:pin_placement_4\n### Set Pin Length\n\nThe `set_pin_length` command defines the length of all vertical and horizontal\npins.\n\n```tcl\nset_pin_length \n    [-hor_length h_length]\n    [-ver_length v_length]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_length` | The length (in microns) of the horizontal pins. |\n| `-ver_length` | The length (in microns) of the vertical pins. |\n\nThe default length of the pins is the minimum length necessary to respect the\nminimum area defined in the routing layer they were placed. The width of the\npins is the minimum width defined in the routing layer.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_180.png"], "neg_text": ["How can I restrict the pins to be placed only on the left and top edges of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_4"]}
{"q_img": "source_images/pin_placement/pin_placement_161.png", "q_text": "How can I define a pin placement grid inside the die area on metal3 with a step size of 5 microns in both x and y directions?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_161.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_161.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_161.png"], "neg_text": ["How can I define a pin placement grid inside the die area on metal3 with a step size of 5 microns in both x and y directions?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_71.png", "q_text": "How can I use the `place_pins` command to ensure that no pins are placed within 20 microns of the corners of the die when placing pins around the macro `macro_nop_0_`?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_71.png"], "neg_text": ["How can I restrict the pins to be placed only on the left and right edges of the die, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_71.png", "q_text": "How can I restrict the pins to be placed only on the left and right edges of the die, as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_71.png"], "neg_text": ["How can I use the `place_pins` command to ensure that no pins are placed within 20 microns of the corners of the die when placing pins around the macro `macro_nop_0_`?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_218.png", "q_text": "How can I place the pin `resp_msg[10]` at the location (0, 44.95) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_218.png"], "neg_text": ["How can I ensure that the pin `resp_msg[10]` is not placed on the top boundary of the die when using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_218.png", "q_text": "How can I ensure that the pin `resp_msg[10]` is not placed on the top boundary of the die when using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_218.png"], "neg_text": ["How can I place the pin `resp_msg[10]` at the location (0, 44.95) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_112.png", "q_text": "When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, I want to ensure that no pins are placed within 10 microns of the corners. How can I achieve this?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_112.png"], "neg_text": ["How can I define a pin placement grid on metal3 with a step size of 10 microns in both x and y directions, and ensure that the pins avoid existing routing obstructions by 0.5 microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_112.png", "q_text": "How can I define a pin placement grid on metal3 with a step size of 10 microns in both x and y directions, and ensure that the pins avoid existing routing obstructions by 0.5 microns?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_112.png"], "neg_text": ["When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -annealing` command, I want to ensure that no pins are placed within 10 microns of the corners. How can I achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_205.png", "q_text": "How can I use the `set_io_pin_constraint` command to ensure that no pins are placed on the bottom boundary of the die after running the `place_pins -hor_layers metal3 -ver_layers metal2` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_205.png"], "neg_text": ["How can I modify the `place_pins` command to avoid placing pins within 10 microns of the corners of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_205.png", "q_text": "How can I modify the `place_pins` command to avoid placing pins within 10 microns of the corners of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_205.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to ensure that no pins are placed on the bottom boundary of the die after running the `place_pins -hor_layers metal3 -ver_layers metal2` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_29.png", "q_text": "In the script, the command `set_io_pin_constraint -region bottom:* -pin_names {resp_msg[0] resp_msg[1] clk resp_val resp_rdy resp_msg[10] resp_msg[11] resp_msg[12]}` is used. How can I modify this command to restrict the pins to the bottom edge but only within the interval from 100 to 500 microns?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_29.png"], "neg_text": ["When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I noticed that some pins are placed too close to each other. How can I ensure a minimum distance between pins in terms of routing tracks instead of microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_29.png", "q_text": "When I run `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12`, I noticed that some pins are placed too close to each other. How can I ensure a minimum distance between pins in terms of routing tracks instead of microns?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_29.png"], "neg_text": ["In the script, the command `set_io_pin_constraint -region bottom:* -pin_names {resp_msg[0] resp_msg[1] clk resp_val resp_rdy resp_msg[10] resp_msg[11] resp_msg[12]}` is used. How can I modify this command to restrict the pins to the bottom edge but only within the interval from 100 to 500 microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_86.png", "q_text": "How can I use the `place_pin` command to place the pin `req_val` at the location (85.18, 88.725) on the top boundary of the die?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_86.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to ensure that the pins `req_msg[31]` and `req_msg[27]` are placed symmetrically on the left and right edges of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_86.png", "q_text": "How can I use the `set_io_pin_constraint` command to ensure that the pins `req_msg[31]` and `req_msg[27]` are placed symmetrically on the left and right edges of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_86.png"], "neg_text": ["How can I use the `place_pin` command to place the pin `req_val` at the location (85.18, 88.725) on the top boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_2.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed too close to the corners of the die. How can I modify the command to avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_2.png"], "neg_text": ["In the screenshot, the command `set_io_pin_constraint -direction INPUT -region top:*` is used. How can I modify this command to restrict the input pins to only the top-left quarter of the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_2.png", "q_text": "In the screenshot, the command `set_io_pin_constraint -direction INPUT -region top:*` is used. How can I modify this command to restrict the input pins to only the top-left quarter of the die boundary?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_2.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed too close to the corners of the die. How can I modify the command to avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_160.png", "q_text": "How can I restrict the pins in the pin group `[req_msg[10] req_msg[11] req_msg[12] req_msg[13] req_msg[14] ...]` to be placed only on the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_160.png"], "neg_text": ["How can I use the `place_pins` command to ensure that the pins in the group `[ clk req_rdy req_val reset resp_msg[0] ... ]` are placed together on the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_160.png", "q_text": "How can I use the `place_pins` command to ensure that the pins in the group `[ clk req_rdy req_val reset resp_msg[0] ... ]` are placed together on the die boundary?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_160.png"], "neg_text": ["How can I restrict the pins in the pin group `[req_msg[10] req_msg[11] req_msg[12] req_msg[13] req_msg[14] ...]` to be placed only on the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_176.png", "q_text": "How can I ensure that the pin groups [resp_val resp_rdy req_rdy] and [req_msg[15] req_msg[14] resp_msg[15] resp_msg[14]] are placed together on the die boundary using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_176.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to ensure that the pin group `[ req_msg[15] req_msg[14] resp_msg[15] resp_msg[14] ]` is placed on the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_176.png", "q_text": "How can I use the `set_io_pin_constraint` command to ensure that the pin group `[ req_msg[15] req_msg[14] resp_msg[15] resp_msg[14] ]` is placed on the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_176.png"], "neg_text": ["How can I ensure that the pin groups [resp_val resp_rdy req_rdy] and [req_msg[15] req_msg[14] resp_msg[15] resp_msg[14]] are placed together on the die boundary using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_110.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_110.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to ensure that the pin _858_/CK is placed only on the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_110.png", "q_text": "How can I use the `set_io_pin_constraint` command to ensure that the pin _858_/CK is placed only on the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_110.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that some pins are placed too close to the corners of the die. How can I avoid placing pins near the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_141.png", "q_text": "How can I modify the `place_pins` command to avoid placing pins on the left boundary of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_141.png"], "neg_text": ["When I use the `place_pin` command to place a pin at the location {50 50}, the pin is not placed exactly at the specified location. How can I ensure that the pin is placed at the exact location?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_141.png", "q_text": "When I use the `place_pin` command to place a pin at the location {50 50}, the pin is not placed exactly at the specified location. How can I ensure that the pin is placed at the exact location?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_141.png"], "neg_text": ["How can I modify the `place_pins` command to avoid placing pins on the left boundary of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_217.png", "q_text": "After running the pin placement process, I noticed that all 54 I/O pins were successfully assigned to sections, but I want to restrict certain pins to specific regions on the die. How can I achieve this using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_217.png"], "neg_text": ["After running the `place_pins` command, I noticed that the I/O nets HPWL is 754.58 um. How can I reduce the HPWL of the I/O nets using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_217.png", "q_text": "After running the `place_pins` command, I noticed that the I/O nets HPWL is 754.58 um. How can I reduce the HPWL of the I/O nets using the `place_pins` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_217.png"], "neg_text": ["After running the pin placement process, I noticed that all 54 I/O pins were successfully assigned to sections, but I want to restrict certain pins to specific regions on the die. How can I achieve this using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_68.png", "q_text": "When I run `set_io_pin_constraint -region top:* -order -pin_names {resp_msg[3] resp_msg[2] resp_msg[14]}`, I get the error \"order cannot be used without -group.\" How should I modify the command to avoid this error?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_68.png"], "neg_text": ["How can I resolve the error \"ERROR PPL-0095 -order cannot be used without -group\" when using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_68.png", "q_text": "How can I resolve the error \"ERROR PPL-0095 -order cannot be used without -group\" when using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_3\n### Clear IO Pin Constraints\n\nThe `clear_io_pin_constraints` command clears all the previously-defined\nconstraints and pin shape patterns created with `set_io_pin_constraint` or\n`define_pin_shape_pattern`.\n\n```tcl\nclear_io_pin_constraints\n```\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_68.png"], "neg_text": ["When I run `set_io_pin_constraint -region top:* -order -pin_names {resp_msg[3] resp_msg[2] resp_msg[14]}`, I get the error \"order cannot be used without -group.\" How should I modify the command to avoid this error?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_3"]}
{"q_img": "source_images/pin_placement/pin_placement_194.png", "q_text": "How can I use the `place_pin` command to place the pin `_858_/CK` at the location (28.73, 53.9) on layer `metal2` with a size of (0.11, 0.17) microns?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_194.png"], "neg_text": ["When I use the `place_pins` command with the `-exclude` option to avoid placing pins on the bottom boundary, why do I still see pins placed on the bottom boundary as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_194.png", "q_text": "When I use the `place_pins` command with the `-exclude` option to avoid placing pins on the bottom boundary, why do I still see pins placed on the bottom boundary as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_194.png"], "neg_text": ["How can I use the `place_pin` command to place the pin `_858_/CK` at the location (28.73, 53.9) on layer `metal2` with a size of (0.11, 0.17) microns?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_60.png", "q_text": "When I use the `define_pin_shape_pattern` command with the `-region` option, I get the error \"Both -region and -mirrored_pins constraints not allowed.\" How can I resolve this issue?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_60.png"], "neg_text": ["When I run the `set_io_pin_constraint` command with both `-region` and `-mirrored_pins` arguments, I get the error \"Both -region and -mirrored_pins constraints not allowed.\" How should I modify my command to avoid this error?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_60.png", "q_text": "When I run the `set_io_pin_constraint` command with both `-region` and `-mirrored_pins` arguments, I get the error \"Both -region and -mirrored_pins constraints not allowed.\" How should I modify my command to avoid this error?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_60.png"], "neg_text": ["When I use the `define_pin_shape_pattern` command with the `-region` option, I get the error \"Both -region and -mirrored_pins constraints not allowed.\" How can I resolve this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_79.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal4 -annealing` command, I noticed that some pins are placed inside the die area. How can I ensure that all pins are placed only on the boundary of the die?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_79.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal4 -annealing` command, I noticed that some pins are placed inside the die area. How can I restrict all pins to be placed only on the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_79.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal4 -annealing` command, I noticed that some pins are placed inside the die area. How can I restrict all pins to be placed only on the die boundary?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_79.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal4 -annealing` command, I noticed that some pins are placed inside the die area. How can I ensure that all pins are placed only on the boundary of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_6.png", "q_text": "According to the log, 54 pins were created and successfully assigned to sections. How does the pin placement process ensure that the pins are placed on the boundary of the die to minimize net wirelengths?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_6.png"], "neg_text": ["After running the pin assignment, I noticed that all 54 I/O pins were successfully assigned to sections. How can I ensure that specific pins are placed only on the top edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_6.png", "q_text": "After running the pin assignment, I noticed that all 54 I/O pins were successfully assigned to sections. How can I ensure that specific pins are placed only on the top edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_6.png"], "neg_text": ["According to the log, 54 pins were created and successfully assigned to sections. How does the pin placement process ensure that the pins are placed on the boundary of the die to minimize net wirelengths?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_52.png", "q_text": "How can I use the `set_io_pin_constraint` command to prevent pins from being placed on the bottom boundary of the die as shown in the screenshot?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_52.png"], "neg_text": ["How can I modify the `place_pins` command to avoid placing the `clk` pin on the bottom boundary as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_52.png", "q_text": "How can I modify the `place_pins` command to avoid placing the `clk` pin on the bottom boundary as shown in the screenshot?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_52.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to prevent pins from being placed on the bottom boundary of the die as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_62.png", "q_text": "How can I place the pin `buffer23/Z` at the location (10.875, 36.55) with a size of (0.45, 1.1) using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_62.png"], "neg_text": ["When I use the `place_pins` command with the `-exclude` option to avoid placing pins on the bottom boundary, why do I still see pins placed near the bottom boundary in the layout?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_62.png", "q_text": "When I use the `place_pins` command with the `-exclude` option to avoid placing pins on the bottom boundary, why do I still see pins placed near the bottom boundary in the layout?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_62.png"], "neg_text": ["How can I place the pin `buffer23/Z` at the location (10.875, 36.55) with a size of (0.45, 1.1) using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_44.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.36` command, I noticed that some pins are placed very close to each other. How can I increase the minimum distance between the pins?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_44.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.36` command, I noticed that some pins are placed too close to each other. How can I increase the minimum distance between the pins?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_44.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.36` command, I noticed that some pins are placed too close to each other. How can I increase the minimum distance between the pins?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_44.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.36` command, I noticed that some pins are placed very close to each other. How can I increase the minimum distance between the pins?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_27.png", "q_text": "In the script, the command `set_io_pin_constraint -pin_names {resp_msg[0] resp_msg[1] clk resp_val resp_rdy resp_msg[10] resp_msg[11] resp_msg[12] resp_msg[13]} -region bottom:*` is used. How can I modify this command to restrict the pins to the top edge of the die instead?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_27.png"], "neg_text": ["When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I want to ensure that certain pins are placed at specific locations before running this command. How can I achieve this?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_27.png", "q_text": "When I run the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I want to ensure that certain pins are placed at specific locations before running this command. How can I achieve this?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_27.png"], "neg_text": ["In the script, the command `set_io_pin_constraint -pin_names {resp_msg[0] resp_msg[1] clk resp_val resp_rdy resp_msg[10] resp_msg[11] resp_msg[12] resp_msg[13]} -region bottom:*` is used. How can I modify this command to restrict the pins to the top edge of the die instead?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_64.png", "q_text": "How can I restrict the pin `_870_` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_64.png"], "neg_text": ["How can I define a pin placement grid on a specific layer to ensure that pins like `_870_` are placed within the die area and not just at the edges?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_64.png", "q_text": "How can I define a pin placement grid on a specific layer to ensure that pins like `_870_` are placed within the die area and not just at the edges?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_64.png"], "neg_text": ["How can I restrict the pin `_870_` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_10.png", "q_text": "How can I use the `set_io_pin_constraint` command to ensure that the pins for `resp_msg[5]` and `resp_msg[12]` are placed only on the right edge of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_10.png"], "neg_text": ["When I use the `place_pin` command to place the pin \"resp_msg[5]\" at a specific location, how can I ensure that it is snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_10.png", "q_text": "When I use the `place_pin` command to place the pin \"resp_msg[5]\" at a specific location, how can I ensure that it is snapped to the nearest routing track next to the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_10.png"], "neg_text": ["How can I use the `set_io_pin_constraint` command to ensure that the pins for `resp_msg[5]` and `resp_msg[12]` are placed only on the right edge of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_213.png", "q_text": "After running the `place_pins -hor_layers {metal3 metal5} -ver_layers {metal2 metal4} -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed too close to the corners of the die. How can I modify the command to avoid placing pins within 5 microns of the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_213.png"], "neg_text": ["How can I restrict the pins to be placed only on the top and right edges of the die when using the `place_pins` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_213.png", "q_text": "How can I restrict the pins to be placed only on the top and right edges of the die when using the `place_pins` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_213.png"], "neg_text": ["After running the `place_pins -hor_layers {metal3 metal5} -ver_layers {metal2 metal4} -corner_avoidance 0 -min_distance 0.12` command, I noticed that some pins are placed too close to the corners of the die. How can I modify the command to avoid placing pins within 5 microns of the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_186.png", "q_text": "What could be the reason for the warning `[WARNING PPL-0043] Pin resp_msg[141] not found in group 1` during the pin placement process?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_186.png"], "neg_text": ["When I run the `place_pin` command, I receive a warning that a pin is not found in the group. How can I ensure that all pins are correctly placed and avoid this warning?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_186.png", "q_text": "When I run the `place_pin` command, I receive a warning that a pin is not found in the group. How can I ensure that all pins are correctly placed and avoid this warning?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_186.png"], "neg_text": ["What could be the reason for the warning `[WARNING PPL-0043] Pin resp_msg[141] not found in group 1` during the pin placement process?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_25.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins `req_msg[3]` and `req_msg[31]` are placed too close to each other on the top boundary. How can I ensure a minimum distance between these pins?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_25.png"], "neg_text": ["How can I ensure that the pins `req_msg[3]` and `req_msg[31]` are placed symmetrically on the top boundary of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_25.png", "q_text": "How can I ensure that the pins `req_msg[3]` and `req_msg[31]` are placed symmetrically on the top boundary of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_25.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2` command, I noticed that the pins `req_msg[3]` and `req_msg[31]` are placed too close to each other on the top boundary. How can I ensure a minimum distance between these pins?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_31.png", "q_text": "How can I define a pin placement grid within the die area for the net `resp_msg[15]` as shown in the screenshot?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_31.png"], "neg_text": ["How can I place the pin `resp_msg[15]` at the location (10, 20) on layer `metal1` with a size of (2, 2) microns using the `place_pin` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_31.png", "q_text": "How can I place the pin `resp_msg[15]` at the location (10, 20) on layer `metal1` with a size of (2, 2) microns using the `place_pin` command?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_31.png"], "neg_text": ["How can I define a pin placement grid within the die area for the net `resp_msg[15]` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_115.png", "q_text": "How can I restrict the placement of the 54 pins created in my design to the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_115.png"], "neg_text": ["How does the pin placement process in OpenROAD ensure the minimization of net wirelengths, as indicated by the HPWL value in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_115.png", "q_text": "How does the pin placement process in OpenROAD ensure the minimization of net wirelengths, as indicated by the HPWL value in the screenshot?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_115.png"], "neg_text": ["How can I restrict the placement of the 54 pins created in my design to the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_54.png", "q_text": "When I use the `place_pin` command to restrict pins to the bottom edge, how can I ensure that the pins are snapped to the nearest routing track next to the die boundary?", "pos_doc": "id:pin_placement_9\n### Place specific Pin\n\nThe `place_pin` command places a specific pin in the specified location with the specified size.\nIt is recommended that individual pins be placed before the `place_pins` command,\nas the routing tracks occupied by these individual pins will be blocked, preventing overlaps.\n\nTo place an individual pin:\n\n```tcl\nplace_pin \n    -pin_name pin_name\n    -layer layer\n    -location {x y}\n    [-pin_size {width height}]\n    [-force_to_die_boundary]\n    [-placed_status]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pin_name` | The name of a pin of the design. |\n| `-layer` | The routing layer where the pin is placed. |\n| `-location` | The center of the pin (in microns). |\n| `-pin_size` | The width and height of the pin (in microns). |\n| `-force_to_die_boundary` | When this flag is enabled, the pin will be snapped to the nearest routing track, next to the die boundary. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_54.png"], "neg_text": ["How can I modify the `place_pins` command to avoid placing any pins on the left edge of the die, as shown in the log output?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_9"]}
{"q_img": "source_images/pin_placement/pin_placement_54.png", "q_text": "How can I modify the `place_pins` command to avoid placing any pins on the left edge of the die, as shown in the log output?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_54.png"], "neg_text": ["When I use the `place_pin` command to restrict pins to the bottom edge, how can I ensure that the pins are snapped to the nearest routing track next to the die boundary?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_139.png", "q_text": "After running the `place_pins` command with `-exclude left:* -exclude right:*`, I noticed that some pins are still placed on the left boundary. How can I ensure that no pins are placed on the left boundary using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_139.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude left:* -exclude right:*` command, I noticed that some pins are still placed near the corners of the die. How can I ensure that no pins are placed within a certain distance from the corners?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_139.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12 -exclude left:* -exclude right:*` command, I noticed that some pins are still placed near the corners of the die. How can I ensure that no pins are placed within a certain distance from the corners?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_139.png"], "neg_text": ["After running the `place_pins` command with `-exclude left:* -exclude right:*`, I noticed that some pins are still placed on the left boundary. How can I ensure that no pins are placed on the left boundary using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_216.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, how can I restrict the pins to only the top and left edges of the die?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_216.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that the pins are not placed on the track grid as expected. What could be the reason for this issue?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_216.png", "q_text": "After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, I noticed that the pins are not placed on the track grid as expected. What could be the reason for this issue?", "pos_doc": "id:pin_placement_0\n# Pin Placer\n\nPlace pins on the boundary of the die on the track grid to minimize net\nwirelengths. Pin placement also creates a metal shape for each pin using\nmin-area rules.\n\nFor designs with unplaced cells, the net wirelength is computed considering\nthe center of the die area as the unplaced cells position.\n\n", "neg_img": ["source_images/pin_placement/pin_placement_216.png"], "neg_text": ["After running the `place_pins -hor_layers metal3 -ver_layers metal2 -corner_avoidance 0 -min_distance 0.12` command, how can I restrict the pins to only the top and left edges of the die?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_0"]}
{"q_img": "source_images/pin_placement/pin_placement_75.png", "q_text": "How can I restrict the pin `resp_msg[9]` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_75.png"], "neg_text": ["How can I use the `define_pin_shape_pattern` command to ensure that the pins for the net `resp_msg[9]` are placed within a specific region of the die area?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/pin_placement/pin_placement_75.png", "q_text": "How can I use the `define_pin_shape_pattern` command to ensure that the pins for the net `resp_msg[9]` are placed within a specific region of the die area?", "pos_doc": "id:pin_placement_1\n### Define Pin Shape Pattern\n\nThe `define_pin_shape_pattern` command defines a pin placement grid on the\nspecified layer. This grid has positions inside the die area, not only at\nthe edges of the die boundary.\n\n```tcl\ndefine_pin_shape_pattern \n    [-layer layer]\n    [-x_step x_step]\n    [-y_step y_step]\n    [-region {llx lly urx ury} | *]\n    [-size {width height}]\n    [-pin_keepout dist]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-layer` | The single top-most routing layer of the placement grid. |\n| `-x_step`, `-y_step` | The distance (in microns) between each valid position on the grid in the x- and y-directions, respectively. |\n| `-region` | The `{llx, lly, urx, ury}` region of the placement grid (in microns). If the `*` is specified, the region will be the entire die area. |\n| `-size` | The width and height (in microns) of the pins assigned to this grid. The centers of the pins are placed on the grid positions. Pins may have half of their shapes outside the defined region. |\n| `-pin_keepout` | The boundary (in microns) around existing routing obstructions that the pins should avoid; this defaults to the `layer` minimum spacing. |\n\n#### Face-to-Face direct-bonding IOs\n\nThe `define_pin_shape_pattern` command can be used to place pins in any metal\nlayer with the minimum allowed spacing to facilitate 3DIC integration of\nchips using face-to-face packaging technologies. These technologies include\n[micro bumps](https://semiengineering.com/bumps-vs-hybrid-bonding-for-advanced-packaging/)\nand\n[hybrid bonding](https://www.3dincites.com/2018/04/hybrid-bonding-from-concept-to-commercialization/)\nfor high density face-to-face interconnect.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_75.png"], "neg_text": ["How can I restrict the pin `resp_msg[9]` to be placed only on the top edge of the die using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_1"]}
{"q_img": "source_images/pin_placement/pin_placement_16.png", "q_text": "How can I resolve the error `[ERROR PPL-0098] Pins req_msg[15] req_msg[14] are assigned to multiple constraints` when running the `place_pins -hor_layers metal3 -ver_layers metal2 -random` command?", "pos_doc": "id:pin_placement_10\n### Place all Pins\n\nThe `place_pins` command places all pins together. Use the following command to perform pin placement:\n\nDeveloper arguments:\n- `-random`, `-random_seed`\n\n```tcl\nplace_pins \n    -hor_layers h_layers\n    -ver_layers v_layers\n    [-random_seed seed]\n    [-random]\n    [-corner_avoidance length]\n    [-min_distance distance]\n    [-min_distance_in_tracks]\n    [-exclude region]\n    [-group_pins pin_list]\n    [-annealing]\n    [-write_pin_placement file_name]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-hor_layers` | The layers to create the metal shapes of pins placed in horizontal tracks. It can be a single layer or a list of layer names. |\n| `-ver_layers` | The layers to create the metal shapes of pins placed in vertical tracks. It can be a single layer or a list of layer names. |\n| `-corner_avoidance` | The distance (in microns) from each corner within which pin placement should be avoided. |\n| `-min_distance` | The minimum distance between pins on the die boundary. This distance can be in microns (default) or in number of tracks between each pin. The default value is the length of two routing tracks between each pin. |\n| `-min_distance_in_tracks` | Flag that allows setting the min distance in number of tracks instead of microns. |\n| `-exclude` | A region where pins cannot be placed. Either `top|bottom|left|right:edge_interval`, which is the edge interval from the selected edge; `begin:end` for begin-end of all edges. |\n| `-group_pins` | A list of pins to be placed together on the die boundary. |\n| `-annealing` | Flag to enable simulated annealing pin placement. |\n| `-write_pin_placement` | A file with the pin placement generated in the format of multiple calls for the `place_pin` command. |\n\nThe `exclude` option syntax is `-exclude edge:interval`. The `edge` values are\n(top|bottom|left|right). The `interval` can be the whole edge, with the `*`\nvalue, or a range of values. For example, in `place_pins -hor_layers metal2\n-ver_layers metal3 -exclude top:* -exclude right:15-60.5 -exclude left:*-50`\nthree intervals are excluded: the whole top edge, the right edge from 15\nmicrons to 60.5 microns, and the left edge from its beginning to 50 microns.\n\n#### Developer Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-random_seed` | Specify the seed for random operations. |\n| `-random` | When this flag is enabled, the pin placement is random. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_16.png"], "neg_text": ["How can I resolve the error `[ERROR PPL-0098] Pins req_msg[15] req_msg[14] are assigned to multiple constraints` when using the `set_io_pin_constraint` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_10"]}
{"q_img": "source_images/pin_placement/pin_placement_16.png", "q_text": "How can I resolve the error `[ERROR PPL-0098] Pins req_msg[15] req_msg[14] are assigned to multiple constraints` when using the `set_io_pin_constraint` command?", "pos_doc": "id:pin_placement_2\n### Set IO Pin Constraints\n\nThe `set_io_pin_constraint` command sets region constraints for pins according\nto the pin direction or the pin name. This command can be called multiple\ntimes with different constraints.\n\nYou can use the `set_io_pin_constraint` command to restrict pins to the\npin placement grid created with the `define_pin_shape_pattern` command.\n\nIt is possible to use the `-region`, `-group` and `-order` arguments together\nper `set_io_pin_constraint` call, but the `-mirrored_pins` argument should be\ncalled alone.\n\n```tcl\nset_io_pin_constraint \n    [-direction direction]\n    [-pin_names names]\n    [-region edge:interval]\n    [-mirrored_pins names]\n    [-group]\n    [-order]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-direction` | Pin direction (`input`, `output`, `inout`, or `feedthrough`). |\n| `-pin_names` | List of names. Only one of (`-direction`, `-pin_names`) should be used in a single call for the `set_io_pin_constraint` command. |\n| `-region` | Syntax is `-region edge:interval`. The `edge` values are (`top\\|bottom\\|left\\|right`). The `interval` can be the whole edge with the wildcard `*` value or a range of values. |\n| `-mirrored_pins` | List of pins that sets pairs of pins that will be symmetrically placed in the vertical or the horizontal edges. The number of pins in this list **must be even**. For example, in `set_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4 pin5 pin6}`, the pins `pin1` and `pin2` will be placed symmetrically to each other. Same for `pin3` and `pin4`, and for `pin5` and `pin6`. |\n| `-group` | Flag places together on the die boundary the pin list defined in `-pin_names,` similar to the `-group_pins` option on the `place_pins` command. |\n| `-order` | Flag places the pins ordered in ascending x/y position and must be used only when `-group` is also used. |\n\nThe `edge` values are (up, top, bottom, left, right), where `up` is\nthe grid created by `define_pin_shape_pattern`. To restrict pins to the\npin placement grid defined with `define_pin_shape_pattern` use:\n\n-   `-region up:{llx lly urx ury}` to restrict the pins into a specific\n    region in the grid. The region is defined in microns.\n-   `-region up:*` to restrict the pins into the entire region of the grid.\n\nThe `up` option is only available when the pin placement grid is created with\nthe `define_pin_shape_pattern` command.\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/pin_placement/pin_placement_16.png"], "neg_text": ["How can I resolve the error `[ERROR PPL-0098] Pins req_msg[15] req_msg[14] are assigned to multiple constraints` when running the `place_pins -hor_layers metal3 -ver_layers metal2 -random` command?"], "q_type": "it", "c_type": "mix", "reference": ["pin_placement_2"]}
{"q_img": "source_images/global_placement/global_placement_51.png", "q_text": "How can I adjust the target density for the global placement to potentially reduce the congestion shown in the screenshot?", "pos_doc": "id:global_placement_1\n### Global Placement\n\nWhen using the `-timing_driven` flag, `gpl` does a virtual `repair_design` \nto find slacks and\nweight nets with low slack. It adjusts the worst slacks (modified with \n`-timing_driven_nets_percentage`) using a multiplier (modified with \n`-timing_driven_net_weight_max`). The multiplier\nis scaled from the full value for the worst slack, to 1.0 at the\n`timing_driven_nets_percentage` point. Use the `set_wire_rc` command to set\nresistance and capacitance of estimated wires used for timing. \n\nTiming-driven iterations are triggered based on a list of overflow threshold \nvalues. Each time the placer execution reaches these overflow values, the \nresizer is executed. This process can be costly in terms of runtime. The \noverflow values for recalculating weights can be modified with \n`-timing_driven_net_reweight_overflow`, you may use less overflow threshold \nvalues to decrease runtime, for example.\n\nWhen the routability-driven option is enabled, each of its iterations will \nexecute RUDY to provide an estimation of routing congestion. Congested tiles \nwill have the area of their logic cells inflated to reduce routing congestion. \nThe iterations will attempt to achieve the target RC (routing congestion) \nby comparing it to the final RC at each iteration. If the algorithm takes too \nlong during routability-driven execution, consider raising the target RC value \n(`-routability_target_rc_metric`) to alleviate the constraints. The final RC \nvalue is calculated based on the weight coefficients. The algorithm will stop \nif the RC is not decreasing for three consecutive iterations.\n\nRoutability-driven arguments\n- They begin with `-routability`.\n- `-routability_target_rc_metric`, `-routability_check_overflow`, `-routability_max_density`, `-routability_max_bloat_iter`, `-routability_max_inflation_iter`, `-routability_inflation_ratio_coef`, `-routability_max_inflation_ratio`, `-routability_rc_coefficients`\n\nTiming-driven arguments\n- They begin with `-timing_driven`.\n- `-timing_driven_net_reweight_overflow`, `-timing_driven_net_weight_max`, `-timing_driven_nets_percentage`\n\n```tcl\nglobal_placement\n    [-timing_driven]\n    [-routability_driven]\n    [-disable_timing_driven]\n    [-disable_routability_driven]\n    [-skip_initial_place]\n    [-incremental]\n    [-bin_grid_count grid_count]\n    [-density target_density]\n    [-init_density_penalty init_density_penalty]\n    [-init_wirelength_coef init_wirelength_coef]\n    [-min_phi_coef min_phi_conef]\n    [-max_phi_coef max_phi_coef]\n    [-reference_hpwl reference_hpwl]\n    [-overflow overflow]\n    [-initial_place_max_iter initial_place_max_iter]\n    [-initial_place_max_fanout initial_place_max_fanout]\n    [-pad_left pad_left]\n    [-pad_right pad_right]\n    [-skip_io]\n    [-skip_nesterov_place]\n    [-routability_use_grt]\n    [-routability_target_rc_metric routability_target_rc_metric]\n    [-routability_check_overflow routability_check_overflow]\n    [-routability_max_density routability_max_density]\n    [-routability_max_bloat_iter routability_max_bloat_iter]\n    [-routability_max_inflation_iter routability_max_inflation_iter]    \n    [-routability_inflation_ratio_coef routability_inflation_ratio_coef]\n    [-routability_max_inflation_ratio routability_max_inflation_ratio]\n    [-routability_rc_coefficients routability_rc_coefficients]\n    [-timing_driven_net_reweight_overflow]\n    [-timing_driven_net_weight_max]\n    [-timing_driven_nets_percentage]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-timing_driven` | Enable timing-driven mode. See [link](#timing-driven-arguments) for timing-specific arguments. |\n| `-routability_driven` | Enable routability-driven mode. See [link](#routability-driven-arguments) for routability-specific arguments. |\n| `-skip_initial_place` | Skip the initial placement (Biconjugate gradient stabilized, or BiCGSTAB solving) before Nesterov placement. Initial placement improves HPWL by ~5% on large designs. Equivalent to `-initial_place_max_iter 0`. | \n| `-incremental` | Enable the incremental global placement. Users would need to tune other parameters (e.g., `init_density_penalty`) with pre-placed solutions. | \n| `-bin_grid_count` | Set bin grid's counts. The internal heuristic defines the default value. Allowed values are integers `[64,128,256,512,...]`. |\n| `-density` | Set target density. The default value is `0.7` (i.e., 70%). Allowed values are floats `[0, 1]`. |\n| `-init_density_penalty` | Set initial density penalty. The default value is `8e-5`. Allowed values are floats `[1e-6, 1e6]`. |\n| `-init_wirelength_coef` | Set initial wirelength coefficient. The default value is `0.25`. Allowed values are floats. |\n| `-min_phi_coef` | Set `pcof_min` ($\\mu_k$ Lower Bound). The default value is `0.95`. Allowed values are floats `[0.95, 1.05]`. |\n| `-max_phi_coef` | Set `pcof_max` ($\\mu_k$ Upper Bound). Default value is 1.05. Allowed values are `[1.00-1.20, float]`. |\n| `-overflow` | Set target overflow for termination condition. The default value is `0.1`. Allowed values are floats `[0, 1]`. |\n| `-initial_place_max_iter` | Set maximum iterations in the initial place. The default value is 20. Allowed values are integers `[0, MAX_INT]`. |\n| `-initial_place_max_fanout` | Set net escape condition in initial place when $fanout \\geq initial\\_place\\_max\\_fanout$. The default value is 200. Allowed values are integers `[1, MAX_INT]`. |\n| `-pad_left` | Set left padding in terms of number of sites. The default value is 0, and the allowed values are integers `[1, MAX_INT]` |\n| `-pad_right` | Set right padding in terms of number of sites. The default value is 0, and the allowed values are integers `[1, MAX_INT]` |\n| `-skip_io` | Flag to ignore the IO ports when computing wirelength during placement. The default value is False, allowed values are boolean. |\n\n#### Routability-Driven Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-routability_use_grt` | Use this tag to execute routability using FastRoute from grt for routing congestion, which is more precise but has a high runtime cost. By default, routability mode uses RUDY, which is faster. |\n| `-routability_target_rc_metric` | Set target RC metric for routability mode. The algorithm will try to reach this RC value. The default value is `1.01`, and the allowed values are floats. |\n| `-routability_check_overflow` | Set overflow threshold for routability mode. The default value is `0.3`, and the allowed values are floats `[0, 1]`. |\n| `-routability_max_density` | Set density threshold for routability mode. The default value is `0.99`, and the allowed values are floats `[0, 1]`. |\n| `-routability_max_bloat_iter` | Set bloat iteration threshold for routability mode. The default value is `1`, and the allowed values are integers `[1, MAX_INT]`.|\n| `-routability_max_inflation_iter` | Set inflation iteration threshold for routability mode. The default value is `4`, and the allowed values are integers `[1, MAX_INT]`. |\n| `-routability_inflation_ratio_coef` | Set inflation ratio coefficient for routability mode. The default value is `5`, and the allowed values are floats. |\n| `-routability_max_inflation_ratio` | Set inflation ratio threshold for routability mode to prevent overly aggressive adjustments. The default value is `8`, and the allowed values are floats. |\n| `-routability_rc_coefficients` | Set routability RC coefficients for calculating the final RC. They relate to the 0.5%, 1%, 2%, and 5% most congested tiles. It comes in the form of a Tcl List `{k1, k2, k3, k4}`. The default value for each coefficient is `{1.0, 1.0, 0.0, 0.0}` respectively, and the allowed values are floats. |\n\n#### Timing-Driven Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-timing_driven_net_reweight_overflow` | Set overflow threshold for timing-driven net reweighting. Allowed value is a Tcl list of integers where each number is `[0, 100]`. Default values are [79, 64, 49, 29, 21, 15] |\n| `-timing_driven_net_weight_max` | Set the multiplier for the most timing-critical nets. The default value is `1.9`, and the allowed values are floats. |\n| `-timing_driven_nets_percentage` | Set the reweighted percentage of nets in timing-driven mode. The default value is 10. Allowed values are floats `[0, 100]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_placement/global_placement_51.png"], "neg_text": ["How can I use the `cluster_flops` command to cluster the DFF_X1 instances shown in the screenshot to improve placement efficiency?"], "q_type": "it", "c_type": "mix", "reference": ["global_placement_1"]}
{"q_img": "source_images/global_placement/global_placement_51.png", "q_text": "How can I use the `cluster_flops` command to cluster the DFF_X1 instances shown in the screenshot to improve placement efficiency?", "pos_doc": "id:global_placement_2\n### Cluster Flops\n\nThis command does flop clustering based on parameters.\n\n```tcl\ncluster_flops\n    [-tray_weight tray_weight]\\\n    [-timing_weight timing_weight]\\\n    [-max_split_size max_split_size]\\\n    [-num_paths num_paths]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tray_weight` | Tray weight, default value is 20.0, type `float`. |\n| `-timing_weight` | Timing weight, default value is 1.0, type `float`. |\n| `-max_split_size` | Maximum split size, default value is -1, type `int`.|\n| `-num_paths` | KIV, default value is 0, type `int`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_placement/global_placement_51.png"], "neg_text": ["How can I adjust the target density for the global placement to potentially reduce the congestion shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_placement_2"]}
{"q_img": "source_images/global_placement/global_placement_81.png", "q_text": "How can I enable incremental global placement for the design shown in the screenshot, and what parameters should I tune for pre-placed solutions?", "pos_doc": "id:global_placement_1\n### Global Placement\n\nWhen using the `-timing_driven` flag, `gpl` does a virtual `repair_design` \nto find slacks and\nweight nets with low slack. It adjusts the worst slacks (modified with \n`-timing_driven_nets_percentage`) using a multiplier (modified with \n`-timing_driven_net_weight_max`). The multiplier\nis scaled from the full value for the worst slack, to 1.0 at the\n`timing_driven_nets_percentage` point. Use the `set_wire_rc` command to set\nresistance and capacitance of estimated wires used for timing. \n\nTiming-driven iterations are triggered based on a list of overflow threshold \nvalues. Each time the placer execution reaches these overflow values, the \nresizer is executed. This process can be costly in terms of runtime. The \noverflow values for recalculating weights can be modified with \n`-timing_driven_net_reweight_overflow`, you may use less overflow threshold \nvalues to decrease runtime, for example.\n\nWhen the routability-driven option is enabled, each of its iterations will \nexecute RUDY to provide an estimation of routing congestion. Congested tiles \nwill have the area of their logic cells inflated to reduce routing congestion. \nThe iterations will attempt to achieve the target RC (routing congestion) \nby comparing it to the final RC at each iteration. If the algorithm takes too \nlong during routability-driven execution, consider raising the target RC value \n(`-routability_target_rc_metric`) to alleviate the constraints. The final RC \nvalue is calculated based on the weight coefficients. The algorithm will stop \nif the RC is not decreasing for three consecutive iterations.\n\nRoutability-driven arguments\n- They begin with `-routability`.\n- `-routability_target_rc_metric`, `-routability_check_overflow`, `-routability_max_density`, `-routability_max_bloat_iter`, `-routability_max_inflation_iter`, `-routability_inflation_ratio_coef`, `-routability_max_inflation_ratio`, `-routability_rc_coefficients`\n\nTiming-driven arguments\n- They begin with `-timing_driven`.\n- `-timing_driven_net_reweight_overflow`, `-timing_driven_net_weight_max`, `-timing_driven_nets_percentage`\n\n```tcl\nglobal_placement\n    [-timing_driven]\n    [-routability_driven]\n    [-disable_timing_driven]\n    [-disable_routability_driven]\n    [-skip_initial_place]\n    [-incremental]\n    [-bin_grid_count grid_count]\n    [-density target_density]\n    [-init_density_penalty init_density_penalty]\n    [-init_wirelength_coef init_wirelength_coef]\n    [-min_phi_coef min_phi_conef]\n    [-max_phi_coef max_phi_coef]\n    [-reference_hpwl reference_hpwl]\n    [-overflow overflow]\n    [-initial_place_max_iter initial_place_max_iter]\n    [-initial_place_max_fanout initial_place_max_fanout]\n    [-pad_left pad_left]\n    [-pad_right pad_right]\n    [-skip_io]\n    [-skip_nesterov_place]\n    [-routability_use_grt]\n    [-routability_target_rc_metric routability_target_rc_metric]\n    [-routability_check_overflow routability_check_overflow]\n    [-routability_max_density routability_max_density]\n    [-routability_max_bloat_iter routability_max_bloat_iter]\n    [-routability_max_inflation_iter routability_max_inflation_iter]    \n    [-routability_inflation_ratio_coef routability_inflation_ratio_coef]\n    [-routability_max_inflation_ratio routability_max_inflation_ratio]\n    [-routability_rc_coefficients routability_rc_coefficients]\n    [-timing_driven_net_reweight_overflow]\n    [-timing_driven_net_weight_max]\n    [-timing_driven_nets_percentage]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-timing_driven` | Enable timing-driven mode. See [link](#timing-driven-arguments) for timing-specific arguments. |\n| `-routability_driven` | Enable routability-driven mode. See [link](#routability-driven-arguments) for routability-specific arguments. |\n| `-skip_initial_place` | Skip the initial placement (Biconjugate gradient stabilized, or BiCGSTAB solving) before Nesterov placement. Initial placement improves HPWL by ~5% on large designs. Equivalent to `-initial_place_max_iter 0`. | \n| `-incremental` | Enable the incremental global placement. Users would need to tune other parameters (e.g., `init_density_penalty`) with pre-placed solutions. | \n| `-bin_grid_count` | Set bin grid's counts. The internal heuristic defines the default value. Allowed values are integers `[64,128,256,512,...]`. |\n| `-density` | Set target density. The default value is `0.7` (i.e., 70%). Allowed values are floats `[0, 1]`. |\n| `-init_density_penalty` | Set initial density penalty. The default value is `8e-5`. Allowed values are floats `[1e-6, 1e6]`. |\n| `-init_wirelength_coef` | Set initial wirelength coefficient. The default value is `0.25`. Allowed values are floats. |\n| `-min_phi_coef` | Set `pcof_min` ($\\mu_k$ Lower Bound). The default value is `0.95`. Allowed values are floats `[0.95, 1.05]`. |\n| `-max_phi_coef` | Set `pcof_max` ($\\mu_k$ Upper Bound). Default value is 1.05. Allowed values are `[1.00-1.20, float]`. |\n| `-overflow` | Set target overflow for termination condition. The default value is `0.1`. Allowed values are floats `[0, 1]`. |\n| `-initial_place_max_iter` | Set maximum iterations in the initial place. The default value is 20. Allowed values are integers `[0, MAX_INT]`. |\n| `-initial_place_max_fanout` | Set net escape condition in initial place when $fanout \\geq initial\\_place\\_max\\_fanout$. The default value is 200. Allowed values are integers `[1, MAX_INT]`. |\n| `-pad_left` | Set left padding in terms of number of sites. The default value is 0, and the allowed values are integers `[1, MAX_INT]` |\n| `-pad_right` | Set right padding in terms of number of sites. The default value is 0, and the allowed values are integers `[1, MAX_INT]` |\n| `-skip_io` | Flag to ignore the IO ports when computing wirelength during placement. The default value is False, allowed values are boolean. |\n\n#### Routability-Driven Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-routability_use_grt` | Use this tag to execute routability using FastRoute from grt for routing congestion, which is more precise but has a high runtime cost. By default, routability mode uses RUDY, which is faster. |\n| `-routability_target_rc_metric` | Set target RC metric for routability mode. The algorithm will try to reach this RC value. The default value is `1.01`, and the allowed values are floats. |\n| `-routability_check_overflow` | Set overflow threshold for routability mode. The default value is `0.3`, and the allowed values are floats `[0, 1]`. |\n| `-routability_max_density` | Set density threshold for routability mode. The default value is `0.99`, and the allowed values are floats `[0, 1]`. |\n| `-routability_max_bloat_iter` | Set bloat iteration threshold for routability mode. The default value is `1`, and the allowed values are integers `[1, MAX_INT]`.|\n| `-routability_max_inflation_iter` | Set inflation iteration threshold for routability mode. The default value is `4`, and the allowed values are integers `[1, MAX_INT]`. |\n| `-routability_inflation_ratio_coef` | Set inflation ratio coefficient for routability mode. The default value is `5`, and the allowed values are floats. |\n| `-routability_max_inflation_ratio` | Set inflation ratio threshold for routability mode to prevent overly aggressive adjustments. The default value is `8`, and the allowed values are floats. |\n| `-routability_rc_coefficients` | Set routability RC coefficients for calculating the final RC. They relate to the 0.5%, 1%, 2%, and 5% most congested tiles. It comes in the form of a Tcl List `{k1, k2, k3, k4}`. The default value for each coefficient is `{1.0, 1.0, 0.0, 0.0}` respectively, and the allowed values are floats. |\n\n#### Timing-Driven Arguments\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-timing_driven_net_reweight_overflow` | Set overflow threshold for timing-driven net reweighting. Allowed value is a Tcl list of integers where each number is `[0, 100]`. Default values are [79, 64, 49, 29, 21, 15] |\n| `-timing_driven_net_weight_max` | Set the multiplier for the most timing-critical nets. The default value is `1.9`, and the allowed values are floats. |\n| `-timing_driven_nets_percentage` | Set the reweighted percentage of nets in timing-driven mode. The default value is 10. Allowed values are floats `[0, 100]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_placement/global_placement_81.png"], "neg_text": ["How can I use the `cluster_flops` command to optimize the placement of the DFFR_X1 instances shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["global_placement_1"]}
{"q_img": "source_images/global_placement/global_placement_81.png", "q_text": "How can I use the `cluster_flops` command to optimize the placement of the DFFR_X1 instances shown in the screenshot?", "pos_doc": "id:global_placement_2\n### Cluster Flops\n\nThis command does flop clustering based on parameters.\n\n```tcl\ncluster_flops\n    [-tray_weight tray_weight]\\\n    [-timing_weight timing_weight]\\\n    [-max_split_size max_split_size]\\\n    [-num_paths num_paths]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tray_weight` | Tray weight, default value is 20.0, type `float`. |\n| `-timing_weight` | Timing weight, default value is 1.0, type `float`. |\n| `-max_split_size` | Maximum split size, default value is -1, type `int`.|\n| `-num_paths` | KIV, default value is 0, type `int`. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/global_placement/global_placement_81.png"], "neg_text": ["How can I enable incremental global placement for the design shown in the screenshot, and what parameters should I tune for pre-placed solutions?"], "q_type": "it", "c_type": "mix", "reference": ["global_placement_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_53.png", "q_text": "How can I enable debugging for the detailed routing of `net1236` shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_53.png"], "neg_text": ["How can I generate a DRC report for the detailed routing of `net1236` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_53.png", "q_text": "How can I generate a DRC report for the detailed routing of `net1236` as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_53.png"], "neg_text": ["How can I enable debugging for the detailed routing of `net1236` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_77.png", "q_text": "How can I debug the issue of zero shape region query sizes for most metal layers and vias as shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_77.png"], "neg_text": ["How can I specify the bottom and top routing layers to ensure that the routing guides for all metal layers are properly generated, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_77.png", "q_text": "How can I specify the bottom and top routing layers to ensure that the routing guides for all metal layers are properly generated, as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_77.png"], "neg_text": ["How can I debug the issue of zero shape region query sizes for most metal layers and vias as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_10.png", "q_text": "How can I enable debugging for the net `_043_` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_10.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers for the net `_043_` in the detailed routing process?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_10.png", "q_text": "How can I specify the bottommost and topmost routing layers for the net `_043_` in the detailed routing process?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_10.png"], "neg_text": ["How can I enable debugging for the net `_043_` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_36.png", "q_text": "How can I resolve the \"input stream error\" shown in the detailed routing log?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_36.png"], "neg_text": ["How can I debug the \"input stream error\" encountered during the detailed routing process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_36.png", "q_text": "How can I debug the \"input stream error\" encountered during the detailed routing process as shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_36.png"], "neg_text": ["How can I resolve the \"input stream error\" shown in the detailed routing log?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_48.png", "q_text": "How can I generate a DRC report file for the detailed routing shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_48.png"], "neg_text": ["How can I enable debugging for the detailed routing of the instance `inst4183/Y` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_48.png", "q_text": "How can I enable debugging for the detailed routing of the instance `inst4183/Y` shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_48.png"], "neg_text": ["How can I generate a DRC report file for the detailed routing shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_100.png", "q_text": "How can I specify the bottommost and topmost routing layers during the detailed routing process as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_100.png"], "neg_text": ["How can I enable debug information for the detailed routing process to understand why the shape region query sizes are zero for most layers, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_100.png", "q_text": "How can I enable debug information for the detailed routing process to understand why the shape region query sizes are zero for most layers, as shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_100.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers during the detailed routing process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_56.png", "q_text": "How can I enable debugging for the detailed routing of `net1238` as shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_56.png"], "neg_text": ["How can I generate a DRC report for the detailed routing of `net1238` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_56.png", "q_text": "How can I generate a DRC report for the detailed routing of `net1238` as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_56.png"], "neg_text": ["How can I enable debugging for the detailed routing of `net1238` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_45.png", "q_text": "How can I enable debug for the net \"net1239\" shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_45.png"], "neg_text": ["How can I generate a congestion map file for the detailed routing shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_45.png", "q_text": "How can I generate a congestion map file for the detailed routing shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_45.png"], "neg_text": ["How can I enable debug for the net \"net1239\" shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_86.png", "q_text": "How can I enable debugging for the net `net_M3` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_86.png"], "neg_text": ["How can I disable via generation for the standard cell `inv_M3_2` during detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_86.png", "q_text": "How can I disable via generation for the standard cell `inv_M3_2` during detailed routing?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_86.png"], "neg_text": ["How can I enable debugging for the net `net_M3` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_19.png", "q_text": "How can I generate a DRC report for the routed net `_110_` shown in the screenshot using the `detailed_route` command?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_19.png"], "neg_text": ["How can I enable debugging for the net `_110_` shown in the screenshot to analyze its detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_19.png", "q_text": "How can I enable debugging for the net `_110_` shown in the screenshot to analyze its detailed routing?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_19.png"], "neg_text": ["How can I generate a DRC report for the routed net `_110_` shown in the screenshot using the `detailed_route` command?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_101.png", "q_text": "How can I enable debugging for the net `clkbuf_2_2__f_clk` during detailed routing to understand its behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_101.png"], "neg_text": ["How can I disable via generation for the standard cell `clkbuf_2_2__f_clk` during detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_101.png", "q_text": "How can I disable via generation for the standard cell `clkbuf_2_2__f_clk` during detailed routing?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_101.png"], "neg_text": ["How can I enable debugging for the net `clkbuf_2_2__f_clk` during detailed routing to understand its behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_61.png", "q_text": "How can I enable debugging for the net `clknet_2_1__leaf_clk` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_61.png"], "neg_text": ["How can I disable via generation during the detailed routing process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_61.png", "q_text": "How can I disable via generation during the detailed routing process as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_61.png"], "neg_text": ["How can I enable debugging for the net `clknet_2_1__leaf_clk` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_7.png", "q_text": "How can I generate a DRC report for the net `_00140` in the `aes_cipher_top` block during detailed routing?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_7.png"], "neg_text": ["How can I enable debugging for the net `_00140` in the `aes_cipher_top` block to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_7.png", "q_text": "How can I enable debugging for the net `_00140` in the `aes_cipher_top` block to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_7.png"], "neg_text": ["How can I generate a DRC report for the net `_00140` in the `aes_cipher_top` block during detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_47.png", "q_text": "How can I specify the bottom and top routing layers for the detailed routing of the net `net1235` shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_47.png"], "neg_text": ["How can I enable debugging for the net `net1235` shown in the screenshot to understand the detailed routing issues?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_47.png", "q_text": "How can I enable debugging for the net `net1235` shown in the screenshot to understand the detailed routing issues?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_47.png"], "neg_text": ["How can I specify the bottom and top routing layers for the detailed routing of the net `net1235` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_92.png", "q_text": "How can I specify the bottom and top routing layers for the net `Metal3_in` during detailed routing?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_92.png"], "neg_text": ["How can I enable debugging for the net `Metal3_in` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_92.png", "q_text": "How can I enable debugging for the net `Metal3_in` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_92.png"], "neg_text": ["How can I specify the bottom and top routing layers for the net `Metal3_in` during detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_64.png", "q_text": "How can I specify the bottommost and topmost routing layers for the net `clknet_2_2__leaf_clk` during detailed routing?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_64.png"], "neg_text": ["How can I enable debugging for the net `clknet_2_2__leaf_clk` shown in the screenshot to analyze its detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_64.png", "q_text": "How can I enable debugging for the net `clknet_2_2__leaf_clk` shown in the screenshot to analyze its detailed routing?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_64.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers for the net `clknet_2_2__leaf_clk` during detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_74.png", "q_text": "How can I enable debugging for the detailed routing of the net \"clk\" shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_74.png"], "neg_text": ["How can I generate a DRC report for the routed net \"clk\" shown in the screenshot using the detailed routing command?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_74.png", "q_text": "How can I generate a DRC report for the routed net \"clk\" shown in the screenshot using the detailed routing command?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_74.png"], "neg_text": ["How can I enable debugging for the detailed routing of the net \"clk\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_88.png", "q_text": "How can I specify the bottommost and topmost routing layers for the detailed routing of the instance `inv_M2_2` shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_88.png"], "neg_text": ["How can I debug the detailed routing of the net `net_M2` connected to the pin `A` of the instance `inv_M2_2` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_88.png", "q_text": "How can I debug the detailed routing of the net `net_M2` connected to the pin `A` of the instance `inv_M2_2` shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_88.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers for the detailed routing of the instance `inv_M2_2` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_11.png", "q_text": "How can I enable debugging for the net `dpath.a_lt_b$in1\\[8\\]` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_11.png"], "neg_text": ["How can I save the guide updates for the net `dpath.a_lt_b$in1\\[8\\]` during detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_11.png", "q_text": "How can I save the guide updates for the net `dpath.a_lt_b$in1\\[8\\]` during detailed routing?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_11.png"], "neg_text": ["How can I enable debugging for the net `dpath.a_lt_b$in1\\[8\\]` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_91.png", "q_text": "How can I enable debugging for the net shown in the screenshot to understand its routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_91.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers for the detailed routing process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_91.png", "q_text": "How can I specify the bottommost and topmost routing layers for the detailed routing process as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_91.png"], "neg_text": ["How can I enable debugging for the net shown in the screenshot to understand its routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_79.png", "q_text": "How can I disable via generation for the standard cell `inst5333` during detailed routing?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_79.png"], "neg_text": ["How can I enable debugging for the net `net1239` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_79.png", "q_text": "How can I enable debugging for the net `net1239` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_79.png"], "neg_text": ["How can I disable via generation for the standard cell `inst5333` during detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_25.png", "q_text": "How can I specify the bottommost and topmost routing layers for the detailed routing of the standard cell shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_25.png"], "neg_text": ["How can I enable debug for the pin access of the standard cell `OAI21_X1` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_25.png", "q_text": "How can I enable debug for the pin access of the standard cell `OAI21_X1` shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_25.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers for the detailed routing of the standard cell shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_33.png", "q_text": "How can I enable debugging for pin access to analyze the access point shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_33.png"], "neg_text": ["How can I disable via generation for the metal1 layer during detailed routing as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_33.png", "q_text": "How can I disable via generation for the metal1 layer during detailed routing as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_33.png"], "neg_text": ["How can I enable debugging for pin access to analyze the access point shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_42.png", "q_text": "How can I limit the detailed routing to only use layers up to metal 2, as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_42.png"], "neg_text": ["How can I enable debugging for the detailed routing of the net `inst7234` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_42.png", "q_text": "How can I enable debugging for the detailed routing of the net `inst7234` as shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_42.png"], "neg_text": ["How can I limit the detailed routing to only use layers up to metal 2, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_87.png", "q_text": "How can I enable debugging for the net `net_M3` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_87.png"], "neg_text": ["How can I specify the bottom and top routing layers for the net `net_M3` during detailed routing in OpenROAD?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_87.png", "q_text": "How can I specify the bottom and top routing layers for the net `net_M3` during detailed routing in OpenROAD?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_87.png"], "neg_text": ["How can I enable debugging for the net `net_M3` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_17.png", "q_text": "How can I specify the bottom and top routing layers for the detailed routing of the net \"clk\" shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_17.png"], "neg_text": ["How can I enable debugging for the detailed routing of the net \"clk\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_17.png", "q_text": "How can I enable debugging for the detailed routing of the net \"clk\" shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_17.png"], "neg_text": ["How can I specify the bottom and top routing layers for the detailed routing of the net \"clk\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_89.png", "q_text": "How can I enable debugging for the net `net_M2` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_89.png"], "neg_text": ["How can I specify the bottom and top routing layers for the net `net_M2` during detailed routing in OpenROAD?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_89.png", "q_text": "How can I specify the bottom and top routing layers for the net `net_M2` during detailed routing in OpenROAD?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_89.png"], "neg_text": ["How can I enable debugging for the net `net_M2` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_46.png", "q_text": "How can I enable debugging for the net `net1234` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_46.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers for the detailed routing of the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_46.png", "q_text": "How can I specify the bottommost and topmost routing layers for the detailed routing of the design shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_46.png"], "neg_text": ["How can I enable debugging for the net `net1234` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_69.png", "q_text": "How can I enable debugging for the net \"clk\" shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_69.png"], "neg_text": ["How can I save the guide updates during the detailed routing process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_69.png", "q_text": "How can I save the guide updates during the detailed routing process as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_69.png"], "neg_text": ["How can I enable debugging for the net \"clk\" shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_8.png", "q_text": "How can I generate a DRC report file during detailed routing as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_8.png"], "neg_text": ["How can I run TritonRoute on the `gcd` design in the Nangate45 technology node as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_8.png", "q_text": "How can I run TritonRoute on the `gcd` design in the Nangate45 technology node as shown in the screenshot?", "pos_doc": "id:detailed_routing_3\n# Detailed Routing\n## Example scripts\n\nExample script demonstrating how to run TritonRoute on a sample design of `gcd`\nin the Nangate45 technology node.\n\n```shell\n# single machine example \n./test/gcd_nangate45.tcl\n\n# distributed example\n./test/gcd_nangate45_distributed.tcl\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_8.png"], "neg_text": ["How can I generate a DRC report file during detailed routing as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_3"]}
{"q_img": "source_images/detailed_routing/detailed_routing_38.png", "q_text": "How can I enable debugging for the net `clknet_2_0__leaf_clk` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_38.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers for the net `clknet_2_0__leaf_clk` during detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_38.png", "q_text": "How can I specify the bottommost and topmost routing layers for the net `clknet_2_0__leaf_clk` during detailed routing?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_38.png"], "neg_text": ["How can I enable debugging for the net `clknet_2_0__leaf_clk` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_20.png", "q_text": "How can I enable debug for the net `clknet_2_1__leaf_clk` shown in the screenshot to understand its detailed routing behavior?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_20.png"], "neg_text": ["How can I limit the detailed routing to only use layers from M1 to M3 for the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_20.png", "q_text": "How can I limit the detailed routing to only use layers from M1 to M3 for the design shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_20.png"], "neg_text": ["How can I enable debug for the net `clknet_2_1__leaf_clk` shown in the screenshot to understand its detailed routing behavior?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_98.png", "q_text": "How can I enable debugging for the net shown in the screenshot using the `detailed_route_debug` command?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_98.png"], "neg_text": ["How can I generate a DRC report file for the detailed routing shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_98.png", "q_text": "How can I generate a DRC report file for the detailed routing shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_98.png"], "neg_text": ["How can I enable debugging for the net shown in the screenshot using the `detailed_route_debug` command?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_71.png", "q_text": "How can I specify the bottommost and topmost routing layers during the detailed routing process as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_71.png"], "neg_text": ["How can I enable debug information for pin access and track assignment during the detailed routing process, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_71.png", "q_text": "How can I enable debug information for pin access and track assignment during the detailed routing process, as shown in the screenshot?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_71.png"], "neg_text": ["How can I specify the bottommost and topmost routing layers during the detailed routing process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_routing/detailed_routing_65.png", "q_text": "How can I save the guide updates during the detailed routing process as shown in the screenshot?", "pos_doc": "id:detailed_routing_1\n### Detailed Route\n\nThis command performs detailed routing.\n\nDeveloper arguments\n- `-or_seed`, `-or_k`\n\nDistributed arguments\n- `-distributed` , `-remote_host`, `-remote_port`, `-shared_volume`, `-cloud_size`\n\n```tcl\ndetailed_route \n    [-output_maze filename]\n    [-output_drc filename]\n    [-output_cmap filename]\n    [-output_guide_coverage filename]\n    [-drc_report_iter_step step]\n    [-db_process_node name]\n    [-disable_via_gen]\n    [-droute_end_iter iter]\n    [-via_in_pin_bottom_layer layer]\n    [-via_in_pin_top_layer layer]\n    [-or_seed seed]\n    [-or_k k]\n    [-bottom_routing_layer layer]\n    [-top_routing_layer layer]\n    [-verbose level]\n    [-distributed]\n    [-remote_host rhost]\n    [-remote_port rport]\n    [-shared_volume vol]\n    [-cloud_size sz]\n    [-clean_patches]\n    [-no_pin_access]\n    [-min_access_points count]\n    [-save_guide_updates]\n    [-repair_pdn_vias layer]\n    [-single_step_dr]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-output_maze` | Path to output maze log file (e.g. `output_maze.log`). |\n| `-output_drc` | Path to output DRC report file (e.g. `output_drc.rpt`). |\n| `-output_cmap` | Path to output congestion map file (e.g. `output.cmap`). |\n| `-output_guide_coverage` | Path to output guide coverage file (e.g. `sample_coverage.csv`). |\n| `-drc_report_iter_step` | Report DRC on each iteration which is a multiple of this step. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n| `-db_process_node` | Specify the process node. |\n| `-disable_via_gen` | Option to diable via generation with bottom and top routing layer. The default value is disabled. | \n| `-droute_end_iter` | Number of detailed routing iterations. The default value is `-1`, and the allowed values are integers `[1, 64]`. |\n| `-via_in_pin_bottom_layer` | Via-in pin bottom layer name. |\n| `-via_in_pin_top_layer` | Via-in pin top layer name. |\n| `-or_seed` | Refer to developer arguments [here](#developer-arguments). |\n| `-or_k` | Refer to developer arguments [here](#developer-arguments). |\n| `-bottom_routing_layer` | Bottommost routing layer name. |\n| `-top_routing_layer` | Topmost routing layer name. |\n| `-verbose` | Sets verbose mode if the value is greater than 1, else non-verbose mode (must be integer, or error will be triggered.) |\n| `-distributed` | Refer to distributed arguments [here](#distributed-arguments). |\n| `-clean_patches` | Clean unneeded patches during detailed routing. | \n| `-no_pin_access` | Disables pin access for routing. |\n| `-min_access_points` | Minimum access points for standard cell and macro cell pins. | \n| `-save_guide_updates` | Flag to save guides updates. |\n| `-repair_pdn_vias` | This option is used for PDKs where M1 and M2 power rails run in parallel. |\n\n#### Developer arguments\n\nSome arguments that are helpful for developers are listed here. \n\n| Switch Name | Description |\n| ----- | ----- |\n| `-or_seed` | Random seed for the order of nets to reroute. The default value is `-1`, and the allowed values are integers `[0, MAX_INT]`. | \n| `-or_k` | Number of swaps is given by $k * sizeof(rerouteNets)$. The default value is `0`, and the allowed values are integers `[0, MAX_INT]`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_65.png"], "neg_text": ["How can I enable debugging for the net \"clk\" shown in the screenshot to analyze its detailed routing?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_1"]}
{"q_img": "source_images/detailed_routing/detailed_routing_65.png", "q_text": "How can I enable debugging for the net \"clk\" shown in the screenshot to analyze its detailed routing?", "pos_doc": "id:detailed_routing_2\n### Detailed Route Debugging\n\nThe following command and arguments are useful when debugging error\nmessages from `drt` and to understand its behavior.\n\n```tcl\ndetailed_route_debug \n    [-pa]\n    [-ta]\n    [-dr]\n    [-maze]\n    [-net name]\n    [-pin name]\n    [-box x1 y1 x2 y2]\n    [-iter iter]\n    [-pa_markers]\n    [-dump_dr]\n    [-dump_dir dir]\n    [-dump_last_worker]\n    [-pa_edge]\n    [-pa_commit]\n    [-write_net_tracks]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-pa` | Enable debug for pin access. |\n| `-ta` | Enable debug for track assignment. |\n| `-dr` | Enable debug for detailed routing. |\n| `-maze` | Enable debug for maze routing. | \n| `-net` | Enable debug for net name. |\n| `-pin` | Enable debug for pin name. |\n| `-box` | Set the box for debugging given by lower left/upper right coordinates. |\n| `-worker` | Debugs routes that pass through the point `{x, y}`. |\n| `-iter` | Specifies the number of debug iterations. The default value is `0`, and the accepted values are integers `[0, MAX_INT`. |\n| `-pa_markers` | Enable pin access markers. |\n| `-dump_dr` | Filename for detailed routing dump. |\n| `-dump_dir` | Directory for detailed routing dump. |\n| `-pa_edge` | Enable visibility of pin access edges. |\n| `-pa_commit` | Enable visibility of pin access commits. |\n| `-write_net_tracks` | Enable writing of net track assigments. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_routing/detailed_routing_65.png"], "neg_text": ["How can I save the guide updates during the detailed routing process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_routing_2"]}
{"q_img": "source_images/detailed_placement/detailed_placement_55.png", "q_text": "How can I specify a different naming prefix for the filler cells used in the `filler_placement` command as shown in the screenshot?", "pos_doc": "id:detailed_placement_3\n### Filler Placement\n\nThe `filler_placement` command fills gaps between detail-placed instances\nto connect the power and ground rails in the rows. `filler_masters` is a\nlist of master/macro names to use for filling the gaps. Wildcard matching\nis supported, so `FILL*` will match, e.g., `FILLCELL_X1 FILLCELL_X16 FILLCELL_X2\nFILLCELL_X32 FILLCELL_X4 FILLCELL_X8`.  To specify a different naming prefix\nfrom `FILLER_` use `-prefix <new prefix>`.\n\n```tcl \nfiller_placement\n    [-prefix prefix]\n    filler_masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to name the filler cells. The default value is `FILLER_`. |\n| `filler_masters` | Filler master cells. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_55.png"], "neg_text": ["How can I limit the maximum displacement during detailed placement as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_3"]}
{"q_img": "source_images/detailed_placement/detailed_placement_55.png", "q_text": "How can I limit the maximum displacement during detailed placement as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_55.png"], "neg_text": ["How can I specify a different naming prefix for the filler cells used in the `filler_placement` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_18.png", "q_text": "How can I limit the displacement of the net \"VSS\" during detailed placement as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_18.png"], "neg_text": ["How can I use the `check_placement` command to verify the legality of the placement for the net \"VSS\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_18.png", "q_text": "How can I use the `check_placement` command to verify the legality of the placement for the net \"VSS\" shown in the screenshot?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_18.png"], "neg_text": ["How can I limit the displacement of the net \"VSS\" during detailed placement as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_71.png", "q_text": "Why did the `check_placement` command fail with error code `DPL-0033` after running `detailed_placement` as shown in the screenshot?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_71.png"], "neg_text": ["How can I use the `-max_displacement` option in the `detailed_placement` command to address the \"ERROR DPL-0033 detailed placement checks failed\" issue shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_71.png", "q_text": "How can I use the `-max_displacement` option in the `detailed_placement` command to address the \"ERROR DPL-0033 detailed placement checks failed\" issue shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_71.png"], "neg_text": ["Why did the `check_placement` command fail with error code `DPL-0033` after running `detailed_placement` as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_40.png", "q_text": "How can I limit the maximum displacement of instances during detailed placement to avoid clustering as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_40.png"], "neg_text": ["How can I fill the gaps between the instances shown in the screenshot to ensure proper connection of power and ground rails?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_40.png", "q_text": "How can I fill the gaps between the instances shown in the screenshot to ensure proper connection of power and ground rails?", "pos_doc": "id:detailed_placement_3\n### Filler Placement\n\nThe `filler_placement` command fills gaps between detail-placed instances\nto connect the power and ground rails in the rows. `filler_masters` is a\nlist of master/macro names to use for filling the gaps. Wildcard matching\nis supported, so `FILL*` will match, e.g., `FILLCELL_X1 FILLCELL_X16 FILLCELL_X2\nFILLCELL_X32 FILLCELL_X4 FILLCELL_X8`.  To specify a different naming prefix\nfrom `FILLER_` use `-prefix <new prefix>`.\n\n```tcl \nfiller_placement\n    [-prefix prefix]\n    filler_masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to name the filler cells. The default value is `FILLER_`. |\n| `filler_masters` | Filler master cells. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_40.png"], "neg_text": ["How can I limit the maximum displacement of instances during detailed placement to avoid clustering as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_3"]}
{"q_img": "source_images/detailed_placement/detailed_placement_19.png", "q_text": "How can I prevent overlapping cells during detailed placement as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_19.png"], "neg_text": ["How can I resolve the overlapping cells issue shown in the screenshot when running the `check_placement` command?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_19.png", "q_text": "How can I resolve the overlapping cells issue shown in the screenshot when running the `check_placement` command?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_19.png"], "neg_text": ["How can I prevent overlapping cells during detailed placement as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_30.png", "q_text": "How can I ensure that the instance \"WT4\" shown in the screenshot is placed within a maximum displacement limit during detailed placement?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_30.png"], "neg_text": ["Why is the placement of the tap cell \"WT4\" marked as \"FIRM\" in the screenshot, and how can I verify its legality using the `check_placement` command?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_30.png", "q_text": "Why is the placement of the tap cell \"WT4\" marked as \"FIRM\" in the screenshot, and how can I verify its legality using the `check_placement` command?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_30.png"], "neg_text": ["How can I ensure that the instance \"WT4\" shown in the screenshot is placed within a maximum displacement limit during detailed placement?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_4.png", "q_text": "How can I limit the maximum displacement of instances during detailed placement as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_4.png"], "neg_text": ["How can I fill the gaps between the detail-placed instances shown in the screenshot to ensure proper connection of power and ground rails?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_4.png", "q_text": "How can I fill the gaps between the detail-placed instances shown in the screenshot to ensure proper connection of power and ground rails?", "pos_doc": "id:detailed_placement_3\n### Filler Placement\n\nThe `filler_placement` command fills gaps between detail-placed instances\nto connect the power and ground rails in the rows. `filler_masters` is a\nlist of master/macro names to use for filling the gaps. Wildcard matching\nis supported, so `FILL*` will match, e.g., `FILLCELL_X1 FILLCELL_X16 FILLCELL_X2\nFILLCELL_X32 FILLCELL_X4 FILLCELL_X8`.  To specify a different naming prefix\nfrom `FILLER_` use `-prefix <new prefix>`.\n\n```tcl \nfiller_placement\n    [-prefix prefix]\n    filler_masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to name the filler cells. The default value is `FILLER_`. |\n| `filler_masters` | Filler master cells. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_4.png"], "neg_text": ["How can I limit the maximum displacement of instances during detailed placement as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_3"]}
{"q_img": "source_images/detailed_placement/detailed_placement_21.png", "q_text": "How can I set the maximum displacement for instances during detailed placement to ensure they are placed within a specific distance in the layout shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_21.png"], "neg_text": ["Why does the `check_placement` command fail on the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_21.png", "q_text": "Why does the `check_placement` command fail on the design shown in the screenshot?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_21.png"], "neg_text": ["How can I set the maximum displacement for instances during detailed placement to ensure they are placed within a specific distance in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_20.png", "q_text": "How can I ensure that the instance `_285_` is placed within a specific maximum displacement during detailed placement?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_20.png"], "neg_text": ["How can I use the `check_placement` command to verify the legality of the placement for the instance `_285_` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_20.png", "q_text": "How can I use the `check_placement` command to verify the legality of the placement for the instance `_285_` shown in the screenshot?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_20.png"], "neg_text": ["How can I ensure that the instance `_285_` is placed within a specific maximum displacement during detailed placement?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_16.png", "q_text": "Why does the `check_placement` command fail in the script shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_16.png"], "neg_text": ["Why did the `check_placement` command fail in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_16.png", "q_text": "Why did the `check_placement` command fail in the script shown in the screenshot?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_16.png"], "neg_text": ["Why does the `check_placement` command fail in the script shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_98.png", "q_text": "How can I use the `check_placement` command to verify the legality of the placement for the macro \"DUT\" shown in the screenshot?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_98.png"], "neg_text": ["How can I ensure that the macro `DUT` remains in its fixed position during the detailed placement process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_98.png", "q_text": "How can I ensure that the macro `DUT` remains in its fixed position during the detailed placement process as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_98.png"], "neg_text": ["How can I use the `check_placement` command to verify the legality of the placement for the macro \"DUT\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_32.png", "q_text": "Why does the `check_placement` command in the screenshot show a duplicate site error for `FreePDK45_38x28_10R_NP_162NW_340`?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_32.png"], "neg_text": ["What does the `-disallow_one_site_gaps` option do in the `check_placement` command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_32.png", "q_text": "What does the `-disallow_one_site_gaps` option do in the `check_placement` command shown in the screenshot?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_32.png"], "neg_text": ["Why does the `check_placement` command in the screenshot show a duplicate site error for `FreePDK45_38x28_10R_NP_162NW_340`?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_59.png", "q_text": "How can I limit the maximum displacement of the net \"input\" during detailed placement as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_59.png"], "neg_text": ["How can I specify a different naming prefix for the filler cells used in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_59.png", "q_text": "How can I specify a different naming prefix for the filler cells used in the design shown in the screenshot?", "pos_doc": "id:detailed_placement_3\n### Filler Placement\n\nThe `filler_placement` command fills gaps between detail-placed instances\nto connect the power and ground rails in the rows. `filler_masters` is a\nlist of master/macro names to use for filling the gaps. Wildcard matching\nis supported, so `FILL*` will match, e.g., `FILLCELL_X1 FILLCELL_X16 FILLCELL_X2\nFILLCELL_X32 FILLCELL_X4 FILLCELL_X8`.  To specify a different naming prefix\nfrom `FILLER_` use `-prefix <new prefix>`.\n\n```tcl \nfiller_placement\n    [-prefix prefix]\n    filler_masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to name the filler cells. The default value is `FILLER_`. |\n| `filler_masters` | Filler master cells. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_59.png"], "neg_text": ["How can I limit the maximum displacement of the net \"input\" during detailed placement as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_3"]}
{"q_img": "source_images/detailed_placement/detailed_placement_100.png", "q_text": "How can I set a maximum displacement for instances during detailed placement to ensure they are placed within a specific distance, as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_100.png"], "neg_text": ["Why does the `check_placement` command return an error for the net `out[3]` shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_100.png", "q_text": "Why does the `check_placement` command return an error for the net `out[3]` shown in the screenshot?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_100.png"], "neg_text": ["How can I set a maximum displacement for instances during detailed placement to ensure they are placed within a specific distance, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_29.png", "q_text": "Why does the `check_placement` command in the screenshot include the `-verbose` option, and what additional information does it provide?", "pos_doc": "id:detailed_placement_5\n### Check Placement\n\nThe `check_placement` command checks the placement legality. It returns\n`0` if the placement is legal.\n\n```tcl\ncheck_placement\n    [-verbose]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-verbose` | Enable verbose logging. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_29.png"], "neg_text": ["How can I adjust the padding values in the `set_placement_padding` command to ensure better routing space as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_5"]}
{"q_img": "source_images/detailed_placement/detailed_placement_29.png", "q_text": "How can I adjust the padding values in the `set_placement_padding` command to ensure better routing space as shown in the screenshot?", "pos_doc": "id:detailed_placement_2\n### Set Placement Padding\n\nThe `set_placement_padding` command sets left and right padding in multiples\nof the row site width. Use the `set_placement_padding` command before\nlegalizing placement to leave room for routing. Use the `-global` flag\nfor padding that applies to all instances. Use  `-instances`\nfor instance-specific padding.  The instances `insts` can be a list of instance\nnames, or an instance object returned by the SDC `get_cells` command. To\nspecify padding for all instances of a common master, use the `-filter`\n\"ref_name == <name>\" option to `get_cells`.\n\n```tcl\nset_placement_padding   \n    -global|-masters masters|-instances insts\n    [-right site_count]\n    [-left site_count]\n```\n\n#### Options\n\n```{warning}\nEither one of these flags must be set: `-global | -masters | -instances`.\nThe order of preference is `global > masters > instances`\n```\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-global` | Set padding globally using `left` and `right` values. |\n| `-masters` |  Set padding only for these masters using `left` and `right` values. | \n| `-instances` | For `-instances`, you will set padding only for these insts using `left` and `right` values. |\n| `-left` | Left padding (in site count). |\n| `-right` | Right padding (in site count). |\n| `instances` | Set padding for these list of instances. Not to be confused with the `-instances` switch above. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_29.png"], "neg_text": ["Why does the `check_placement` command in the screenshot include the `-verbose` option, and what additional information does it provide?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_2"]}
{"q_img": "source_images/detailed_placement/detailed_placement_15.png", "q_text": "How can I limit the maximum displacement of instances during detailed placement to avoid large movements as shown in the screenshot?", "pos_doc": "id:detailed_placement_1\n### Detailed Placement\n\nThe `detailed_placement` command performs detailed placement of instances\nto legal locations after global placement.\n\n```tcl\ndetailed_placement\n    [-max_displacement disp|{disp_x disp_y}]\n    [-disallow_one_site_gaps]\n    [-report_file_name filename]\n```\n\n#### Options\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-max_displacement` | Max distance that an instance can be moved (in microns) when finding a site where it can be placed. Either set one value for both directions or set `{disp_x disp_y}` for individual directions. The default values are `{0, 0}`, and the allowed values within are integers `[0, MAX_INT]`. |\n| `-disallow_one_site_gaps` | Disable one site gap during placement check. |\n| `-report_file_name` | File name for saving the report to (e.g. `report.json`.) |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_15.png"], "neg_text": ["How can I use the `filler_placement` command to fill the gaps between the rows and columns shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_1"]}
{"q_img": "source_images/detailed_placement/detailed_placement_15.png", "q_text": "How can I use the `filler_placement` command to fill the gaps between the rows and columns shown in the screenshot?", "pos_doc": "id:detailed_placement_3\n### Filler Placement\n\nThe `filler_placement` command fills gaps between detail-placed instances\nto connect the power and ground rails in the rows. `filler_masters` is a\nlist of master/macro names to use for filling the gaps. Wildcard matching\nis supported, so `FILL*` will match, e.g., `FILLCELL_X1 FILLCELL_X16 FILLCELL_X2\nFILLCELL_X32 FILLCELL_X4 FILLCELL_X8`.  To specify a different naming prefix\nfrom `FILLER_` use `-prefix <new prefix>`.\n\n```tcl \nfiller_placement\n    [-prefix prefix]\n    filler_masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to name the filler cells. The default value is `FILLER_`. |\n| `filler_masters` | Filler master cells. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_15.png"], "neg_text": ["How can I limit the maximum displacement of instances during detailed placement to avoid large movements as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_3"]}
{"q_img": "source_images/detailed_placement/detailed_placement_34.png", "q_text": "How can I adjust the placement padding to reduce the gaps between instances as shown in the screenshot?", "pos_doc": "id:detailed_placement_2\n### Set Placement Padding\n\nThe `set_placement_padding` command sets left and right padding in multiples\nof the row site width. Use the `set_placement_padding` command before\nlegalizing placement to leave room for routing. Use the `-global` flag\nfor padding that applies to all instances. Use  `-instances`\nfor instance-specific padding.  The instances `insts` can be a list of instance\nnames, or an instance object returned by the SDC `get_cells` command. To\nspecify padding for all instances of a common master, use the `-filter`\n\"ref_name == <name>\" option to `get_cells`.\n\n```tcl\nset_placement_padding   \n    -global|-masters masters|-instances insts\n    [-right site_count]\n    [-left site_count]\n```\n\n#### Options\n\n```{warning}\nEither one of these flags must be set: `-global | -masters | -instances`.\nThe order of preference is `global > masters > instances`\n```\n\n| Switch Name | Description | \n| ----- | ----- |\n| `-global` | Set padding globally using `left` and `right` values. |\n| `-masters` |  Set padding only for these masters using `left` and `right` values. | \n| `-instances` | For `-instances`, you will set padding only for these insts using `left` and `right` values. |\n| `-left` | Left padding (in site count). |\n| `-right` | Right padding (in site count). |\n| `instances` | Set padding for these list of instances. Not to be confused with the `-instances` switch above. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_34.png"], "neg_text": ["How can I use the `filler_placement` command to fill the gaps between instances as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_2"]}
{"q_img": "source_images/detailed_placement/detailed_placement_34.png", "q_text": "How can I use the `filler_placement` command to fill the gaps between instances as shown in the screenshot?", "pos_doc": "id:detailed_placement_3\n### Filler Placement\n\nThe `filler_placement` command fills gaps between detail-placed instances\nto connect the power and ground rails in the rows. `filler_masters` is a\nlist of master/macro names to use for filling the gaps. Wildcard matching\nis supported, so `FILL*` will match, e.g., `FILLCELL_X1 FILLCELL_X16 FILLCELL_X2\nFILLCELL_X32 FILLCELL_X4 FILLCELL_X8`.  To specify a different naming prefix\nfrom `FILLER_` use `-prefix <new prefix>`.\n\n```tcl \nfiller_placement\n    [-prefix prefix]\n    filler_masters\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to name the filler cells. The default value is `FILLER_`. |\n| `filler_masters` | Filler master cells. | \n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/detailed_placement/detailed_placement_34.png"], "neg_text": ["How can I adjust the placement padding to reduce the gaps between instances as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["detailed_placement_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_65.png", "q_text": "How can I remove all the tapcells and endcaps with the prefix \"CHECK_\" from the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_65.png"], "neg_text": ["How can I adjust the horizontal halo size around macros during cut rows in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_65.png", "q_text": "How can I adjust the horizontal halo size around macros during cut rows in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_65.png"], "neg_text": ["How can I remove all the tapcells and endcaps with the prefix \"CHECK_\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_77.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_77.png"], "neg_text": ["How can I adjust the horizontal and vertical halo sizes around macros when using the `cut_rows` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_77.png", "q_text": "How can I adjust the horizontal and vertical halo sizes around macros when using the `cut_rows` command as shown in the screenshot?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_77.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_62.png", "q_text": "How can I place endcaps at the top and bottom edges of the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_62.png"], "neg_text": ["How can I remove the tapcells and endcaps shown in the layout using their prefixes?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_62.png", "q_text": "How can I remove the tapcells and endcaps shown in the layout using their prefixes?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_62.png"], "neg_text": ["How can I place endcaps at the top and bottom edges of the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_49.png", "q_text": "How can I remove the tap cell named \"TAPCELL_X1\" from the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_49.png"], "neg_text": ["How can I ensure that the tap cell \"TAPCELL_X1\" is placed at the top and bottom of macros and the core area according to the row orientation?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_49.png", "q_text": "How can I ensure that the tap cell \"TAPCELL_X1\" is placed at the top and bottom of macros and the core area according to the row orientation?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_49.png"], "neg_text": ["How can I remove the tap cell named \"TAPCELL_X1\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_51.png", "q_text": "How can I specify the distance between each tapcell in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_51.png"], "neg_text": ["How can I remove the tapcell named \"TAP_TAPCELL_ROW_0_4\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_51.png", "q_text": "How can I remove the tapcell named \"TAP_TAPCELL_ROW_0_4\" from the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_51.png"], "neg_text": ["How can I specify the distance between each tapcell in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_70.png", "q_text": "How can I remove the 19 tapcells and 60 endcaps that were inserted in the design?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_70.png"], "neg_text": ["How can I specify the distance between each tapcell in the checkerboard pattern as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_70.png", "q_text": "How can I specify the distance between each tapcell in the checkerboard pattern as shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_70.png"], "neg_text": ["How can I remove the 19 tapcells and 60 endcaps that were inserted in the design?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_13.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_13.png"], "neg_text": ["How can I ensure that tapcells are inserted in the design, as shown in the screenshot where only endcaps were inserted?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_13.png", "q_text": "How can I ensure that tapcells are inserted in the design, as shown in the screenshot where only endcaps were inserted?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_13.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_39.png", "q_text": "How can I remove the endcap cells labeled \"PHY_EDGE_ROW_463_Top\" from the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_39.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_39.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_39.png"], "neg_text": ["How can I remove the endcap cells labeled \"PHY_EDGE_ROW_463_Top\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_78.png", "q_text": "How can I specify the horizontal and vertical halo sizes around macros during tapcell insertion in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_78.png"], "neg_text": ["How can I remove the tapcells and endcaps in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_78.png", "q_text": "How can I remove the tapcells and endcaps in the layout shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_78.png"], "neg_text": ["How can I specify the horizontal and vertical halo sizes around macros during tapcell insertion in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_9.png", "q_text": "How can I insert tapcells with a specific prefix and ensure there are no one-site gaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_9.png"], "neg_text": ["How can I adjust the layout such that the rows overlapped with the net `req_msg[2]` are removed?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_9.png", "q_text": "How can I adjust the layout such that the rows overlapped with the net `req_msg[2]` are removed?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_9.png"], "neg_text": ["How can I insert tapcells with a specific prefix and ensure there are no one-site gaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_50.png", "q_text": "How can I remove the tap cells with the prefix \"TAP_TAPCELL_ROW\" from the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_50.png"], "neg_text": ["How can I adjust the horizontal halo size around macros during tapcell insertion to ensure proper spacing in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_50.png", "q_text": "How can I adjust the horizontal halo size around macros during tapcell insertion to ensure proper spacing in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_50.png"], "neg_text": ["How can I remove the tap cells with the prefix \"TAP_TAPCELL_ROW\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_76.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_76.png"], "neg_text": ["How can I ensure that no tapcells are placed at the top and bottom of the rows in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_76.png", "q_text": "How can I ensure that no tapcells are placed at the top and bottom of the rows in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_76.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_8.png", "q_text": "How can I place endcap cells like \"PHY_EDGE_ROW_51_Right_51\" at the top and bottom edges of the rows in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_8.png"], "neg_text": ["How can I specify the master cell for the endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_8.png", "q_text": "How can I specify the master cell for the endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_8.png"], "neg_text": ["How can I place endcap cells like \"PHY_EDGE_ROW_51_Right_51\" at the top and bottom edges of the rows in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_54.png", "q_text": "How can I specify the prefix for the tapcell instances in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_54.png"], "neg_text": ["How can I remove the tap cell named \"PHY_EDGE_ROW_44_Right_44\" shown in the screenshot using its prefix?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_54.png", "q_text": "How can I remove the tap cell named \"PHY_EDGE_ROW_44_Right_44\" shown in the screenshot using its prefix?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_54.png"], "neg_text": ["How can I specify the prefix for the tapcell instances in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_73.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_73.png"], "neg_text": ["How can I specify the distance between each tapcell in the checkerboard pattern as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_73.png", "q_text": "How can I specify the distance between each tapcell in the checkerboard pattern as shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_73.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_97.png", "q_text": "How can I adjust the distance between tapcells in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_4\n### Only adding Tapcells\n\nThis command is used for tapcell placement only.\n\n```tcl\nplace_tapcells\n    -master tapcell_master\n    -distance dist\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-master` | Master to use for the tapcells. |\n| `-distance` | Distance between tapcells. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_97.png"], "neg_text": ["How can I adjust the horizontal and vertical halo sizes around macros during tapcell insertion as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_4"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_97.png", "q_text": "How can I adjust the horizontal and vertical halo sizes around macros during tapcell insertion as shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_97.png"], "neg_text": ["How can I adjust the distance between tapcells in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_95.png", "q_text": "How can I use the `cut_rows` command to ensure that the rows around macros are cut with a horizontal halo width of 10 microns and a vertical halo width of 5 microns?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_95.png"], "neg_text": ["How can I use the `tapcell` command to ensure there are no one-site gaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_95.png", "q_text": "How can I use the `tapcell` command to ensure there are no one-site gaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_95.png"], "neg_text": ["How can I use the `cut_rows` command to ensure that the rows around macros are cut with a horizontal halo width of 10 microns and a vertical halo width of 5 microns?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_86.png", "q_text": "How can I remove the 60 endcaps and 19 tapcells inserted into the design as shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_86.png"], "neg_text": ["How can I adjust the horizontal and vertical halo sizes around macros during the row cutting process as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_86.png", "q_text": "How can I adjust the horizontal and vertical halo sizes around macros during the row cutting process as shown in the screenshot?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_86.png"], "neg_text": ["How can I remove the 60 endcaps and 19 tapcells inserted into the design as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_85.png", "q_text": "How can I adjust the rows around the macro \"mem0\" in the layout to ensure they do not overlap with the macro?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_85.png"], "neg_text": ["How can I adjust the distance between tapcells in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_85.png", "q_text": "How can I adjust the distance between tapcells in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_85.png"], "neg_text": ["How can I adjust the rows around the macro \"mem0\" in the layout to ensure they do not overlap with the macro?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_18.png", "q_text": "How can I adjust the horizontal and vertical halo sizes around the macros in the design shown in the screenshot to ensure proper tapcell placement?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_18.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_18.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_18.png"], "neg_text": ["How can I adjust the horizontal and vertical halo sizes around the macros in the design shown in the screenshot to ensure proper tapcell placement?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_5.png", "q_text": "How can I remove the endcap cell named \"PHY_EDGE_ROW_156_Left_2603\" shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_5.png"], "neg_text": ["How can I add endcap cells to the design with a specific prefix, similar to the endcap cell \"PHY_EDGE_ROW_156_Left_2603\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_5.png", "q_text": "How can I add endcap cells to the design with a specific prefix, similar to the endcap cell \"PHY_EDGE_ROW_156_Left_2603\" shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_5.png"], "neg_text": ["How can I remove the endcap cell named \"PHY_EDGE_ROW_156_Left_2603\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_74.png", "q_text": "How can I ensure that the edge row cells, like `PHY_EDGE_ROW_41_Left_125`, are placed correctly around the macros in my design?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_74.png"], "neg_text": ["How can I specify the master for the left edge row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_74.png", "q_text": "How can I specify the master for the left edge row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_74.png"], "neg_text": ["How can I ensure that the edge row cells, like `PHY_EDGE_ROW_41_Left_125`, are placed correctly around the macros in my design?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_22.png", "q_text": "How can I specify a different prefix for the endcap instances in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_22.png"], "neg_text": ["How can I specify different masters for the left and right edge endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_22.png", "q_text": "How can I specify different masters for the left and right edge endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_22.png"], "neg_text": ["How can I specify a different prefix for the endcap instances in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_79.png", "q_text": "How can I correctly place tapcells with a distance of 25 microns using the `place_tapcells` command as shown in the screenshot?", "pos_doc": "id:tapcell_insertion_4\n### Only adding Tapcells\n\nThis command is used for tapcell placement only.\n\n```tcl\nplace_tapcells\n    -master tapcell_master\n    -distance dist\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-master` | Master to use for the tapcells. |\n| `-distance` | Distance between tapcells. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_79.png"], "neg_text": ["How can I adjust the horizontal and vertical halo sizes around macros during tapcell insertion in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_4"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_79.png", "q_text": "How can I adjust the horizontal and vertical halo sizes around macros during tapcell insertion in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_79.png"], "neg_text": ["How can I correctly place tapcells with a distance of 25 microns using the `place_tapcells` command as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_72.png", "q_text": "How can I adjust the distance between tapcells in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_4\n### Only adding Tapcells\n\nThis command is used for tapcell placement only.\n\n```tcl\nplace_tapcells\n    -master tapcell_master\n    -distance dist\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-master` | Master to use for the tapcells. |\n| `-distance` | Distance between tapcells. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_72.png"], "neg_text": ["How can I specify a prefix for the tapcell instances in the command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_4"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_72.png", "q_text": "How can I specify a prefix for the tapcell instances in the command shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_72.png"], "neg_text": ["How can I adjust the distance between tapcells in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_35.png", "q_text": "How can I adjust the placement rows around the macro \"memSE\" in the layout to ensure they do not overlap with the macro?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_35.png"], "neg_text": ["How can I insert tapcells around the macro \"memSE\" in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_35.png", "q_text": "How can I insert tapcells around the macro \"memSE\" in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_35.png"], "neg_text": ["How can I adjust the placement rows around the macro \"memSE\" in the layout to ensure they do not overlap with the macro?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_89.png", "q_text": "How can I ensure that no tapcells are placed at the top and bottom of the core area in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_89.png"], "neg_text": ["How can I remove the tap cell instance `TAP_TAPCELL_CORE_ROW_0_62` shown in the screenshot using its prefix?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_89.png", "q_text": "How can I remove the tap cell instance `TAP_TAPCELL_CORE_ROW_0_62` shown in the screenshot using its prefix?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_89.png"], "neg_text": ["How can I ensure that no tapcells are placed at the top and bottom of the core area in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_7.png", "q_text": "How can I remove the tap cell instance \"TAP_TAPCELL_ROW_45_613\" shown in the screenshot using its prefix?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_7.png"], "neg_text": ["How can I ensure that the tapcell instances, such as \"TAP_TAPCELL_ROW_45_613\" shown in the screenshot, are placed at a specific distance from each other?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_7.png", "q_text": "How can I ensure that the tapcell instances, such as \"TAP_TAPCELL_ROW_45_613\" shown in the screenshot, are placed at a specific distance from each other?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_7.png"], "neg_text": ["How can I remove the tap cell instance \"TAP_TAPCELL_ROW_45_613\" shown in the screenshot using its prefix?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_14.png", "q_text": "How can I cut the rows around the macros in the layout shown in the screenshot to ensure proper placement?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_14.png"], "neg_text": ["How can I ensure that tapcells are placed around the macros (memSW, memNW, memC, memSE, memNE) in the layout shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_14.png", "q_text": "How can I ensure that tapcells are placed around the macros (memSW, memNW, memC, memSE, memNE) in the layout shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_14.png"], "neg_text": ["How can I cut the rows around the macros in the layout shown in the screenshot to ensure proper placement?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_46.png", "q_text": "How can I adjust the horizontal halo size around macros during the insertion of tapcells in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_46.png"], "neg_text": ["How can I remove all the FILLCELL_X1 instances shown in the layout using their prefix?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_46.png", "q_text": "How can I remove all the FILLCELL_X1 instances shown in the layout using their prefix?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_46.png"], "neg_text": ["How can I adjust the horizontal halo size around macros during the insertion of tapcells in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_20.png", "q_text": "How can I remove the tapcells with the prefix \"TAP_TAPCELL\" from the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_20.png"], "neg_text": ["How can I adjust the distance between each tapcell in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_20.png", "q_text": "How can I adjust the distance between each tapcell in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_20.png"], "neg_text": ["How can I remove the tapcells with the prefix \"TAP_TAPCELL\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_4.png", "q_text": "How can I ensure that the endcap cells in the design are placed at the top and bottom of the macros and the core area, as shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_4.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_4.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_4.png"], "neg_text": ["How can I ensure that the endcap cells in the design are placed at the top and bottom of the macros and the core area, as shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_92.png", "q_text": "How can I specify the distance between each tapcell in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_92.png"], "neg_text": ["How can I remove the tapcell named \"TAP_TAPCELL_ROW_52_485\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_92.png", "q_text": "How can I remove the tapcell named \"TAP_TAPCELL_ROW_52_485\" from the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_92.png"], "neg_text": ["How can I specify the distance between each tapcell in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_25.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_25.png"], "neg_text": ["How can I adjust the horizontal halo size around macros during endcap placement to ensure proper spacing in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_25.png", "q_text": "How can I adjust the horizontal halo size around macros during endcap placement to ensure proper spacing in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_25.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_37.png", "q_text": "How can I adjust the horizontal halo size around macros during tapcell insertion in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_37.png"], "neg_text": ["How can I remove all the tapcells with the prefix \"TAP_\" from the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_37.png", "q_text": "How can I remove all the tapcells with the prefix \"TAP_\" from the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_37.png"], "neg_text": ["How can I adjust the horizontal halo size around macros during tapcell insertion in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_32.png", "q_text": "How can I adjust the horizontal and vertical halo sizes around the macros in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_32.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_32.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_32.png"], "neg_text": ["How can I adjust the horizontal and vertical halo sizes around the macros in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_15.png", "q_text": "How can I adjust the placement rows in the design to avoid overlapping with the macro \"memSE\" by using halo widths?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_15.png"], "neg_text": ["How can I adjust the placement rows in the design shown in the screenshot to ensure they do not overlap with the macro \"memSE\"?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_15.png", "q_text": "How can I adjust the placement rows in the design shown in the screenshot to ensure they do not overlap with the macro \"memSE\"?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_15.png"], "neg_text": ["How can I adjust the placement rows in the design to avoid overlapping with the macro \"memSE\" by using halo widths?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_100.png", "q_text": "How can I remove the tapcell instance \"PHY_EDGE_ROW_21_Left_38\" shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_100.png"], "neg_text": ["How can I specify the prefix for the tapcell instances like \"PHY_EDGE_ROW_21_Left_38\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_100.png", "q_text": "How can I specify the prefix for the tapcell instances like \"PHY_EDGE_ROW_21_Left_38\" shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_100.png"], "neg_text": ["How can I remove the tapcell instance \"PHY_EDGE_ROW_21_Left_38\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_45.png", "q_text": "How can I adjust the distance between the tapcells in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_45.png"], "neg_text": ["How can I remove the fill cells with the prefix \"PHY_\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_45.png", "q_text": "How can I remove the fill cells with the prefix \"PHY_\" shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_45.png"], "neg_text": ["How can I adjust the distance between the tapcells in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_57.png", "q_text": "How can I remove the tap cell with the prefix \"PHY_\" shown in the screenshot?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_57.png"], "neg_text": ["How can I specify the distance between each tapcell in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_57.png", "q_text": "How can I specify the distance between each tapcell in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_57.png"], "neg_text": ["How can I remove the tap cell with the prefix \"PHY_\" shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_69.png", "q_text": "How can I ensure that there are no one-site gaps when inserting tapcells using the command shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_69.png"], "neg_text": ["In the provided script, how can I modify the `tapcell_ripup` command to only remove endcaps with the prefix \"TAPCELL_X1\"?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_69.png", "q_text": "In the provided script, how can I modify the `tapcell_ripup` command to only remove endcaps with the prefix \"TAPCELL_X1\"?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_69.png"], "neg_text": ["How can I ensure that there are no one-site gaps when inserting tapcells using the command shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_23.png", "q_text": "How can I specify the master cells for the endcaps shown in the layout using the `tapcell` command?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_23.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_23.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_23.png"], "neg_text": ["How can I specify the master cells for the endcaps shown in the layout using the `tapcell` command?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_90.png", "q_text": "How can I remove all tapcells and endcaps from the design shown in the screenshot using their prefixes?", "pos_doc": "id:tapcell_insertion_6\n### Remove Tapcells/Endcaps\n\nThis command is used for removing tapcells or endcaps based on their prefix.\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tap_prefix` | Remove tapcells with said prefix. |\n| `-endcap_prefix` | Remove endcaps with said prefix. |\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_90.png"], "neg_text": ["How can I ensure that no tapcells are placed at the top and bottom of the rows in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_6"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_90.png", "q_text": "How can I ensure that no tapcells are placed at the top and bottom of the rows in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_90.png"], "neg_text": ["How can I remove all tapcells and endcaps from the design shown in the screenshot using their prefixes?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_28.png", "q_text": "How can I adjust the halo size around the macros in the design shown in the screenshot to ensure proper placement of tapcells?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_28.png"], "neg_text": ["In the provided script, the `cut_rows` command is used with the `-endcap_master TAPCELL_X1` option. How can I specify a horizontal halo size around macros during the cut rows operation?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_28.png", "q_text": "In the provided script, the `cut_rows` command is used with the `-endcap_master TAPCELL_X1` option. How can I specify a horizontal halo size around macros during the cut rows operation?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_28.png"], "neg_text": ["How can I adjust the halo size around the macros in the design shown in the screenshot to ensure proper placement of tapcells?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_12.png", "q_text": "How can I adjust the `tapcell` command to ensure that no tapcells are placed at the top and bottom of the macros in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_12.png"], "neg_text": ["How can I adjust the placement rows around the macros in the design shown in the screenshot to ensure they do not overlap with the macros?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_12.png", "q_text": "How can I adjust the placement rows around the macros in the design shown in the screenshot to ensure they do not overlap with the macros?", "pos_doc": "id:tapcell_insertion_2\n### Cut Rows\n\nThis command cuts rows.\n\n```tcl\ncut_rows \n    [-endcap_master endcap_master]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-endcap_master` | Master used as an endcap. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_12.png"], "neg_text": ["How can I adjust the `tapcell` command to ensure that no tapcells are placed at the top and bottom of the macros in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_2"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_10.png", "q_text": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_3\n### Only adding boundary/endcap cells\n\nPlace endcaps into the design, the naming for the arguments to `place_endcaps` is based on the \nLEF58 `CLASS` specification foe endcaps.\n\n```tcl\nplace_endcaps\n    [-corner master]\n    [-edge_corner master]\n    [-endcap masters]\n    [-endcap_horizontal masters]\n    [-endcap_vertical master]\n    [-prefix prefix]\n    [-left_top_corner master]\n    [-right_top_corner master]\n    [-left_bottom_corner master]\n    [-right_bottom_corner master]\n    [-left_top_edge master]\n    [-right_top_edge master]\n    [-left_bottom_edge master]\n    [-right_bottom_edge master]\n    [-left_edge master]\n    [-right_edge master]\n    [-top_edge masters]\n    [-bottom_edge masters]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-prefix` | Prefix to use for the boundary cells. Defaults to \"PHY_\". |\n| `-corner` | Master for the corner cells on the outer corners. |\n| `-edge_corner` | Master for the corner cells on the inner corners. |\n| `-endcap` | Master used as an endcap. |\n| `-endcap_horizontal` | List of masters for the top and bottom row endcaps. (overrides `-endcap`). |\n| `-endcap_vertical` | Master for the left and right row endcaps. (overrides `-endcap`). |\n| `-left_top_corner` | Master for the corner cells on the outer top left corner. (overrides `-corner`). |\n| `-right_top_corner` | Master for the corner cells on the outer top right corner. (overrides `-corner`). |\n| `-left_bottom_corner` | Master for the corner cells on the outer bottom left corner. (overrides `-corner`). |\n| `-right_bottom_corner` | Master for the corner cells on the outer bottom right corner. (overrides `-corner`). |\n| `-left_top_edge` | Master for the corner cells on the inner top left corner. (overrides `-edge_corner`). |\n| `-right_top_edge` | Master for the corner cells on the inner top right corner. (overrides `-edge_corner`). |\n| `-left_bottom_edge` | Master for the corner cells on the inner bottom left corner. (overrides `-edge_corner`). |\n| `-right_bottom_edge` | Master for the corner cells on the inner bottom right corner. (overrides `-edge_corner`). |\n| `-left_edge` | Master for the left row endcaps. (overrides `-endcap_vertical`). |\n| `-right_edge` | Master for the right row endcaps. (overrides `-endcap_vertical`). |\n| `-top_edge` | List of masters for the top row endcaps. (overrides `-endcap_horizontal`). |\n| `-bottom_edge` | List of masters for the bottom row endcaps. (overrides `-endcap_horizontal`). |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_10.png"], "neg_text": ["How can I ensure that the endcaps are placed at the top and bottom of the rows in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_3"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_10.png", "q_text": "How can I ensure that the endcaps are placed at the top and bottom of the rows in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_10.png"], "neg_text": ["How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_40.png", "q_text": "How can I specify the distance between tapcells when placing them in the design shown in the screenshot?", "pos_doc": "id:tapcell_insertion_4\n### Only adding Tapcells\n\nThis command is used for tapcell placement only.\n\n```tcl\nplace_tapcells\n    -master tapcell_master\n    -distance dist\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-master` | Master to use for the tapcells. |\n| `-distance` | Distance between tapcells. |\n\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_40.png"], "neg_text": ["How can I ensure that the tapcell instances, like the one shown in the screenshot, are placed with a specific distance between each other in the layout?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_4"]}
{"q_img": "source_images/tapcell_insertion/tap_cell_40.png", "q_text": "How can I ensure that the tapcell instances, like the one shown in the screenshot, are placed with a specific distance between each other in the layout?", "pos_doc": "id:tapcell_insertion_1\n### Add Tapcell/Endcap\n\nThis command inserts tapcells or endcaps.\n\nThe figures below show two examples of tapcell insertion. When only the \n`-tapcell_master` and `-endcap_master` masters are given, the tapcell placement\nis similar to Figure 1. When the remaining masters are give, the tapcell\nplacement is similar to Figure 2.\n\n| <img src=\"./doc/image/tapcell_example1.svg\" width=450px> | <img src=\"./doc/image/tapcell_example2.svg\" width=450px> |\n|:--:|:--:|\n| Figure 1: Tapcell insertion representation | Figure 2:  Tapcell insertion around macro representation |\n\n\n```tcl\ntapcell \n    [-tapcell_master tapcell_master]\n    [-tap_prefix tap_prefix]\n    [-endcap_master endcap_master]\n    [-endcap_prefix endcap_prefix]\n    [-distance dist]\n    [-disallow_one_site_gaps]\n    [-halo_width_x halo_x]\n    [-halo_width_y halo_y]\n    [-tap_nwin2_master tap_nwin2_master]\n    [-tap_nwin3_master tap_nwin3_master]\n    [-tap_nwout2_master tap_nwout2_master]\n    [-tap_nwout3_master tap_nwout3_master]\n    [-tap_nwintie_master tap_nwintie_master]\n    [-tap_nwouttie_master tap_nwouttie_master]\n    [-cnrcap_nwin_master cnrcap_nwin_master]\n    [-cnrcap_nwout_master cnrcap_nwout_master]\n    [-incnrcap_nwin_master incnrcap_nwin_master]\n    [-incnrcap_nwout_master incnrcap_nwout_master]\n    [-tbtie_cpp tbtie_cpp]\n    [-endcap_cpp endcap_cpp]\n    [-no_cell_at_top_bottom]\n```\n\n#### Options\n\n| Switch Name | Description |\n| ----- | ----- |\n| `-tapcell_master` | Master used as a tapcell. |\n| `-tap_prefix` | Prefix for the tapcell instances. The default value is `TAP_`. |\n| `-endcap_master` | Master used as an endcap. |\n| `-endcap_prefix` | Prefix for the endcaps instances. The default value is `PHY_`. |\n| `-distance` | Distance (in microns) between each tapcell in the checkerboard. |\n| `-disallow_one_site_gaps` | KIV. |\n| `-halo_width_x` | Horizontal halo size (in microns) around macros during cut rows. |\n| `-halo_width_y` | Vertical halo size (in microns) around macros during cut rows. |\n| `-tap_nwintie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwin2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwintie_master` |\n| `-tap_nwin3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwin2_master`. |\n| `-tap_nwouttie_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. |\n| `-tap_nwout2_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwouttie_master`. |\n| `-tap_nwout3_master` | Master cell placed at the top and bottom of macros and the core area according the row orientation. This master should be smaller than `tap_nwout2_master`. |\n| `-incnrcap_nwin_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-incnrcap_nwout_master` | Master cell placed at the corners of macros, according the row orientation. |\n| `-cnrcap_nwin_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-cnrcap_nwout_master` | Macro cell placed at the corners the core area according the row orientation. |\n| `-tbtie_cpp` | Option is deprecated. |\n| `-endcap_cpp` | Option is deprecated. |\n| `-no_cell_at_top_bottom` | Option is deprecated. |\n\n## Commands\n\n```{note}\n- Parameters in square brackets `[-param param]` are optional.\n- Parameters without square brackets `-param2 param2` are required.\n```\n\n", "neg_img": ["source_images/tapcell_insertion/tap_cell_40.png"], "neg_text": ["How can I specify the distance between tapcells when placing them in the design shown in the screenshot?"], "q_type": "it", "c_type": "mix", "reference": ["tapcell_insertion_1"]}
