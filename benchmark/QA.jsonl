{"id": 1, "question": " After running partition on my circuit, why there are so many unconstrained hyperedges?", "image": "q1.png", "answer": " `global_net_threshold` specifies the maximal number of net that will be considered, and if the number of nets is larger than this threshold, the extra nets will be ignored. Currently the `global_net_threshold` is set to a small number, and nets with larger degree will be ignored. You should set a larger value of global_net_threshold, for example, 2000.\\n The tcl example is as follows:\\n```\\n triton_part_design -global_net_threshold 2000\\n```.", "reference": ["partition_manager_7"], "type": "Error Traceback"}
{"id": 2, "question": " For floorplan, I use the command `initialize_floorplan -die_area \"0 0 100 100\" -core_area \"10 10 90 90\" -aspect_ratio 0.3 -site site_Dummy`, why the resulted die is still a sqaure instead of a rectangle with aspect ratio 0.3?", "image": "q2.png", "answer": "There are two ways to set the floorplan dimensions: manually specifying the die/core area or specifying the utilization/aspect ratio. If both methods are used simultaneously, unexpected behavior might occur. To do floorplan with target aspect ratio, you should set the specific values of `utilization` and `aspect_ratio`, for example, you can run:\\n```\\ninitialize_floorplan -utilization 70 -aspect_ratio 0.3 -site site_Dummy\\n```", "reference": ["floorplan_initialization_1"], "type": "Layout"}
{"id": 3, "question": " The space between the core and the die is too small in the screenshot. How to enlarge the space between the core and die.", "image": "q3.png", "answer": " You can use the command `initialize_floorplan` with the option `core_space` to add space between core and die. The default value of `core_space` is 0, means no space in between. You can set `core_space` to be a reasonable value. You can set a single value for uniform spacing or provide four values for different spacing on each side. For example, to set a uniform space of 50 around the core, you can use:\n```tcl\ninitialize_floorplan -die_area {die area} -core_area {core area} -core_space 50\n```\n\nOr, to set different spaces for each side, you can use:\n```tcl\ninitialize_floorplan -die_area {die area} -core_area {core area} -core_space {15 20 25 30}\n```\n", "reference": ["floorplan_initialization_1"], "type": "Layout"}
{"id": 4, "question": "After make tracks, I get the warning in the screenshot, how should I fix?", "image": "q4.png", "answer": " From the screenshot, the width of the die is 200, and in your `make_tracks` command, the value of `-x_offset` is set to be 300. To solve the warning, you need to ensure that the x_offset value is less than the width of the die, for example, you can set `x_offset` to be a value less than 200.", "reference": ["floorplan_initialization_2"], "type": "Error Traceback"}
{"id": 5, "question": " When setting the mirror constraints of io pins, I get the following error, how can I resolve it?", "image": "q5.png", "answer": "The error message indicates that the list of pins must have an even number of pins. When you use the `-mirrored_pins` option of the `set_io_pin_constraint` command, the number of pins in the `mirrored_pins` list must be even. For example, you can use \n\n```tcl\nset_io_pin_constraint -mirrored_pins {pin1 pin2 pin3 pin4}\n```\n\n", "reference": ["pin_placement_2"], "type": "Error Traceback"}
{"id": 6, "question": " When setting the io pin constraints, I get the following error, how to solve?", "image": "q6.png", "answer": " The error message indicates that both -region and -mirrored_pins constraints are not allowed. To solve the error, you should use only one type of constraint at a time. If you need to set region constraints, use the `-region` argument without the `-mirrored_pins` argument. If you need to set mirrored pins, use the `-mirrored_pins` argument without the `-region` argument.", "reference": ["pin_placement_2"], "type": "Error Traceback"}
{"id": 7, "question": " When setting the io pin constraints, I get the following error, how to solve?", "image": "q7.png", "answer": " As in the log, when `-group` flag is enabled, the `-pin_names` argument is required. Therefore, you should include both `-pin_names` and `-group` in your command to avoid the error.", "reference": ["pin_placement_2"], "type": "Error Traceback"}
{"id": 8, "question": " I use OpenROAD to first set the io pin constraints and then run pin placement, and I get the following error, how to debug and solve?", "image": "q8.png", "answer": " In your command, you set the constraints that all pins are placed on the top region with the range between 10 and 30, the space is too small to contain all pins. To solve this issue, you can set larger range of `region` and then retry the `place_pins` command. One example of the tcl script is as follows:\\n```set_io_pin_constraint -region top:10-50 -pin_names {*}\\nplace_pins -hor_layers metal3 -ver_layers metal2\\n```", "reference": ["pin_placement_2", "pin_placement_10"], "type": "Error Traceback"}
{"id": 9, "question": " In my layout, I want all io pins with direction \"INPUT\" to be placed on the top of the die, how should I do that?", "image": "q9.png", "answer": " To place all input io pins to the top, first, set the io constraints as follows:\\n```\\nset_io_contraint -direction INPUT -region top:*\\n```\\nAnd then, use the `place_pins` command to automatically place the pins.", "reference": ["pin_placement_2", "pin_placement_10"], "type": "Functionality"}
{"id": 10, "question": "I don't want the pins to be placed on the region of the green rectangle in the screenshot, what should I do?", "image": "q10.png", "answer": " From the image, we can see that the green rectangle highlights the bottom boundary of the layout. You want to exclude the pins from being placed on this region. To do this, you can use the `place_pins` command with the `-exclude` option. For example, you can use `place_pins -hor_layers metal3 -ver_layers metal2 -exclude bottom:*`", "reference": ["pin_placement_10"], "type": "Layout"}
{"id": 11, "question": " I place pins with some group constraints and get the following error, how should I resolve?", "image": "q11.png", "answer": " In the screenshot, pins resp_msg[13] and resp_msg[11] are assigned to more than one groups, which causes the error. Putting each pin to exactly one group will solve this error.", "reference": ["pin_placement_2"], "type": "Error Traceback"}
{"id": 12, "question": "I run pin placement and get the layout in the screenshot,  how to align the pin highlighted in the red rectangle to the routing track?", "image": "q12.png", "answer": " To align the pin highlighted in the red rectangle to the routing track, you can use the `place_pin` command with the `-force_to_die_boundary` option. This option will snap the pin to the nearest routing track next to the die boundary. For example, you can use the command `place_pin -pin_name clk -layer met4 -location {40 0} -force_to_die_boundary`.", "reference": ["pin_placement_9"], "type": "Layout"}
{"id": 13, "question": " When I use the `place_pins` command, I get the following error. How should I debug and solve this issue?", "image": "q13.png", "answer": " The log denotes that there's no routing tracks for layer metal3. You should first generate routing tracks by the command `make_tracks`, and then run `place_pins`.", "reference": ["floorplan_initialization_2", "pin_placement_10"], "type": "Error Traceback"}
{"id": 14, "question": "In the screenshot, why the pins are out of the die boundary?", "image": "q14.png", "answer": " The reason may be that you used the command `set_pin_length_extension` before `place_pins`. `set_pin_length_extension` may generate pins partially outside the die area.", "reference": ["pin_placement_5", "pin_placement_10"], "type": "Layout"}
{"id": 15, "question": " When I run `place_pin`, I get the following error, how should I solve?", "image": "q15.png", "answer": " The error message indicates that the pin `qq` for the `place_pin` command was not found. Ensure that the pin name specified in the command matches the pin name in your design.", "reference": ["pin_placement_9"], "type": "Error Traceback"}
{"id": 16, "question": " I use `place_pin` to place several pins to the desired position and layer, but get the following error. How should i fix?", "image": "q16.png", "answer": " The `place_pin` command can only place one pin at one time, but you provided multiple pin names. To place two pins, you should follow the script:\\n```\\nplace_pin -pin_name clk -layer metal7 -location {40 30} -pin_size {1.6 2.5}\\nplace_pin -pin_name req_val -layer metal7 -location {40 30} -pin_size {1.6 2.5}\\n```", "reference": ["pin_placement_9"], "type": "Error Traceback"}
{"id": 17, "question": " When I use `place_pin` to place one pin, I get the following error, how should I debug and solve?", "image": "q17.png", "answer": " As is in the log, the min width of layer metal7 is 0.4u, but the pin height is set to 0.35. To fix, just run `place_pin -pin_name clk -layer metal7 -location {40 30} -pin_size {1.6 0.4}`, where the pin height is set to a number larger than or equal to 0.4.", "reference": ["pin_placement_9"], "type": "Error Traceback"}
{"id": 18, "question": " When I generate the bump array, I found that some bumps are out of the die boundary. What is the reason and how should I solve?", "image": "q18.png", "answer": " The bumps are out of the die boundary because the origin, the number of rows and columns and the pitch of the bump array are not correctly set. To make the bump array within the die boundary, you can either decrease the number of `-rows` and `-columns`, adjust the value of `origin`, or set a smaller number for the `-pitch`.", "reference": ["chip-level_connections_2"], "type": "Error Traceback"}
{"id": 19, "question": " When I make the io sites, I find that the distance between the row and the die is very close. I want to enlarge the distance, what command should I use?", "image": "q19.png", "answer": " For the command `make_io_sites `, the argument `-offset` controls the offset from the die edge to the row. If you want the distance between the row and the die to be larger, you can set a larger value of `-offset`.", "reference": ["chip-level_connections_6"], "type": "Functionality"}
{"id": 20, "question": " When placing the io terminal, I get the error in the screenshot, what is the reason and how can I solve?", "image": "q20.png", "answer": " The error message indicates that the terminal shape is not found on the specified layer (metal10). It is possible that the shape is not on the top layer. You can try the flag `-allow_non_top_layer` of the command `place_io_terminals`. Specifically, you can run `place_io_terminals -allow_non_top_layer */PAD`.", "reference": ["chip-level_connections_1"], "type": "Error Traceback"}
{"id": 21, "question": " After placing pad and placing bondpad, I find that the bondpad is placed at the left of the IO pad. How should I adjust such that the bondpad can be placed to the center of the IO pad?", "image": "q21.png", "answer": " When using the command `place_bondpad`, you can adjust the argument `-offset` to adjust the offset of the bondpad with respect to the io instance. ", "reference": ["chip-level_connections_12"], "type": "Layout"}
{"id": 22, "question": " During placing pad, why I get the following error of mismatch?", "image": "q22.png", "answer": " The error happends for the command `place_pad -master PADCELL_SIG_H -row IO_WEST -location 600 \"u_ddr_cke_o\"`. The master cell for `u_ddr_cke_o` is `PADCELL_SIG_V`, but in your command, you set the master as `PADCELL_SIG_H`, which is the mismatch and leads to the error. To place the pad correctly, you can use `place_pad -master PADCELL_SIG_V -row IO_WEST -location 600 \"u_ddr_cke_o\"`.", "reference": ["chip-level_connections_9"], "type": "Error Traceback"}
{"id": 23, "question": "In the screenshot, how to fill the spaces in the IO sites?", "image": "q23.png", "answer": " You can use the command `place_io_fill` to place the filler cells in the IO rows.", "reference": ["chip-level_connections_10"], "type": "Functionality"}
{"id": 24, "question": "In my layout, the macros are in the middle of the core. How should I push them to the boundary?", "image": "q24.png", "answer": " You can enable the `corner_max_wl` style of `macro_placement` command, which will maximise the wirelength of connections between the macros to force them to the corners.", "reference": ["macro_placement_1"], "type": "Layout"}
{"id": 25, "question": " How to add some spaces between these two macros in the screenshot?", "image": "q25.png", "answer": " You can set the `-halo` argument of the `macro_placement` command, which add horizontal and vertical halos around macros. Specifically, if you want the halo to be 10 during macro placement, you can use the script `macro_placement -halo {10 10}`.", "reference": ["macro_placement_1"], "type": "Functionality"}
{"id": 26, "question": " In the layout, the placement rows are overlapped with the macro, how should I adjust such that the rows overlapped with the macro are removed?", "image": "q26.png", "answer": " You can use the `cut_rows` command to cut the row regarding the macro blockage. There is one example: `cut_rows -endcap_master endcap_master`, where `-endcap_master` denotes the master used as an endcap. Here is an example of how to use the command:\n\n```tcl\ncut_rows \n    -endcap_master endcap_master\n    -halo_width_x halo_x\n    -halo_width_y halo_y\n```", "reference": ["tapcell_insertion_2"], "type": "Layout"}
{"id": 27, "question": " How to automatically remove all those placed tapcells and endcaps?", "image": "q27.png", "answer": " You can use the `tapcell_ripup` command. The command syntax is as follows:\n\n```tcl\ntapcell_ripup\n    -tap_prefix tap_prefix\n    -endcap_prefix endcap_prefix\n```", "reference": ["tapcell_insertion_6"], "type": "Functionality"}
{"id": 28, "question": " For PDN, when I run the `pdngen` command, I get the following error in the screenshot, why and how should I solve?", "image": "q28.png", "answer": " In the log, after defining the pdn grid, you run `pdngen` without any shapes or vias in your grid, and thus OpenROAD failed to enerate full power grid. To solve, use the `add_pdn_stripe` and `add_pdn_connect` commands to add stripes and connections to your power grid, and then run `pdngen`.", "reference": ["power_distribution_network_generator_5", "power_distribution_network_generator_8", "power_distribution_network_generator_1"], "type": "Error Traceback"}
{"id": 29, "question": " In OpenROAD, I add two pdn stripes and then run `pdngen`, however, I get the error in the screenshot, how should I solve?", "image": "q29.png", "answer": " The issue arises because you have added followpin stripes on two layers but haven't connected them. Before run `pdngen`, you need to add connection between these two stripes using the command `add_pdn_connect -layers {M1 M2}`.", "reference": ["power_distribution_network_generator_5", "power_distribution_network_generator_8", "power_distribution_network_generator_1"], "type": "Error Traceback"}
{"id": 30, "question": " In my PDN design, as is shown in the screenshot, the distances between the stripe pairs is too small and the stripes are very close to each other. How should I increase the distance between the stripe pairs?", "image": "q30.png", "answer": " In OpenROAD, the command `add_pdn_stripe` defines the patterns of power and ground stripes, and its argument `-pitch` controls the distance between each power/ground pair. To increase the distance between the stripe pairs, you can first set a larger value of `-pitch` for `add_pdn_stripe`, and then run `pdngen`. The script sample is as follows:\\n```\\n add_pdn_stripe -layer layer_name -pitch pitch_value\\n pdngen\\n```\\n.", "reference": ["power_distribution_network_generator_5", "power_distribution_network_generator_1"], "type": "Layout"}
{"id": 31, "question": " In OpenROAD, I add PDN rings around the chip. However, I find that the ring is not attached to the die boundary, as is shown in the screenshot. What should I do to extend the rings to the die boundary?", "image": "q31.png", "answer": " To extend the PDN rings to the die boundary, you can use the `-extend_to_boundary` option in the `add_pdn_ring` command. For example, you can use ```tcl\nadd_pdn_ring -layers {metal2 metal3} -widths 2.0 -spacings 2.0 -core_offset 10 -extend_to_boundary\n```.", "reference": ["power_distribution_network_generator_7"], "type": "Layout"}
{"id": 32, "question": " How to solely do PDN on macros?", "image": "q32.png", "answer": " To solely do PDN on macros, you can use the `define_pdn_grid` command with the `-macro` option. One tcl example is `define_pdn_grid -macro -name ram -orient {R0 R180 MX MY} -grid_over_pg_pins  -starts_with POWER -pin_direction vertical`.", "reference": ["power_distribution_network_generator_3"], "type": "Functionality"}
{"id": 33, "question": " I run PDN using OpenROAD and the error in the screenshot, what is the reason and how should I solve?", "image": "q33.png", "answer": " In your command `add_pdn_ring -grid \"Core\" -layers {metal5 metal6} -widths 2.001 -spacings 2.0 -core_offsets 2.0`, you set the `-widths` to be 2.001, which does not aligh with the manufacturing grid (0.0050). Therefore, the value of `-widths` should be set to multiply of the manufacturing grid (0.0050).", "reference": ["power_distribution_network_generator_7"], "type": "Error Traceback"}
{"id": 34, "question": " I get the following error when I check the power grid, why and how to solve?", "image": "q34.png", "answer": " One possible reason is that there are non-fixed instances in the power grid, and you should enable the `-floorplanning` flag when using the `check_power_grid` command. You can use `check_power_grid -net VDD -floorplanning`.", "reference": ["IR_Drop_analysis_2"], "type": "Error Traceback"}
{"id": 35, "question": " How to merge the DFFs together to reduce the number of instances, while maintain the functionality unchanged?", "image": "q35.png", "answer": " You can use the `cluster_flops` command. One example is ```cluster_flops\\n  -tray_weight tray_weight\\n  -timing_weight timing_weight\\n  -max_split_size max_split_size\\n  -num_paths num_paths\\n```.", "reference": ["global_placement_2"], "type": "Functionality"}
{"id": 36, "question": " Based on one global placement result shown in the screenshot, I want to render incremental placement, what command should I use?", "image": "q36.png", "answer": " You can utilize the `-incremental` flag of the `global_placement` command for incremental placement.", "reference": ["global_placement_1"], "type": "Functionality"}
{"id": 37, "question": " How to remove the buffer in the screenshot?", "image": "q37.png", "answer": " You can use the command `remove_buffers input1` to remove the buffer named \"input1\" in the screenshot.", "reference": ["gate_resizing_9"], "type": "GUI"}
{"id": 38, "question": " Why `estimate_parasitics` get the following warning?", "image": "q38.png", "answer": " From the screenshot log, you have not set the values of RC, you need to use the `set_wire_rc` command to set RC before you run `estimate_parasitics -placement`.", "reference": ["gate_resizing_3", "gate_resizing_1"], "type": "Error Traceback"}
{"id": 39, "question": " Why `estimate_parasitics` get the following error?", "image": "q39.png", "answer": " From the screenshot log, it seems that the design has not been routed when you call `estimate_parasitics -global_routing`. Make sure the design is routed when you run `estimate_parasitics -global_routing`.", "reference": ["gate_resizing_3"], "type": "Error Traceback"}
{"id": 40, "question": " The wire on the clock net is very long, as is shown in the screenshot. How should I fix?", "image": "q40.png", "answer": " You can use the `repair_clock_nets` command to insert buffers on the clock wire. The `-max_wire_length` argument controls the wire length of each wire after inserting the clock buffer.", "reference": ["gate_resizing_14"], "type": "Layout"}
{"id": 41, "question": " The detail placement causes large displacement shown in the screenshot. How should I decrease the displacement during detail placement?", "image": "q41.png", "answer": " You can set a smaller value of `-max_displacement` when run `detailed_placement`.", "reference": ["detailed_placement_1"], "type": "Error Traceback"}
{"id": 42, "question": " Why `check_placement` fail on this design in the screenshot?", "image": "q42.png", "answer": " From the screenshot of the design, the standard cells overlap with the block, thus the placement is illegal.", "reference": ["detailed_placement_5"], "type": "Layout"}
{"id": 43, "question": " Why `check_placement` fail on this design in the screenshot?", "image": "q43.png", "answer": " From the screenshot, the placed instances are not aligned with the grid. ", "reference": ["detailed_placement_5"], "type": "Layout"}
{"id": 44, "question": " In my synthesized clock tree, I found some clock buffers are on the macro as is shown in the screenshot, what should I do to avoid this?", "image": "q44.png", "answer": " You should enable the `-obstruction_aware` flag when using the `clock_tree_synthesis` for clock tree synthesis. ", "reference": ["clock_tree_synthesis_2"], "type": "Layout"}
{"id": 45, "question": " The clock tree shown in the screenshot is very unbalanced, how can I balance it.", "image": "q45.png", "answer": " You can use the `clock_tree_synthesis` command the synthesize a balance clock tree. Also, you can enable the `-balance_levels` command to keep a similar number of levels in the clock tree across non-register cells.", "reference": ["clock_tree_synthesis_2"], "type": "Layout"}
{"id": 46, "question": " How to visualize the routing guide of the net in the screenshot?", "image": "q46.png", "answer": " You can use `draw_route_guides` to visualize route guides for nets. From the screenshot, the name of the net is `clknet_2_3__leaf_clk`, so you can use the command `draw_route_guides clknet_2_3__leaf_clk`.", "reference": ["global_routing_10"], "type": "GUI"}
{"id": 47, "question": " When I run `draw_route_guides clknet_2_3__leaf_clk`, why the routing guide is not visualized in the layout.", "image": "q47.png", "answer": " From the screenshot you provide, it seems that you run `draw_route_guides clknet_2_3__leaf_clk` without `global_route`, and the routing guide has not been generated. Therefore, you should run `global_route` before calling `draw_route_guides clknet_2_3__leaf_clk`.", "reference": ["global_routing_1", "global_routing_10"], "type": "Error Traceback"}
{"id": 48, "question": " During global routing, I get the following error says the congestion is too high and routing fails. What should I do to continue the routing even if the congestion is high?", "image": "q48.png", "answer": " You can enable the `-allow_congestion` flag for the `global_route` command. The `-allow_congestion` allows global routing results to be generated with remaining congestion.", "reference": ["global_routing_1"], "type": "Error Traceback"}
{"id": 49, "question": " After global routing, I find that the usage of later metal 3 is quite high, as is shown in the screenshot log. How to reduce the usage of metal 3 during global routing?", "image": "q49.png", "answer": " You can use the `set_global_routing_layer_adjustment` to reduce the number of routing tracks that the global router assumes to exist. For example, you can set `set_global_routing_layer_adjustment met3 0.8` and then run `global_route`.", "reference": ["global_routing_1", "global_routing_5"], "type": "Error Traceback"}
{"id": 50, "question": " When do I get the error in the following screenshot when I'm setting routing layers and how to solve?", "image": "q50.png", "answer": " You command for setting routing layers is `set_routing_layers -signal met1-met5 -clock met3-met5`, however, from the screenshot, we can see the names of metal layers are `metal1`, `metal2`, etc. Thus, you should modify your command to `set_routing_layers -signal metal1-metal5 -clock metal3-metal5`.", "reference": ["global_routing_2"], "type": "GUI"}
{"id": 51, "question": " How to highlight the net `_01233_` shown in the screenshot?", "image": "q51.png", "answer": " You can use `gui::highlight_net _01233_` in the GUI.", "reference": ["gui_32"], "type": "GUI"}
{"id": 52, "question": " I want to visualize the timing cones of this pin shown in the Inspector of the screenshot, what should I do?", "image": "q52.png", "answer": " You can use the command `display_timing_cone _24498_/X`.", "reference": ["gui_8"], "type": "GUI"}
{"id": 53, "question": " How to get the wirelength of the net circled in the GUI screenshot?", "image": "q53.png", "answer": " You can use the command `report_wire_length -net _12464_`.", "reference": ["global_routing_11"], "type": "GUI"}
{"id": 54, "question": " How should I visualize the clock tree in this window?", "image": "q54.png", "answer": " Click the `Update` button to view the synthesized clock tree of your design.", "reference": ["flow-scripts-tutorial_18"], "type": "GUI"}
{"id": 55, "question": " How can I show the DRC violation report in my GUI?", "image": "q55.png", "answer": " From OpenROAD GUI, Enable the menu options Windows -> DRC Viewer. A DRC viewer window is added on the right side (RHS) of the GUI. From DRC Viewer -> Load navigate to the drc report file.", "reference": ["flow-scripts-tutorial_22"], "type": "GUI"}
{"id": 56, "question": " How to fix the timing violation shown in the screenshot?", "image": "q56.png", "answer": " In the screenshot, the timing violation is the setup violation. Therefore, you can use the command `repair_timing -setup` to fix the setup violation.", "reference": ["gate_resizing_13", "flow-scripts-tutorial_38", "flow-scripts-tutorial_40"], "type": "GUI"}
{"id": 57, "question": "After the congestion-driven routing, most of the congestions are fixed. However, the timing is worsen as is shown in the screenshot. How should I improve both congestion and timing during grt?", "image": "q57.png", "answer": "The option `-critical_nets_percentage` of the command `global_route` considers timing optimization during congestion-driven global routing. The default value of `-critical_nets_percentage` is 0, and you can set a larger value to consider timing-critical nets during grt.", "reference": ["global_routing_1"], "type": "GUI"}
{"id": 58, "question": "How can I adjust the placement of the IO pad `mprj_pads.area1_io_pad[1]` to a different location on the IO_SOUTH row?", "image": "q58.png", "answer": ": To adjust the placement of the IO pad `mprj_pads.area1_io_pad[1]` to a different location on the IO_SOUTH row, you can use the `place_pad` command. Specify the `-row` as `IO_SOUTH` and provide the desired `-location` offset from the bottom left chip edge. For example:\\n\\n```tcl\\nplace_pad -row IO_SOUTH -location <new_offset> mprj_pads.area1_io_pad[1]\\n```\\n\\nReplace `<new_offset>` with the new desired location value.", "reference": ["chip-level_connections_9"], "type": "Functionality"}
{"id": 59, "question": "The screenshot shows an error with the `clock_tree_synthesis` command due to the use of an unknown flag `-use_dummy_load`. What is the correct flag to control dummy load usage in clock tree synthesis?", "image": "q59.png", "answer": ": The correct flag to control dummy load usage in clock tree synthesis is `-dont_use_dummy_load`. This option, when set to `True`, prevents the application of dummy buffer or inverter cells at clock tree leaves to balance loads. The default value is `False`.", "reference": ["clock_tree_synthesis_2"], "type": "Functionality"}
{"id": 60, "question": "How can I adjust the CTS characterization parameters to address the slew violation shown for the pin \\\"r1/CLK\\\" in the screenshot?", "image": "q60.png", "answer": "To address the slew violation for the pin \\\"r1/CLK\\\", you can configure the CTS characterization parameters by adjusting the `-max_slew` option. This parameter sets the maximum slew value that the characterization will test. By increasing the `-max_slew` value, you may be able to accommodate the current slew of 1.96, which is causing the violation. Use the `configure_cts_characterization` command to set this parameter appropriately.", "reference": ["clock_tree_synthesis_1"], "type": "Functionality"}
{"id": 61, "question": "In the screenshot, after floorplan, the core area lower left coordinates are snapped from (10.000, 30.000) to (10.070, 30.800). What could be causing this snapping behavior, and how can it be adjusted?,", "image": "q61.png", "answer": "The snapping behavior of the core area coordinates is likely due to the alignment requirements of the site rows specified by the `-site` parameter. The site defines the basic single-height rows, and the core area must align with these rows. To adjust this behavior, you can modify the site parameters or ensure that the core area coordinates are multiples of the site dimensions to prevent snapping.", "reference": ["floorplan_initialization_1"], "type": "Layout"}
{"id": 62, "question": "After running the `make_tracks` command, the tracks in the screenshot appear misaligned. How can I adjust to correct this?", "image": "q62.png", "answer": "To adjust the alignment of the tracks, you can use the `-x_offset` and `-y_offset` options in the `make_tracks` command. These options allow you to override the LEF technology x-/y- offset. Adjusting these values can help align the tracks correctly.", "reference": ["floorplan_initialization_2"], "type": "Layout"}
{"id": 63, "question": "In the screenshot, the `initialize_floorplan` command is used with `-aspect_ratio 0.2`, but the core area seems to be a narrow strip. How can I adjust to achieve a more balanced core shape?", "image": "q63.png", "answer": "To achieve a more balanced core shape, you can adjust the `-aspect_ratio` parameter. The aspect ratio is defined as the ratio of height to width. If the core appears too narrow, consider increasing the aspect ratio value closer to 1.0, which will make the core more square-like", "reference": ["floorplan_initialization_1"], "type": "Layout"}
{"id": 64, "question": "How can I address the long wires on the clock net shown in the screenshot?,", "image": "q64.png", "answer": "To address the long wires shown in the screenshot, you can use the `repair_clock_nets` command. This command inserts buffers in the wire from the clock input pin to the clock root buffer, which can help manage long wires in clock nets. You can specify the `-max_wire_length` option to set the maximum length of wires, which defaults to a value that minimizes the wire delay for the wire RC values specified by `set_wire_rc`.", "reference": ["gate_resizing_14"], "type": "Layout"}
{"id": 65, "question": "How can I ensure that the routing layers specified in the screenshot are within the min/max routing layer range using the available commands?", "image": "q65.png", "answer": "You can use the `check_routing_layer` command to verify if the routing layers specified (e.g., met1 to met5) are within the min/max routing layer range. This command checks if the layer is within the specified limits, ensuring that your routing layers are correctly set", "reference": ["global_routing_15"], "type": "Functionality"}
{"id": 66, "question": "What vlaue is the global net threshold set in the partitioning process, and how does it affect the partitioning outcome?", "image": "q66.png", "answer": ": The global net threshold parameter determines the size of nets that will be ignored during the partitioning process. By setting it to 1000, any net larger than this threshold will not be considered by TritonPart. This can help reduce complexity and improve performance by focusing on smaller, more manageable nets.", "reference": ["partition_manager_5"], "type": "Functionality"}
{"id": 67, "question": "How can I ensure that pins are not placed on the left boundary of the die when using the `place_pins` command, as shown in the screenshot?", "image": "q67.png", "answer": "To ensure that pins are not placed on the left boundary of the die, you can use the `-exclude` option with the `place_pins` command. For example, you can specify `-exclude left:*` to exclude the entire left edge from pin placement.", "reference": ["pin_placement_10"], "type": "Layout"}
{"id": 68, "question": "In the screenshot, the PDN ring seems to be offset from the grid boundary. How can I adjust the PDN ring to extend to the boundary using OpenROAD?", "image": "q68.png", "answer": "To extend the PDN ring to the grid boundary in OpenROAD, you can use the `-extend_to_boundary` option in the `add_pdn_ring` command. This option will ensure that the rings are extended to the grid boundary, aligning them with the edges of the design area.", "reference": ["power_distribution_network_generator_7"], "type": "Layout"}
{"id": 69, "question": "How can I remove the tapcell with the prefix \\\"TAP_TAPCELL\\\" as shown in the screenshot?", "image": "q69.png", "answer": "You can remove the tapcell with the prefix \\\"TAP_TAPCELL\\\" by using the `tapcell_ripup` command with the `-tap_prefix` option. The command would look like this:\\n\\n```tcl\\ntapcell_ripup -tap_prefix TAP_TAPCELL\\n```\\n\\nThis command will remove all tapcells that have the specified prefix.", "reference": ["tapcell_insertion_6"], "type": "Functionality"}
{"id": 70, "question": "How can I specify different masters for the top and bottom row endcaps in the design shown in the screenshot?", "image": "q70.png", "answer": "You can specify different masters for the top and bottom row endcaps using the `-endcap_horizontal` option in the `place_endcaps` command. This option allows you to list the masters for the top and bottom row endcaps, overriding the general `-endcap` option.", "reference": ["tapcell_insertion_3"], "type": "Functionality"}
{"id": 71, "question": "In the Clock Tree Viewer shown in the sceenshot, how to visualize the synthesized clock tree?", "image": "q71.png", "answer": "You can clock the `Update` botton to view the synthesized clock tree of your design.", "reference": ["flow-scripts-tutorial_18"], "type": "GUI"}
{"id": 72, "question": "How to use heat map to visualize the placement density as shown in the screenshot, in the OpenROAD GUI?", "image": "q72.png", "answer": "From the Menu Bar, you can click on `Tools` -> `Heat Maps` -> `Placement Density` to view the placement density of the design.", "reference": ["flow-scripts-tutorial_19"], "type": "GUI"}
{"id": 73, "question": "How to fit the OpenROAD GUI using command, as shown in the screenshot?", "image": "q73.png", "answer": "To fit the whole layout in the window:\\n\\n```tcl\\ngui::fit\\n```.", "reference": ["gui_16"], "type": "GUI"}
{"id": 74, "question": "How to rebuild the heatmap in the screenshot, use the TCL command?", "image": "q74.png", "answer": "The heatmap on the screenshot is for routing congestion. To rebuild the heatmap:n\\n```tcl\\ngui::set_heatmap Routing rebuild\\n```.\\n In this command, `Routing` is the name of heatmap, and the `option` value is `rebuild`.", "reference": ["gui_38"], "type": "GUI"}
{"id": 75, "question": "How to use the TCL command to pause the routing process in OpenROAD?", "image": "q75.png", "answer": "You can use the `gui::pause` command to pause the execution of the routing script.", "reference": ["gui_45"], "type": "GUI"}
{"id": 76, "question": "The screenshot shows the post-routing congestion map of a design, how should I get the congestion map file?", "image": "q76.png", "answer": "You can use the `detailed_route` command for detailed routing, and specify the output path of the congestion map file by the option `-output_cmap`.", "reference": ["detailed_routing_1"], "type": "Functionality"}
{"id": 77, "question": "In the `Timing Report` window of OpenROAD GUI, as is shown in the screenshot, how to display the timing information of the paths?", "image": "q77.png", "answer": "In the Timing Report window, you can click the `Update` button to show the detailed timing information of the paths.", "reference": ["flow-scripts-tutorial_20"], "type": "GUI"}
{"id": 78, "question": "As is shown in the `Clock Tree Viewer` window, how should I change the master cell of the root buffer?", "image": "q78.png", "answer": "When using the `clock_tree_synthesis` command for CTS, you can specify the master cell of the root buffer by the `-root_buf` option.", "reference": ["clock_tree_synthesis_2"], "type": "Functionality"}
{"id": 79, "question": "The levels of the clock tree in the screenshot are not very balanced, how to make it more balanced?", "image": "q79.png", "answer": "When using the `clock_tree_synthesis` command for CTS, you can enable the option of `-balance_levels` to keep a similar number of levels in the clock tree. The script is: n\\n```tcl\\nclock_tree_synthesis -balance_levels```.\\n", "reference": ["clock_tree_synthesis_2"], "type": "Layout"}
{"id": 80, "question": "How can I adjust the routing width and spacing for the RDL in the design shown in the screenshot?", "image": "q80.png", "answer": "To adjust the routing width and spacing for the RDL, you can use the `rdl_route` command with the `-width` and `-spacing` options. For example, in the screenshot, the command `rdl_route -layer metal10 -width 4 -spacing 4` sets the routing width and spacing to 4 units. You can modify these values to suit your design requirements.", "reference": ["chip-level_connections_15"], "type": "Functionality"}
{"id": 81, "question": "How can I ensure that clock buffers are not placed on top of blockages or hard macros as shown in the screenshot?", "image": "q81.png", "answer": "To ensure that clock buffers are not placed on top of blockages or hard macros, you can use the `-obstruction_aware` option in the `clock_tree_synthesis` command. This option enables obstruction-aware buffering, which may reduce legalizer displacement and lead to better latency, skew, or timing QoR. The default value is `False`, so you need to explicitly enable it.", "reference": ["clock_tree_synthesis_2"], "type": "Layout"}
{"id": 82, "question": "How can I specify the bottom and top routing layers in the `detailed_route` command as shown in the screenshot?", "image": "q82.png", "answer": "In the `detailed_route` command, you can specify the bottom and top routing layers using the `-bottom_routing_layer` and `-top_routing_layer` options, respectively. For example, in the screenshot, `-bottom_routing_layer met1` and `-top_routing_layer met5` are used to set the routing layers from `met1` to `met5`.", "reference": ["detailed_routing_1"], "type": "Functionality"}
{"id": 83, "question": "After running the `make_tracks` command, I received a warning about the \\\"NAMESCASESENSITIVE\\\" statement being obsolete. How can I address this issue according to the document?", "image": "q83.png", "answer": "The warning about the \\\"NAMESCASESENSITIVE\\\" statement being obsolete in version 5.6 and later can be addressed by removing this statement from the LEF file if you plan to use version 5.6 or later. This will prevent the LEF parser from ignoring the statement and eliminate the warning.", "reference": ["floorplan_initialization_2"], "type": "Error Traceback"}
{"id": 84, "question": "In the screenshot, the core area seems to be centered within the die area. How can I adjust the core space to increase the margin between the core and the die on all sides?", "image": "q84.png", "answer": "To increase the margin between the core and the die on all sides, you can use the `-core_space` option in the `initialize_floorplan` command. You can specify a single value to apply the same margin on all sides or provide four values to set different margins for the bottom, top, left, and right sides. For example:\\n\\n```tcl\\ninitialize_floorplan -core_space {10 10 10 10}\\n```\\n\\nThis command will set a 10-micron space around the core on all sides. Adjust these values as needed to achieve the desired spacing.", "reference": ["floorplan_initialization_1"], "type": "Layout"}
{"id": 85, "question": "After running the `make_tracks` command, the grid pattern in my floorplan looks uneven. How can I adjust the x and y pitch to make the grid uniform?", "image": "q85.png", "answer": "To adjust the grid pattern and make it uniform, you can use the `-x_pitch` and `-y_pitch` options in the `make_tracks` command. These options allow you to set the x and y pitch values, which determine the spacing of the tracks. Ensure that the pitch values are consistent with the LEF technology file specifications to achieve a uniform grid.", "reference": ["floorplan_initialization_2"], "type": "Layout"}
{"id": 86, "question": "How can I prevent the instance from being modified by resizer commands as shown in the screenshot?", "image": "q86.png", "answer": "The name of the instance is `load_slew1`. To prevent the instance from being modified by resizer commands, you can use the `set_dont_touch` command. This command will mark the instance as \\\"Don't Touch,\\\" ensuring it remains unchanged during resizing operations. You would execute the following command in your script:\\n\\n```tcl\\nset_dont_touch load_slew1\\n```", "reference": ["gate_resizing_6"], "type": "Functionality"}
{"id": 87, "question": "How can I remove the buffer instance shown in the screenshot?", "image": "q87.png", "answer": "The name of the instance is \"u2\". To remove the buffer instance named \\\"u2,\\\" you can use the `remove_buffers` command specifying the instance name. The command would look like this:\\n\\n```tcl\\nremove_buffers u2\\n```\\n\\nThis command will remove the specified buffer instance, provided it is not associated with a don't-touch, fixed cell, or direct input port to output port feedthrough buffering.", "reference": ["gate_resizing_9"], "type": "Functionality"}
{"id": 88, "question": "How can I resolve the error shown in the screenshot during global placement?", "image": "q88.png", "answer": "The error says \\\"Could not find a resistance value for any corner\\\". To resolve this error, you need to ensure that the `set_wire_rc` command is correctly configured. This command sets the resistance and capacitance of estimated wires used for timing. Make sure that the resistance and capacitance values are properly defined for the corners in your design.", "reference": ["global_placement_1"], "type": "Error Traceback"}
{"id": 89, "question": "How can I use the `draw_route_guides` command to visualize the route segments for the net shown in the screenshot?", "image": "q89.png", "answer": "The name of the net is `clknet_2_1__leaf_clk`. To visualize the route segments for the net `clknet_2_1__leaf_clk`, you can use the `draw_route_guides` command with the `-show_segments` option. The command would look like this:\\n\\n```tcl\\ndraw_route_guides {clknet_2_1__leaf_clk} -show_segments\\n```\\n\\nThis will plot the route segments for the specified net in the OpenROAD GUI.", "reference": ["global_routing_10"], "type": "GUI"}
{"id": 90, "question": "How does the `-corner_avoidance 0` option in the `place_pins` command affect pin placement in the design shown in the screenshot?", "image": "q90.png", "answer": "The `-corner_avoidance 0` option specifies that there should be no distance from the corners within which pin placement is avoided. This means pins can be placed right up to the corners of the die, allowing for maximum utilization of the die area for pin placement.", "reference": ["pin_placement_10"], "type": "Functionality"}
{"id": 91, "question": "In the screenshot, the `add_pdn_ring` command is used with `-core_offsets 2.0`. What does this option do, and how does it affect the PDN design?", "image": "q91.png", "answer": "The `-core_offsets` option in the `add_pdn_ring` command specifies the offset of the ring from the grid region. In this case, using `-core_offsets 2.0` means that the power/ground ring will be placed 2.0 units away from the core grid boundary. This affects the PDN design by determining how close the ring is to the core, potentially impacting the routing space and connectivity.", "reference": ["power_distribution_network_generator_7"], "type": "Functionality"}
{"id": 92, "question": "How should I save the image of the routed layout shown in the screenshot? Specifically, I want to show everything in the picture.", "image": "q92.png", "answer": "You can use the `save_image` to save the image of the layout. To show everything in the picture, you should specify the value of `-display_option` to be `{* true}`.", "reference": ["gui_5"], "type": "GUI"}
{"id": 93, "question": "In OpenROAD GUI, how to highlight the instance shown in the screenshot?", "image": "q93.png", "answer": "The name of the instance in the screenshot is `_683_`. To highlight it, run the command:```tcl\\n gui::highlight_inst _683_\\n```.", "reference": ["gui_33"], "type": "GUI"}
{"id": 94, "question": "How to dump the heatmap shown in the screenshot to a file?", "image": "q94.png", "answer": "The screenshot is showing the power heatmap. To dump this heatmap to a file, you can use the `gui::dump_heatmap` command:```tcl\\n gui::dump_heatmap Power <file_name>\\n```.", "reference": ["gui_39"], "type": "GUI"}
{"id": 95, "question": "How can I remove the entire bump array that I created in the OpenROAD tool?", "image": "q95.png", "answer": "The name of the entire bump array is `DUMMY_BUMP`. To remove the entire bump array, you can use the following command:\\n\\n```\\nremove_io_bump_array -bump DUMMY_BUMP\\n```\\n\\nThis command will remove the entire bump array associated with the bump master named DUMMY_BUMP.", "reference": ["chip-level_connections_3"], "type": "Functionality"}
{"id": 96, "question": "How can I adjust the clustering size and diameter in the clock tree synthesis to optimize the number of sinks covered, as shown in the screenshot?", "image": "q96.png", "answer": "To adjust the clustering size and diameter in clock tree synthesis, you can use the `-sink_clustering_size` and `-sink_clustering_max_diameter` options. The `-sink_clustering_size` specifies the maximum number of sinks per cluster, and the `-sink_clustering_max_diameter` specifies the maximum diameter of the sink cluster. Adjusting these parameters can help optimize the number of sinks covered, as seen in the screenshot where the best clustering solution was found with a clustering size of 30 and a clustering diameter of 50.", "reference": ["clock_tree_synthesis_2"], "type": "Functionality"}
{"id": 97, "question": "Why does the `check_placement` command fail with the error \\\"detailed placement checks failed\\\" as shown in the screenshot?", "image": "q97.png", "answer": ": The `check_placement` command fails because the instance `_277_` is not aligned with the site. If detailed placement has not been performed, the placement may not meet the legal requirements. To resolve this, ensure that detailed placement is completed before running `check_placement`. You can use the `detailed_placement` command to perform detailed placement of instances to legal locations after global placement.", "reference": ["detailed_placement_5"], "type": "Layout"}
{"id": 98, "question": "How can I modify the `detailed_route` command in the screenshot to disable via generation between the specified routing layers?", "image": "q98.png", "answer": "To disable via generation between the specified routing layers in the `detailed_route` command, you can use the `-disable_via_gen` option. This option prevents the generation of vias between the bottom and top routing layers specified.", "reference": ["detailed_routing_1"], "type": "Functionality"}
{"id": 99, "question": "In the screenshot, the die and core areas are rectangular. How can I adjust the core space to increase the margin between the core and the die?", "image": "q99.png", "answer": "To increase the margin between the core and the die, you can use the `-core_space` option in the `initialize_floorplan` command. This option allows you to specify the space around the core. You can provide a single value for uniform spacing or four values for individual margins (bottom, top, left, right). For example, `-core_space 10 10 10 10` would add a 10-micron margin on all sides of the core.", "reference": ["floorplan_initialization_1"], "type": "Layout"}
{"id": 100, "question": "How does the `estimate_parasitics -placement` command affect the slack values shown in the timing report?", "image": "q100.png", "answer": "The `estimate_parasitics -placement` command estimates RC parasitics based on the placed component pin locations. This affects the slack values in the timing report by providing more accurate resistance and capacitance values, which are used to calculate the timing paths. Accurate parasitic estimation can lead to more precise slack calculations, potentially identifying timing violations or confirming that the design meets timing requirements.", "reference": ["gate_resizing_3"], "type": "Functionality"}
{"id": 101, "question": "How can I enable timing-driven placement for the standard cells shown in the screenshot, and what parameters should I consider adjusting?", "image": "q101.png", "answer": "To enable timing-driven placement for the standard cells, you can use the `-timing_driven` flag in the `global_placement` command. Consider adjusting parameters such as `-timing_driven_net_reweight_overflow`, `-timing_driven_net_weight_max`, and `-timing_driven_nets_percentage` to fine-tune the timing-driven placement. These parameters help manage the reweighting of nets based on their timing criticality and can influence the placement to optimize for timing performance.", "reference": ["global_placement_1"], "type": "Functionality"}
{"id": 102, "question": "Why is the timing-driven mode disabled in the partitioning process, and how can it be enabled?", "image": "q102.png", "answer": "The timing-driven mode is disabled because the `timing_aware_flag` is likely set to `false` or not supported in the current configuration. To enable it, ensure that the `-timing_aware_flag` is set to `true` in the `triton_part_design` command options.", "reference": ["partition_manager_7"], "type": "Error Traceback"}
{"id": 103, "question": "Why does the timing-aware partitioning process result in 451 unconstrained hyperedges when the timing-aware flag is set to true?", "image": "q103.png", "answer": "The presence of unconstrained hyperedges in a timing-aware partitioning process could be due to the lack of timing constraints or slack information for those hyperedges. The timing-aware algorithm uses slack propagation to optimize cuts for timing-critical paths. If the slack information is not available or not properly extracted, it may lead to unconstrained hyperedges. Ensuring that the timing paths and slack information are correctly extracted and utilized can help address this issue.", "reference": ["partition_manager_4"], "type": "Error Traceback"}
{"id": 104, "question": "In the screenshot, the `pdngen` command is used after defining a PDN grid and adding stripes. What does the `-skip_trim` option do if included in the `pdngen` command, and when might it be useful?", "image": "q104.png", "answer": "The `-skip_trim` option in the `pdngen` command skips the metal trim step, which attempts to remove metal stubs. This option might be useful when you want to retain all metal connections without removing any stubs, possibly for debugging purposes or when the stubs do not interfere with the design's performance.", "reference": ["power_distribution_network_generator_1"], "type": "Functionality"}
{"id": 105, "question": "In the screenshot, the spacing between the PDN stripes seems inconsistent. How can I adjust the spacing between the power and ground stripes using the `add_pdn_stripe` command?", "image": "q105.png", "answer": "To adjust the spacing between the power and ground stripes, you can use the `-spacing` option in the `add_pdn_stripe` command. This option allows you to specify the spacing between power/ground pairs within a single pitch. If you want to change the distance between the stripes, you can modify the `-spacing` value to achieve the desired configuration.", "reference": ["power_distribution_network_generator_5"], "type": "Layout"}
{"id": 106, "question": "The log  says the netlist has more than 50000 vertices and hyperedges, but why there are only 1000 timing paths?", "image": "q106.png", "answer": "For the command `triton_part_design`, the option `-top_n` controls the number of critical timing paths reported, and the default number is 1000. If you want to report more paths, set a lager num of `-top_n`. For example, to report 5000 paths, run the tcl script:\\\\n```\\\\n triton_part_design -top_n 5000\\\\n```.", "reference": ["partition_manager_7"], "type": "Error Traceback"}
{"id": 107, "question": "In my design, some of the pins are placed too close, I want to automatically spread out them, what command should I use?", "image": "q107.png", "answer": "To automatically spread out the pins that are placed too close, you can use the `-min_distance` option in the `place_pins` command. This option allows you to set the minimum distance between pins on the die boundary.", "reference": ["pin_placement_10"], "type": "Layout"}
{"id": 108, "question": "I use the `tapcell` command and find that on the same row, the distance between the endcap and tapcell is too close, how should I make them far away from each other?", "image": "q108.png", "answer": "When using the `tapcell` command, you can set a larger value for the argument `-distance`. `-distance` controls the distance between each tapcell.", "reference": ["tapcell_insertion_1"], "type": "Layout"}
{"id": 109, "question": "How can I ensure that the filler cells, like the one shown in the screenshot, are correctly placed to connect power and ground rails?", "image": "q109.png", "answer": "To ensure that filler cells are correctly placed to connect power and ground rails, you can use the `filler_placement` command. This command fills gaps between detail-placed instances using specified filler master cells. You can use wildcard matching for the filler master names, such as `FILL*`, to match various filler cell types. Additionally, you can specify a different naming prefix using the `-prefix` option if needed.", "reference": ["detailed_placement_3"], "type": "Functionality"}
{"id": 110, "question": "How can I adjust the detailed routing to reduce the shape region query size for met3, as shown in the screenshot?", "image": "q110.png", "answer": "To reduce the shape region query size for met3 during detailed routing, you can use the `-bottom_routing_layer` and `-top_routing_layer` options to limit the routing to specific layers. Additionally, adjusting the `-droute_end_iter` to control the number of iterations might help optimize the routing process and reduce congestion on specific layers like met3.", "reference": ["detailed_routing_1"], "type": "Functionality"}
{"id": 111, "question": "What could be the reason for an error when using the `-init_density_penalty 100` option in the global placement command as shown in the screenshot?", "image": "q111.png", "answer": "The `-init_density_penalty` option sets the initial density penalty, and according to the document, the default value is `8e-5` with allowed values ranging from `[1e-6, 1e6]`. Setting it to `100` is within the allowed range, but such a high value might cause issues with the placement algorithm's convergence or stability, leading to an error. It is advisable to use a value closer to the default or incrementally adjust it to observe the effects on placement.", "reference": ["global_placement_1"], "type": "Error Traceback"}
{"id": 112, "question": "How can I adjust the placement of a locked macro like \\\"mem0\\\" to ensure it adheres to specific boundary constraints?", "image": "q112.png", "answer": "To adjust the placement of a locked macro like \\\"mem0\\\" while adhering to boundary constraints, you can use the `rtl_macro_placer` command with options such as `-fence_lx`, `-fence_ly`, `-fence_ux`, and `-fence_uy` to define the global fence bounding box coordinates. This ensures that the macro is placed within the specified boundaries. Additionally, you can adjust weights like `-boundary_weight` to influence how closely the macro adheres to these constraints.", "reference": ["hierarchical_macro_placement_1"], "type": "Layout"}
{"id": 113, "question": "In the screenshot, there is an obstruction on the metal4 layer. How can I adjust the PDN stripe configuration to avoid this obstruction?", "image": "q113.png", "answer": "To adjust the PDN stripe configuration to avoid the obstruction on the metal4 layer, you can use the `add_pdn_stripe` command with the `-offset` option to shift the stripes away from the obstruction.", "reference": ["power_distribution_network_generator_5"], "type": "Layout"}
{"id": 114, "question": "How to save the clock tree in the screenshot in the image, with the corner name shown in the screenshot?", "image": "q114.png", "answer": "The name of the clock tree is \"clk\" and the corner name is \"default\". You can use the `save_clocktree_image` to save the clock tree image. The complete command is: ```tcl\\nsave_clocktree_image <file_name> -clock clk -corner default\\n```.", "reference": ["gui_6"], "type": "GUI"}
{"id": 115, "question": "I already have a voltage_source_file shown in the screenshot and I want to analyze the power grid of the net VDD, what command should I use?", "image": "q115.png", "answer": "From the screenshot, the file name of the voltage_source_file is \"Vsrc_gcd_vdd.loc\". To analyze the power grid of \"VDD\" using this file, you can use the `analyze_power_grid` command, and the complete script is ```tcl\\nanalyze_power_grid -vsrc Vsrc_gcd_vdd.loc -net VDD\\n```.", "reference": ["IR_Drop_analysis_1"], "type": "Functionality"}
{"id": 116, "question": "How should I check the power grid of the net shown in the screenshot?", "image": "q116.png", "answer": "The name of the net is `VDD`. To check the power grid of `VDD`, you can use the command `check_power_grid`. Since the layout of the screenshot is at the floorplan stage (no instances are placed), you should enable the `-floorplanning` option. The complete script should be: ```tcl\\n check_power_grid -net VDD -floorplanning\\n``.", "reference": ["IR_Drop_analysis_2"], "type": "Functionality"}
{"id": 117, "question": "I want to use the `analyze_power_grid` to analyze the power grid shown in the screenshot, which `-source_type` I should choose?", "image": "q117.png", "answer": "In the screenshot, the power straps you want to analyze are above the top layer, so you should use the `STRAPS` type for the option `-source_type`.", "reference": ["IR_Drop_analysis_1"], "type": "Functionality"}
{"id": 118, "question": "When I run `check_antennas`, the report, as shown in the screenshot, is too short and not detailed. How should I get more detailed information in the report?", "image": "q118.png", "answer": "You can enable the `-verbose` option in the `check_antennas` command to report all antenna calculations for violating nets.", "reference": ["antenna_rule_checker_1"], "type": "Error Traceback"}
{"id": 119, "question": "Given the Extraction Rules file shown in the screenshot, I want to perform parasitic extraction on current design, what should I do?", "image": "q119.png", "answer": "The file name of the Extraction Rules file is `45_patterns.rules`. To run parasitic extraction based on this file, the command is: ```tcl\\nextract_parasitics -ext_model_file 45_patterns.rules\\n```.", "reference": ["parasitics_extraction_2"], "type": "Functionality"}
{"id": 120, "question": "When I run the `restructure` command shown in the screenshot, there is a setup violation in the resulted netlist. Why is the issue and how should I revolve.", "image": "q120.png", "answer": "Restructuring can be done in two modes: area or delay. In your command, the area mode is selected. To optimize the setup (timing) performance, you should select the delay mode by the option `-target delay`.", "reference": ["restructure_1"], "type": "Functionality"}
